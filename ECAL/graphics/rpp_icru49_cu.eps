%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: passage-web-27.1.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Paul Schaffner
%%CreationDate: 6/12/12
%%BoundingBox: 0 0 480 296
%%HiResBoundingBox: 0 0 479.3564 295.2285
%%CropBox: 0 0 479.3564 295.2285
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>GPL Ghostscript 8.70</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2012-06-12T16:16:15-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-06-12T16:16:14-07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:MetadataDate>2012-06-12T16:16:15-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUos9LtX1TVJ5rS&#xA;CQyzoRMyhpDS3hXiar0HHxxVHfozTf8Alkh/5Fp/TFUp0/TtPOqXQNrCRXp6a+HywqmI0fTluZJj&#xA;bQ8XRE4+mu3AsSenflgVV/Rmm/8ALJD/AMi0/piqU/o7T/04R9Vhpw6emvj8sKpjLo2nPJCwtoQI&#xA;nLkemu4KMtOn+VXAqr+jNN/5ZIf+Raf0xV36M03/AJZIf+Raf0xVSuNG06WMKLaFSHjevpr0RwxH&#xA;TvSmKqv6M03/AJZIf+Raf0xV36M03/lkh/5Fp/TFXfozTf8Alkh/5Fp/TFVK10bTobaKE20LGNFQ&#xA;t6a7lRSvTFVX9Gab/wAskP8AyLT+mKu/Rmm/8skP/ItP6YqpW+jadFGVNtCxLyPX016O5YDp2rTF&#xA;VRtM03if9Eh6f77T+mKpXoenaeWua2sJpIesa/0wqmC6NpwuZJvq0NHREC+muxQsa9O/PAqr+jNN&#xA;/wCWSH/kWn9MVd+jNN/5ZIf+Raf0xVSl0bTnkhYW0IETlyPTXcFGWnT/ACq4qq/ozTf+WSH/AJFp&#xA;/TFXfozTf+WSH/kWn9MVUrjRtOljCi2hUh43r6a9EcMR070piqr+jNN/5ZIf+Raf0xVD3djp6qsU&#xA;VrCJ5iVjPpoeO1WelOij8aDviq6TRtNFuIksLabiAAkqrQ08W4ua/Riq7Q4vS0XT4uvp20K1HT4Y&#xA;wMVRuKuxVB2cSi8v5AW5NMoILMV2hj6KTxH3YqjMVSnTv+OrdfP+GFUycCSQIR8KUZqjYmvw7+1K&#xA;/dihUwJSn/pfH/UH68KptgV2KuxV2KuxV2KoX6zePNMkMMbJC4Tk8jKSSiv0CN/N44qta6vUkSNo&#xA;oBJJX01M7VbiKmn7rtiq/wBTUv8AfEP/ACOf/qlirvU1L/fEP/I5/wDqlirvU1L/AHxD/wAjn/6p&#xA;Yqvtp2nsop2UI0sauUB5AFlrStBWnyxVL9C+1c/8ZDhVNsCuxV2KuxV2KuxV2KuJABJNAOpxVC2Y&#xA;MrPdsP73aDptEOh/2f2vur0wKiJYllQoxYA91ZkP3qQcKqGl/wDHMtP+MMf/ABAYqicVdiqDs4lF&#xA;5fyAtyaZQQWYrtDH0UniPuxVGYqklvcLBf3chFTUBEHVmI2UfPEmkEo+KxEih7wCRzuYtzGpP+Sa&#xA;1PuenbbIcN7y+XRaXnT7YHnAiwSj7MkYC/QwFAw9jg8MdNitJbbys+tsHFJUXjIB0r129iDUZKMr&#xA;94SneSV2KuxV2KuxV2KpdK8yW+rPCrNMpYxqm7FhbpQL716Yqk/lfRdUnhhvfNFrC+qWzB7OXn67&#xA;orRIGFWjj4kOpPzxVJ7nSPzX/Scc0eqRvZLP6jQK0a8lFwzUqYKhGg4LwrUEN8RqDhVE6l5U8wm/&#xA;1S9tkt5tRkuvrmj6rJKyTW6fV0hNtw9NxxNHFK8fiLn4xuqynQItVi0a0j1ZlfUUjAuXVuYLA9eX&#xA;FK7f5OBVXTv+OVa/8YI/+IDFUHoX2rn/AIyHCqbYFdirsVdirsVdirsVQ1z+/lFoAeBHO4P+RXZP&#xA;9mQa+wPtgVE4VWyxLKhRiwB7qzIfvUg4qoaX/wAcy0/4wx/8QGKsJuZPMX+NUtLFZWsRcxyzyTzX&#xA;aN6fMtMsYeRLeRKHZVU0UdyfhKrtU/MnU7OeSKLRvX9P1hyEr7+neTWyGixMeLLAhJ8ZEHTfFWVW&#xA;N9zvryJYX5eqjOOUdUDQRn4l58tvlgVM8VSHSaT6zc3HWNTSDuDtQv8AT0Ht88HPdAR97rmnWlwL&#xA;WSUG9fgIrUUDu0olMaryKrV/q8lKkDbfAZgNkcZIvp+P1oq1nlmhEklvJbOa1hlMZYU/4xtIu/8A&#xA;rYQWMhXW2L2vmDR73Xlu7C8hu7Z1WMzwSpKhqTQEqfhZTU0Pav0VmYuwynilHmKZblrB2KuxV2Ku&#xA;xV2KqElhYyuZJbeKRz1dkUk026kYqt/Rmm/8skP/ACLT+mKu/Rmm/wDLJD/yLT+mKu/Rmm/8skP/&#xA;ACLT+mKu/Rmm/wDLJD/yLT+mKqwjSOERxqEjReKIooAAKAADFUs0L7Vz/wAZDhVNsCuxV2KuxV2K&#xA;uxVZPMsELSsCQv7KirEnYADxJ2xVZaQNFGTIQZpDzmZehcgDavYAAD2GKq2Koe7vBbLzaNmj7uGj&#xA;VR7EyOmKtaWa6ZaHxgj/AOIDFWGaILPQvPLeXtJ05LWxa2gSWbkW5LDFK6cQZBxIZjyIjPIklm5H&#xA;CrPMCpdYOx1TUkMqlRIhEQZSy/uY9yoUMP8Agjiqveu8jLZxkhpQTK60qkfQnfu3QZE9yD3ILTFV&#xA;NSuVUUVaBQOwAySUNqPk2z1DzLBrtxczh7Vbf6vbROY4/VtnnYSSU+3Vblloegr47VyxgytvhqDG&#xA;HCBzv7a/UmV1oej3UUsU9nC6TAiX4ACQ3X4hRt/nhMIno1xySHIpJaeWtAsr+SxsNPt7K1ki4NHb&#xA;RJEPY/CBuOoOHw41VJlmnI2ST7090ueV4nt597i0b0ZWO/IABkf/AGSEE+9RkcZNUejAhGZYh2Ku&#xA;xVL/ADFq36H0HUdW9NZvqFtLc+iz+mH9JC/HnR6cqU6HFWDSfnXpg09nSwk/SKxXMhgMiCEG2Wc0&#xA;Ez8C3M21AQlCWFCcNKynyv530fzJNdQ2CTI9msTTeqEArMnPiCjPuvQ9vCuBWQYq7FXYq7FWm+yf&#xA;liqVaF9q5/4yHCqG87+aW8s6E2qJafXXWRIltuZjLFzQcSqSkn244FYxqv52eX7aGRbSIz3UPxTL&#xA;6kJiCBQxaORXYSbsAoXruegw0qKk/N/QjqEtrbW1xcC3knjnKekXY28Msz+khkHPaHb5gdcaVP8A&#xA;yx5x0zzFJeR2cU8Mlj6XrpcKqMPWUuuys/Yb1wKnuKuxVCilzdc+sFsSFBB+KXoW9wm4+dfDAqKw&#xA;q7FUPfuyWzMsqwkEfvGZUA3/AJmWQfhiq3Sv+OXZ9/3Ef/EBirGNJvNI1LzvdyrZ3I1GyEsD3kLN&#xA;JYkRt6YWSQBVE/Ebx/s/jhVmOBUtgnEV3qTlpG4SKfT4UT+5j+y3Hevf4tsSaQUVZwOitLKP9ImN&#xA;ZOmwH2V2/lGRA6qAwS+/MLT9F8131ncwPJbpCxE8ZUcrpFWQ2ylyic/Rb1N26DJpdb/nPoc97Ekd&#xA;tM1tcLbrEoMCzCWdWkbmHmRQiIB3qT9kMKY0qrb/AJzeXpTwaxvY5SlrIIyLckpeIkkTAibiarIP&#xA;hB5bGg+E4KVMPLHmex8w3qX1pFLEjoapKo24sVpzjLxE7VoGOFWTPBBHd/XCWWR0WBqH4WHKqVHi&#xA;pY0+ZyFC7SZbUiMkh2KuxV2KtFVJqQCf6Yq3Qff1xV2KuxV2KuxVpvsn5YqlWhfauf8AjIcKptgV&#xA;rita0FQag+9KfqxV3FfAd/x64q4Kq9ABXrT7sVbxVQu5nVViiIE8x4RE9tqs1P8AJG/z2wKqxRJF&#xA;GsaCiqKDufpJwquxV2KqV03GEnnJH0+KJebfQvF/1Yqp6X/xzLT/AIwR/wDEBirzrSdRurn84bqM&#xA;3MUkMUckBW3kkMQEYcrG6yAATjl+8WNmXbk1GpQq9OwKx3WdTvNPttXvEsVvYLNhcSx+pwYrHBG5&#xA;+0tKjjWm+GkIDR/PqJp+kR6zbXS6jfC5jDQ20spkayKo8voxp6yrLy5rSPiPH7JISu1K/vV0/Ub3&#xA;SVnku2SOS0S3RTKxYqQCsiSUUg/GeBIWtByphVIB5t8/aTb3T3NjLqNpaxyySajewfVjI0VtHxKR&#xA;xhQiyXHIqG34iho2KrrTzd+YUkbXEGmLeQz/AOkRTm3mMaVtIaRwqvFivrmTck13oaUqqzSL1f0y&#xA;vqlTL6a+oVBClu9ASTSuKptLGskbRt9lwVNOu+AoIW28jPEC394tVkp05KaGnt4YAoKphS7FXYq7&#xA;FXYq7FXYq7FXYq032T8sVSrQvtXP/GQ4VTbArsVdirsVadlRS7EKqgliegAxVDWYaVmvHr+9AEK1&#xA;BCx9R0HVup3OALSKwq7FXYqtlMoQmJVd+ysxUfeA36sVUNL/AOOZaf8AGGP/AIgMVYek2iD8wH0I&#xA;wXP1hSuoxt9fu/QDSc5STbNJ6NfUQniop32wqznArGfM8yw6B5k9cloZ4pIY4o4DcSNJJaIoHpk8&#xA;ZKk04kAeJxV53Lp8Nv8AlXbTyxW011p+pzGGS9htoE/eSOrAxyK0a1DUoq7kA0woejeUWZreBmUK&#xA;xtoCVFKAmJdhx2+7FLJMCuxVKf8ApfH/AFB+vCqbYFUR+7uiP2JxUf66ih+9afdg6seqthZOxV2K&#xA;uxV2KuxV2KuxV2KtN9k/LFUq0L7Vz/xkOFU2wKpXN3a2sXq3MyQRVp6kjBFqe1WIGKqkciSIskbB&#xA;43AZHU1BB3BBGKt4qhLgm4nW2H90p5TnxpQhN+24r/t4FCLwq7FXYq7FVsolKERMqP2ZlLD7gV/X&#xA;iqhpf/HMtP8AjDH/AMQGKsOiS4T83JmeaYwy2IEVuFUxD4V5OSHSRd0pVo2SpoGVqjCrKtU8waPp&#xA;RpqF0tuTGZQGDElFdIyRQGtGkUfTgVJ/NsOn3fljXxc20V/EySPbwSp6kbyi0UxdPf8Aart44q84&#xA;kltbHyNpds0Ezap9bvmsBAi2qOwkBkDIZVijP7wNy6KqsaovI4UPSvKEkclvBJG3ON7aBkfiUqpi&#xA;Ug8SWK18KnFLJcCuxVKf+l8f9Qfrwqm2BVK6R2hJT+8jIeP3K70/2Q+H6cBRIKiOrorqaqwBU+IO&#xA;+FLeKuxV2KuxV2KuxV2KuxVpvsn5YqlWhfauf+Mhwqm2BWPec/LlzrlpaxxX6WEVnM11IzxyPyZY&#xA;nSP4o5rdlEbP6mzblR2rVVDWKefDqgjdbW20WGUItSpmeGOWbdY0TggeP0gByJAHYk0VZLcTGNKJ&#xA;Qyt9hT7dSadlwFBatYBFH3LNuS1K/SR95964U+StirsVdirsVdiqG0z/AI5tp/xhj/4gMVYJrM2k&#xA;wfmba/6HqH6WnNsBdW4HotCQwPNhGzempFHXnTvtQVKsv1ryvpGtSxyajG8vpRvEiq7IAsjxyN9g&#xA;qaloU79Nu5wKgJdIa6u7+Gyu1sJ4poTFPEkEsyKkMW3CWNqAjapJxVMfL+jPpNi9vJcteSSTSzyX&#xA;DRxxFmlbkarEFTqewxVZp3/HVuvn/DCqbYFdiqU/9L4/6g/XhVNsCuxVQtvgeSD+Q8kH+Q9SPuYM&#xA;B7DAGI7m7y9s7K2kuryeO2tYhylnmdY41HSrMxAH04WSxNU02S9ksEu4Xvov721WRDKvwh/iQHkP&#xA;hdTuOhGKq0U0Mys0UiyKrMjFCGAZDxZTTupFCMVX4q7FXmdhpf5rabdX8kDm6iudQaW2juLkSrHZ&#xA;fWrqT0yJmkIcxSwpVGUBRSlU5OqhdOk/NGaSSTTbyG7mknga8LXcE8ccRLmYIgLBOR2SgGw9iMKE&#xA;zg0/82I7FTDeBZlRvVjuWgldnWONVKMFK1cvIeoUFF2+JqqWdWIvBptuL1g16IUFyygBTLxHMgDt&#xA;yrgVBaF9q5/4yHCqbYFQ2p/8c27/AOMMn/EDiqvJIkaF3NFHU4qSoJG8knOUfEaMVO/EChVKjatf&#xA;iNP1UwBY96Q+ZNC1e91/Tb6xuIYks1q8DyMjykSq1KqjkAKCajr9kjixy2EgAQXP02eEccoyB9X2&#xA;be/8c+YSq10Tzvex2F3NqNnemHiyTrIQrL9ZSU0H1cgn04wAfl88kZRDfLNgiZARlH/pGv53f+Oi&#xA;tZ+XvzADtNd6nA9yInETh3ZVkDFoxw9FfgIAVyGBI8SAcTKPcxnqNNyjE1f9vX5Mg0Gy120N0uqX&#xA;ovUZ/wDRHFARGKgcgESjceNfiapBO1aZXIg8nD1E8cq4Bw96bZFx0Fqtvbvbl5FiDrQLJLwAAJ6c&#xA;nSQD7sVX6V/xy7P/AIwR/wDEBirAZZ/q/wCbqq6tLI0acvRMpcrIrojtAG9L04wwVpKcvamFXpGB&#xA;UDZL/uQ1A8HFZV+MtVD+5j+yvI0P+xxVHYqlOnf8dW6+f8MKptgV2KpT/wBL4/6g/XhVNsCuxVRu&#xA;PgeOfsh4v/qOQPwND8q4CxPehPMenQalod7Y3DKtvPEVmLoZV9Pq4KAgtVRSmFkwJ/yz0i3sHrrX&#xA;O2Sk8xmh9aaQQiGR/UAcM9VthyXjXiaeGFV0n5eaVDcR3t15gidonQcpEUkuJnfjUy15SSTAHuSF&#xA;74q3Z/lZp6iBo9aDy0i9B3hAl/dRSAUAdDU+usjbV5KrYq9LwKxvzZoj679TjttZ+oLbykzRKXKz&#xA;BqKEYRywHqKUNQakFTirE9P/AC+kgu5YNP8ANAhkslD3NtDDOiGsaoDIq3IEisY2DjfwBVhywoRv&#xA;kvS9K03zPytvMg1Bru1d4tNVZqEXLi79ZmeWUcgjDqA3EryJqKqXoTfZPywKlWhfauf+Mhwqm2BU&#xA;LqpC6ZdkmgEMlSf9Q4quqz/v3UhE/uYyCCT05MKfcKbfqA3QBZSsz+Y5NejtobQW+jxq7XWoM0Zk&#xA;mmIAVYo6uQg8W36dutlCvNy+HEMdk3PoO4eZ7/cnMUMcdeI3b7THdj8ydzkHGJti/wDyr2zLxub2&#xA;flHJHKpHEbxhQAag1HwbA9KtTrtZ4jn/AMoSqqH4/H3NWP5d2NpNbyLfXEn1aaCeNX4MB9XHFU3F&#xA;eNPprU1rvhOUlcnaMpA+kbgj5/j9HJlmVOvdiqldLyhI4SSdPhibg30NyT9eKqel/wDHMtP+MEf/&#xA;ABAYqwEnT9R/NngG9QQqHKrcRBfVtkpz9JG9UsrNwLV7FTH+1hV6PgVjGvxaxLBqCaDcSWusfXLU&#xA;wysjyQcQIeYkU/AYzHy58SG8DXFUh0/X/wAzrci0n0RpFJlYXD8Z3QMymNWYS26SUZmT9j4QG+ZV&#xA;Rs9e/MW1McY0P6w/qwRy3TqpdomSs0r8JI9w1VUBdqb7MMUM+0OXU5tHs5tURItRliR7qKNSipIw&#xA;qyAM0h+D7NeW/XAlG4qlP/S+P+oP14VTbArsVaZVZSrCqsKEHuDiqDntEvtNutNuGYCWJ7aVxTmU&#xA;kUrzHIMKlT3HXAEBiFz+Tfle45F7m8DOsyOwaGpW4YPJ1iPVhWvXt0oBK0rZPym8ufpIE3N4XnDz&#xA;s3KCgKXEc4AX0eNPUP3fD0oA2qMsfyq8uWV/Z38E10LiyI9Ms0TBh64uCGrH3lqSRQ0PGvEKALVm&#xA;WKsIn/KHyvLI8yyXEM7li08XoLJVpGkPx+lWlX6dDQEiu+G1Rei+RNJ0PW4LmynuPWFlLaqW9Cgi&#xA;VoqCixKSa0NSe29anAqta/l55dt73Tr1Ec3Wmww28UtUDSLbrxjMpVVLMAF3/wAkDpUFVkrfZPyx&#xA;VKtC+1c/8ZDhVMpriGEDm1GbZEG7MfBR1OBBICX6hIk2n3EkjqQYpPSiQ8gGCHdiK1I+4fjh4D1Y&#xA;iQKMEyyyKQrlEbiPhZfj6E7hRRR/nUYeFnxbKnqv/vl+tOqdPH7XTGvNjZ7nFrihoiE12+M/Z8fs&#xA;9fbHZd3Fbj4qOg3+Gqk0Hv8AFvjsu6Gtb6K9nvYoZzys5hBKFAFG4LJ+1yrs4GTnjMBEkfUL/Q1Y&#xA;8omZAH6TR+QP6UUYixbk7FWp8IPGlPAqA345XbdTjAm+7bgA/G3QfTjxI4VG6t7T0iZUZhQKWQOZ&#xA;CPCqfGcPEV4Q7S/+OZaf8YI/+IDIskNB5c0S31FtRhtVjvXdpZJVLDk7gqWZa8SaM1Kjbk1PtNVV&#xA;MsVQdnIjXd/FRqiVSaq3Ghhj6MRxOKsEtfKH5jW0FtbWOtW1tBaSRD6sjsYxEiKTHT0Qw+Lkevxc&#xA;hXZeJKu0by9+YCalbm519Zxb3Vu9zCHYI1tGpEsdPRDl2J5cjJRttgF+JV6PgV2KpT/0vj/qD9eF&#xA;U2wK7FXYqozh0YToCxUUkQblk9h4r1H04Cg96qrKyhlIZWFVYbgg9xhSh5P+OlB/xhm/4nFiqJxV&#xA;2KqZuIa0Dcjx5cV+I8fGgrkuEseIIO5vI4tQgZ6Rqbecq8rLGteUexqeQ+7AaHMqZNDWbVxyinSV&#xA;aEEW6SXPxexiG9Kiu2R44+9d1N9SlKBhDc7qdmiZENSRuFWSRfbb54+IO5eGX4pL9FS5eWVeMojM&#xA;hq0ZWgBNPj9R6sKf5FcTI/il4PNOLaKKFwsVg8e1fVPpE1PYtzLHrjxHzSMcRyU9UlvRpd5zijBM&#xA;ThAJGNao3/FY70+ivhiLZ0ERGb9YQPRi5jt6rkH/AGRjr+GCyppcy37KCrxRN3Uq0g6DavKPvXtj&#xA;ujZspe86iWMR0+yY2Jrv35/ww7rs0I7wueUyenXYJGQw3r1ZmHTb7ONFdkNa6ZbQ3N/LbD6tLcyK&#xA;ZniCjkwQHlQgryPLc03y7JklKMQTyDRixRjKRA+o7/JEm2mKKv1uUMOr0iqevX4Kd+w7ZRXm322b&#xA;RWZXeSVmXoQ7IPpVCqn6Rh4VtY9vbwj1SZjxAWivM+1OP2QWr86e+PCtu0v/AI5lp/xhj/4gMKET&#xA;iqjeXlrZWk13dSLDbW6NLNK2yqiCrE/IYqp2bKbi+AIJWdQR4H0IziqT+X9Z1C68y+ZNLurP0o9O&#xA;nga3vQ3wTpcW6sAFO4aPjxbfc9MVRmnf8dW6+f8ADCqa8lLFARyABK13ANaGn0HAreKpT/0vj/qD&#xA;9eFU1LKpUEgFjRQT1NCaD6BgVvFXYq0zKoqxCioFSabk0A+k4qoSQTpU2rqldzG4JSpNSRQgrX7v&#xA;bAAxIPRCyNqRv4QIoQ/oS8T6jkfairUcB+vCj1eSvw1V6gyRQ/DQMgL79zRgv6/vxvy/H2LUlq2X&#xA;rJza4MiuoAKhShWnbmJPtdzXfGz3rwd6qLC2pRgzr/I7u6/8CxIwUnhCkLeCHUofSjSOsM1eCha0&#xA;aLwxASAAjFZWFVIYVIqDXcGhH0HClzfZPyxVKtC+1c/8ZDhVNeSligI5AAla7gGtDT6DgVB6j8dj&#xA;evX4VhkVdzSvE8j/AAwpPJG4ENFlUqCQCxooJ6mhNB9AxVLvMGkNqth9WjmNvJzBEyipCmqSU9zG&#xA;zU8DQ9syNNm8OVkX+NvtcbVYDlhwg8J7/v8As5ee6ST+WPMDKvp3kfqBY2aQM0fKcSrK8lAjdwyq&#xA;K9G+jMqOqxdR/ZVVz+fucOWjzED1C9vLewSeR8696vdaV5reNuWqInqCVTRilGk2i4sqA7MaZCOb&#xA;AD9Pd+3q2TwZyPq7/wBnRMoNLuU8wS6k7r6T2ywBBu1Qwbf4e2+/Leu42GUSyjwhDrduRHCfFM+n&#xA;DX4/H3JpmO5LsVQulMraXZspBUwRkEbggoMVRWKoHXYdPn0a9t9SnFtYXELw3U7OsYWOUcG+N/hX&#xA;ZqVxVLfr1raahMqa5YIbuWF/QnCmYs8KRoAVmjB9QRcl+DftiqY2rT3EQurW6tZYpwGWeKIsrjoC&#xA;GWWjYqpR2F3bSzXRu4QGHJy0TBVAG5r6uKoY6xYRuLttb09UuIecbEqFaKEsWdT626jkanpiqaen&#xA;qX+/4f8AkS//AFVxVDfo2++ufWvrMXOlOPotT/k5iqjdXsSSv9Y1WyifTh9ZuVYBTFGUZecoM3wL&#xA;xatTiqP9PUv9/wAP/Il/+quKu9PUv9/w/wDIl/8AqriqHvhcJCn1q9toI2lhVGeMqDIZV9NAWl6u&#xA;9FA71oMVRHp6l/v+H/kS/wD1VxVTa11AzpN9Yh5IrIB6LUo5Un/dv+RirppLuBQ815bRKzLGrPGy&#xA;gvIwRFBMvVmYADucVUdMeSayi+o6ha3VvGPSWaJDIpMfwkcllIqKb4qivT1L/f8AD/yJf/qriqhc&#xA;rcQVvbm8t4YreNw8kkZSNUYqWZiZdqcPHFULZalatO1lbaxYTXPqzAwJRpBIrF5U4LNWqctx274q&#xA;mJi1Igj14d/+KW/6q4qgktpdLguLqe+t4rdeUs800ZREUCrMzGUAAeJxVDS63psFxO8uvadFKA0M&#xA;odkHBrfkzggzbFOfxA9MVTBre8ubMxrdQtDNHxWRYmaqutKhvVNdj1xVW9PUv9/w/wDIl/8Aqriq&#xA;WXerWSSAzaxYpJaGWR46DkPRjYS1X1uXwK1W8MVRlhc3d9Y297b3ERguo0miJgcHjIoZagy7GhxV&#xA;X9PUv9/w/wDIl/8AqriqA1O9it1Ed/qtlaU4z/vQIzxjkX4vjmHw8yqk++Kt6bqlxqMt9FBMgfT7&#xA;g2twJLdlPqKqvsDLy4kOCCRv1G2Ko709S/3/AA/8iX/6q4qg7+7urSjT6pY2i8WetxEVqqU5NU3C&#xA;bLyFcVa0HU9JkD6RY3IuZNJit45mBHR4g0bCnUMu9Rt2rUGiqbYqhNV0yHUrM2szvGvqRTJJGQHW&#xA;SCVZo2HIMvwvGDuMVY9/yrPy960EpkuT9WblCnqKAF9KOApsvIqYbeJOtfgBrUsWVZFpWnQ6bp8F&#xA;jAzPFbrwRpCCxFa70Cj8MVX39lb31jcWNwOVvdRPDMo2JSRSrCvyOKsel/LzRpUlSW4unEyTJIS0&#xA;YJa4FwJJNox8R+vTn+Uc+my0VZQOnj74q7FUhv8AyZpl5c6jcNNcRtqkUsF0sbJx4TwR28vHkjUL&#xA;JbxfSop1aqqfAEAAmpHc9/uxV2KoXUtOh1C3WCZmREmguAUIB528yTp1Dbc4xXFUVirsVQ9/ZJeW&#xA;4hd2jAkilV048g0Miyr9oMPtIK7YqhdA0Cw0Ow+pWRdo6hi8pDMeKLGtaBR8KRqvTt474qlXnnzV&#xA;e+X49Ma0iila8u1hljlqWaOlWWIBlrIR9kb16U3xVF2c480eXbyG8tZbCG7FxYyxllMlFrBMVNCP&#xA;thwppuBy74qoaf5C0Ow1katC0xulleYBmUpydXQCgUbIszhd/wBretBRVkeKobVNPh1LTLvTp2ZY&#xA;L2GS3lZCAwSVSjcSQwrQ+GKsbl/LLy/Jerema5W5juPrkTq8dEmV2kjYApT908jFQdt/irjasmsL&#xA;G3sLC2sbZSttaRJBCpJJCRqFUVO52GKq+KpCnkvR11ttYYyyXLyNM8blTGWaNohVeNaKkr0Ff2t6&#xA;7UVTuGGGCFIYI1ihjUJHGgCqqgUAUDYAYqvxVJPMXlHTNfkhkvXlVoI3ii9JlWgleN3PxK259ED5&#xA;V774qmllYWVjEYrOBLeNmLusaheTmgLtT7TGm5O+Kq+KpbrOg22rCD15ZYjbOJYWiKAiRWV0f41f&#xA;dHjDDt41xVU0rRNK0mBIbC2SELFDAZAo9R47dBHEJH+0/BBQcjiqOxV2KoT62Yp50mWQrzHolInc&#xA;cOC90U/tcuuKrv0hb/yTf8iJv+aMVd+kLf8Akm/5ETf80YqpNqI+tR0Sb0OD8/3Ev26px/Yr05Yq&#xA;q/pC3/km/wCRE3/NGKu/SFv/ACTf8iJv+aMVUptRHqQemk3DmfW/cS/Y4N4p/Nx6Yqq/pC3/AJJv&#xA;+RE3/NGKu/SFv/JN/wAiJv8AmjFVK61EfVZvQSb1+Del+4l+3Q8eqU64qq/pC3/km/5ETf8ANGKu&#xA;/SFv/JN/yIm/5oxV36Qt/wCSb/kRN/zRiqlbaiPTPrJNz5yU/cS/Y5nh0T+WmKrnubF5I5XgkaSE&#xA;kxO1tKWQsOJKkptUGm2KuiurKFBHDDJHGCSES3lUVY1JoE7k1xVbDqI9Sf1Em4cx6P7iX7HBfBP5&#xA;uXXFVX9IW/8AJN/yIm/5oxV36Qt/5Jv+RE3/ADRiqk2oj61HRJvQ4Pz/AHEv26px/Yr05Yqq/pC3&#xA;/km/5ETf80Yq79IW/wDJN/yIm/5oxVSm1EepB6aTcOZ9b9xL9jg3in83Hpiqr+kLf+Sb/kRN/wA0&#xA;Yq79IW/8k3/Iib/mjFVK61EfVZvQSb1+Del+4l+3Q8eqU64qq/pC3/km/wCRE3/NGKu/SFv/ACTf&#xA;8iJv+aMVd+kLf+Sb/kRN/wA0YqvsmlezgeaomaNDJUcTyKitRtTfFVbFUu1i8v4rG/GnRCS/gt/V&#xA;t1YFgztzAHEFSfsdK74qgdD1LzBc3VtFqFt6KfUg923pMgF1VDRWLMKFH+z2IO+Kp/irsVQjzXg1&#xA;eKBVrZtbyPI3BvhlV4wg514/ErN8NK7Yqi8VdirHfNeo+aLSWEaLbLcI8LmUmJpCkn1i3RTsyA/u&#xA;XmbjUfZ+gqp7avcPbQvcIIrhkUzRg8grkDkoPehxVVxVj3mvUvMlmq/oW2Fy7RMSDE8nFxNCo+yy&#xA;j+7dzSo6V3pQqrvLmp+YpdPnm161S3uRdLDDHGCgMbiJSd2evGV3UNtyAr3xVP8AFVK4mMZiQD4p&#xA;mKKeoBCM9aDr9nFVLSZ7qfS7Oa7Qx3UkMbXCFSnGQqC44tuKNXbFUVirsVYx5W1Tzfd3rR6zZrBb&#xA;CEESCNoz6nGIg/E7fbd5gV/ZCL/NirJ8Vca0264qwCDX/wAy3uLRTpkfovLCly7QOhCMiF2FZNqu&#xA;ZAaj4Aq9eWFWdrMDcvBTdER+XjzLCn/CYFVMVSy7vr8ajZQ2sfK3+tNDftxLFYvqryq4YEBf3vBd&#xA;69cVTPFXYqk3me+12ztYX0a3W5uGaYPGyM4+G0meGvFl4hrhYlJ8D26hVF6JNqM2lW8uooI7xlPq&#xA;qFKdyFbiSxUstCVJ26YqjsVSXzVe+YLS0hfRLdbm4Yzh42RnHw2kzw7hlpW4WNT8+3XFUF5d1fzX&#xA;J+kZNcs1hgtoke2ZUMRcgMW6vJXkgRjsOBJXfsqyfFVKa0tZyDNDHKRsC6hqfeMVU/0Zpv8AyyQ/&#xA;8i0/pirv0Zpv/LJD/wAi0/pirv0Zpv8AyyQ/8i0/piqX6+LHTNGu7+Owt5ZLeMusbIoBPTcgHFWB&#xA;x/mtoUNwItR0aKJIVufrUkCpIGeK4iigEBYIjB0nV3JYcNl3OFU3g81wxyXf6Q0a3hj05p0vyi1K&#xA;/V0mnZ4wyLzU26wOD4ygGlDiqeeWb7TNcivZksLdIbe4WGEhYn5I9vDOGJTmlf31PhYjaoOBU5/R&#xA;mm/8skP/ACLT+mKu/Rmm/wDLJD/yLT+mKu/Rmm/8skP/ACLT+mKtrpunKwZbWFWUhlYRqCCNwRti&#xA;qIxVZNBBOoSaNZVBqFdQwr40OKqP6M03/lkh/wCRaf0xV36M03/lkh/5Fp/TFWAyefdNt5W+uaTb&#xA;RQQ8nkCjnPJEpuKtbwiMl+C2vxGvU07blCsfONvNcJ9T0OF7a6tlvLB5EUGRTzhMRKB0Ev1r0Y6A&#xA;naQHscUpt5c1zRdevXS00+FbM2yXEUjLEXJZ2QqyxmQL9kbE8h0YA4qyL9Gab/yyQ/8AItP6YFd+&#xA;jNN/5ZIf+Raf0xVVhtreAEQxJEDuQiha/diqpiqhJYWMrmSS2ieRvtOyKSaCm5I8MVW/ozTf+WSH&#xA;/kWn9MVS3zCtvp2mfWLXT7Wa5ee2t4klUInK5uI4KsyqxovqV6YqxD/HUKQ3EDaNaXOqr9ce1hta&#xA;SRPHp80kU4LMqN6jCByiqD+zyK1wqmVr5q0lzbrPpsCNqEsVvp7BYwDJcBpYxJ6np8T9XaGQoCX+&#xA;IgAkYqyHQl07U9E0/UmsYImvraG5MYRSFMsYfjWgrTlgVHfozTf+WSH/AJFp/TFXHS9MIobSGn/G&#xA;NP6YqicVdirsVdirsVU7m2trqCS3uYknt5QVlhkUOjKeoZWqCMVVAAAABQDYAYq6grWm42B+eKqU&#xA;FrawNM0EKRNcP6s7IoUyScQvN6D4m4qBU9gMVVcVdirsVdiqTeb7fW7jQJ4tDd4tVLRG2lRlXiRK&#xA;pZm5lQy8a8l7jbFWKWcn5uQOxe0jk+s3JluFkkhkWGJ1q6QH1EJ4VCxBgASCXpWuFUXFe/mudHvz&#xA;NY2w1UNb/UhGIjEaysLmnKf7KxKpQuQanp4KqE1/+cPpkx2FsG/ehQVhLbf3JK/WwPiNeY5dONN+&#xA;VFVG3P5rQKY7bS7K1h+sIFSKK3QiF2rPMSLll9R2JYjjsafaqaKu+ufnIIYYzYQu6onrSsLViz+s&#xA;eRAFxGBSEqen94D+zTFWe2lvGeF7LbJDqE0KJcOFX1Nvi9MuOVQrMaDkRgVE4q7FXYq7FXYq7FVK&#xA;5tbW6i9G6hSeHkr+nKodeUbB0ajAiqsoYeBFcVVcVWvFE6OjorJKCJFIBDAih5DvttirUEENvDHB&#xA;BGsUEShIokAVFRRRVVRsAB0GKr8Vdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:A075FF2C11206811808399C81683386A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:A075FF2C11206811808399C81683386A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>4ec454ee-8eb7-11ec-0000-155894ebe8d9</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9E75FF2C11206811808399C81683386A</stRef:instanceID>
            <stRef:documentID>xmp.did:9E75FF2C11206811808399C81683386A</stRef:documentID>
            <stRef:originalDocumentID>4ec454ee-8eb7-11ec-0000-155894ebe8d9</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9E75FF2C11206811808399C81683386A</stEvt:instanceID>
                  <stEvt:when>2012-06-12T15:34:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A075FF2C11206811808399C81683386A</stEvt:instanceID>
                  <stEvt:when>2012-06-12T16:16:15-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">passagerpp.dvi</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>6.847222</stDim:w>
            <stDim:h>4.416667</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=0 Y=100 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=18 M=100 Y=100 K=9 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>17.914093</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>9.210348</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=0 Y=0 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=27 M=69 Y=100 K=16 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>26.950478</xmpG:cyan>
                           <xmpG:magenta>68.847183</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>16.363775</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=27 M=69 Y=100 K=33 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>26.950478</xmpG:cyan>
                           <xmpG:magenta>68.847183</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>33.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=100 Y=0 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>26.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=64 M=10 Y=0 K=33 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>64.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>33.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=41 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>40.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=0 K=0 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -295.229 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 295.229 li
479.356 295.229 li
479.356 0 li
cp
clp
[1 0 0 1 0 0 ]ct
107.957 215.667 mo
116.858 215.667 li
116.858 .29248 li
107.957 .29248 li
107.957 215.667 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .050781 cmyk
f
109.584 215.667 mo
114.906 215.667 li
114.906 .29248 li
109.584 .29248 li
109.584 215.667 li
cp
0 0 0 .119141 cmyk
f
111.257 215.667 mo
111.257 .29248 li
113.279 .362793 li
113.279 215.738 li
0 0 0 .199219 cmyk
f
299.072 215.667 mo
307.973 215.667 li
307.973 .29248 li
299.072 .29248 li
299.072 215.667 li
cp
0 0 0 .050781 cmyk
f
300.698 215.667 mo
306.021 215.667 li
306.021 .29248 li
300.698 .29248 li
300.698 215.667 li
cp
0 0 0 .119141 cmyk
f
302.372 215.667 mo
302.372 .29248 li
304.394 .362793 li
304.394 215.738 li
0 0 0 .199219 cmyk
f
61.1021 215.667 mo
70.0034 215.667 li
70.0034 .29248 li
61.1021 .29248 li
61.1021 215.667 li
cp
0 0 0 .050781 cmyk
f
62.729 215.667 mo
68.0518 215.667 li
68.0518 .29248 li
62.729 .29248 li
62.729 215.667 li
cp
0 0 0 .119141 cmyk
f
64.4019 215.667 mo
64.4019 .29248 li
66.4248 .362793 li
66.4248 215.738 li
0 0 0 .199219 cmyk
f
205.744 294.851 mo
206.205 294.803 206.501 294.698 206.632 294.536 cv
206.763 294.374 206.828 293.997 206.828 293.406 cv
206.828 288.855 li
206.828 288.451 206.764 288.188 206.637 288.065 cv
206.51 287.943 206.221 287.871 205.771 287.849 cv
205.771 287.641 li
207.971 287.641 li
210.533 293.226 li
213.032 287.641 li
215.25 287.641 li
215.25 287.849 li
214.835 287.878 214.568 287.954 214.449 288.076 cv
214.329 288.198 214.269 288.458 214.269 288.855 cv
214.269 293.839 li
214.269 294.247 214.329 294.509 214.449 294.624 cv
214.568 294.738 214.835 294.814 215.25 294.851 cv
215.25 295.059 li
212.128 295.059 li
212.128 294.851 li
212.578 294.814 212.859 294.733 212.97 294.607 cv
213.081 294.481 213.136 294.182 213.136 293.707 cv
213.136 288.675 li
210.279 295.059 li
210.126 295.059 li
207.318 288.938 li
207.318 293.406 li
207.318 294.02 207.407 294.418 207.585 294.604 cv
207.701 294.725 207.961 294.807 208.364 294.851 cv
208.364 295.059 li
205.744 295.059 li
205.744 294.851 li
cp
0 0 0 1 cmyk
f
217.265 289.989 mo
217.265 293.493 li
217.265 293.741 217.299 293.94 217.368 294.09 cv
217.502 294.367 217.75 294.506 218.109 294.506 cv
218.356 294.506 218.598 294.424 218.833 294.26 cv
218.968 294.168 219.104 294.042 219.242 293.882 cv
219.242 290.882 li
219.242 290.601 219.188 290.416 219.079 290.329 cv
218.97 290.241 218.752 290.188 218.425 290.17 cv
218.425 289.989 li
220.185 289.989 li
220.185 293.844 li
220.185 294.092 220.229 294.262 220.317 294.355 cv
220.407 294.448 220.595 294.489 220.882 294.479 cv
220.882 294.632 li
220.682 294.687 220.535 294.728 220.44 294.755 cv
220.347 294.782 220.188 294.832 219.967 294.905 cv
219.872 294.938 219.665 295.017 219.346 295.141 cv
219.328 295.141 219.316 295.133 219.313 295.116 cv
219.31 295.1 219.308 295.08 219.308 295.059 cv
219.308 294.177 li
219.061 294.473 218.835 294.691 218.632 294.834 cv
218.323 295.053 217.997 295.163 217.651 295.163 cv
217.335 295.163 217.038 295.05 216.758 294.823 cv
216.475 294.6 216.333 294.226 216.333 293.699 cv
216.333 290.854 li
216.333 290.564 216.271 290.371 216.148 290.273 cv
216.068 290.212 215.897 290.168 215.636 290.143 cv
215.636 289.989 li
217.265 289.989 li
cp
f
222.958 290.537 mo
222.595 290.869 222.413 291.442 222.413 292.256 cv
222.413 292.905 222.559 293.512 222.852 294.073 cv
223.145 294.636 223.552 294.916 224.071 294.916 cv
224.479 294.916 224.793 294.729 225.013 294.353 cv
225.233 293.977 225.343 293.484 225.343 292.874 cv
225.343 292.243 225.203 291.648 224.923 291.09 cv
224.643 290.531 224.237 290.252 223.706 290.252 cv
223.419 290.252 223.169 290.348 222.958 290.537 cv
cp
222.089 290.677 mo
222.548 290.175 223.139 289.924 223.861 289.924 cv
224.581 289.924 225.176 290.161 225.648 290.636 cv
226.12 291.11 226.356 291.741 226.356 292.529 cv
226.356 293.256 226.128 293.887 225.67 294.424 cv
225.213 294.96 224.62 295.229 223.895 295.229 cv
223.197 295.229 222.606 294.971 222.124 294.456 cv
221.641 293.941 221.399 293.296 221.399 292.519 cv
221.399 291.792 221.629 291.179 222.089 290.677 cv
cp
f
226.896 294.905 mo
227.153 294.872 227.334 294.808 227.438 294.711 cv
227.541 294.614 227.593 294.398 227.593 294.063 cv
227.593 291.281 li
227.593 291.05 227.571 290.887 227.527 290.793 cv
227.459 290.655 227.317 290.586 227.103 290.586 cv
227.07 290.586 227.036 290.588 227.002 290.592 cv
226.968 290.596 226.925 290.601 226.874 290.608 cv
226.874 290.416 li
227.023 290.373 227.375 290.26 227.931 290.077 cv
228.443 289.907 li
228.468 289.907 228.483 289.917 228.489 289.935 cv
228.495 289.953 228.497 289.979 228.497 290.012 cv
228.497 290.816 li
228.831 290.502 229.092 290.287 229.28 290.17 cv
229.563 289.991 229.856 289.902 230.161 289.902 cv
230.407 289.902 230.633 289.973 230.835 290.115 cv
231.227 290.393 231.423 290.888 231.423 291.599 cv
231.423 294.155 li
231.423 294.418 231.475 294.608 231.579 294.725 cv
231.684 294.842 231.858 294.901 232.104 294.905 cv
232.104 295.059 li
229.777 295.059 li
229.777 294.905 li
230.043 294.869 230.228 294.795 230.333 294.684 cv
230.438 294.572 230.491 294.33 230.491 293.958 cv
230.491 291.621 li
230.491 291.307 230.434 291.047 230.317 290.841 cv
230.202 290.635 229.989 290.531 229.679 290.531 cv
229.466 290.531 229.249 290.604 229.028 290.75 cv
228.905 290.834 228.747 290.973 228.552 291.166 cv
228.552 294.232 li
228.552 294.495 228.61 294.671 228.727 294.76 cv
228.843 294.85 229.025 294.898 229.276 294.905 cv
229.276 295.059 li
226.896 295.059 li
226.896 294.905 li
cp
f
235.24 294.916 mo
235.523 294.891 235.712 294.844 235.807 294.774 cv
235.952 294.668 236.024 294.456 236.024 294.139 cv
236.024 291.309 li
236.024 291.039 235.989 290.861 235.919 290.777 cv
235.848 290.693 235.73 290.651 235.567 290.651 cv
235.491 290.651 235.434 290.655 235.396 290.663 cv
235.357 290.67 235.313 290.683 235.262 290.701 cv
235.262 290.51 li
235.654 290.378 li
235.796 290.331 236.028 290.245 236.352 290.121 cv
236.675 289.997 236.846 289.935 236.863 289.935 cv
236.882 289.935 236.893 289.944 236.896 289.962 cv
236.899 289.98 236.901 290.015 236.901 290.066 cv
236.901 290.805 li
237.261 290.477 237.571 290.249 237.833 290.124 cv
238.095 289.998 238.363 289.935 238.64 289.935 cv
239.014 289.935 239.312 290.063 239.533 290.318 cv
239.648 290.457 239.745 290.645 239.821 290.882 cv
240.09 290.608 240.324 290.405 240.524 290.274 cv
240.869 290.048 241.222 289.935 241.581 289.935 cv
242.165 289.935 242.556 290.174 242.752 290.651 cv
242.864 290.922 242.921 291.349 242.921 291.933 cv
242.921 294.205 li
242.921 294.464 242.979 294.64 243.093 294.732 cv
243.207 294.826 243.413 294.887 243.711 294.916 cv
243.711 295.059 li
241.254 295.059 li
241.254 294.905 li
241.57 294.876 241.777 294.813 241.878 294.714 cv
241.978 294.615 242.027 294.414 242.027 294.111 cv
242.027 291.752 li
242.027 291.398 241.989 291.138 241.913 290.97 cv
241.778 290.67 241.516 290.521 241.123 290.521 cv
240.887 290.521 240.653 290.599 240.421 290.756 cv
240.286 290.847 240.121 290.993 239.925 291.193 cv
239.925 293.997 li
239.925 294.292 239.977 294.517 240.08 294.67 cv
240.184 294.823 240.402 294.905 240.736 294.916 cv
240.736 295.059 li
238.236 295.059 li
238.236 294.916 li
238.581 294.872 238.801 294.788 238.896 294.664 cv
238.99 294.54 239.037 294.233 239.037 293.745 cv
239.037 292.215 li
239.037 291.654 239.001 291.269 238.928 291.057 cv
238.809 290.699 238.554 290.521 238.165 290.521 cv
237.944 290.521 237.726 290.582 237.512 290.704 cv
237.298 290.826 237.108 290.985 236.945 291.183 cv
236.945 294.177 li
236.945 294.455 236.993 294.646 237.09 294.752 cv
237.186 294.858 237.396 294.913 237.719 294.916 cv
237.719 295.059 li
235.24 295.059 li
235.24 294.916 li
cp
f
245.58 290.537 mo
245.217 290.869 245.035 291.442 245.035 292.256 cv
245.035 292.905 245.181 293.512 245.474 294.073 cv
245.767 294.636 246.174 294.916 246.693 294.916 cv
247.102 294.916 247.415 294.729 247.635 294.353 cv
247.855 293.977 247.965 293.484 247.965 292.874 cv
247.965 292.243 247.825 291.648 247.545 291.09 cv
247.265 290.531 246.859 290.252 246.328 290.252 cv
246.041 290.252 245.791 290.348 245.58 290.537 cv
cp
244.711 290.677 mo
245.17 290.175 245.761 289.924 246.483 289.924 cv
247.203 289.924 247.798 290.161 248.271 290.636 cv
248.742 291.11 248.979 291.741 248.979 292.529 cv
248.979 293.256 248.75 293.887 248.292 294.424 cv
247.835 294.96 247.242 295.229 246.517 295.229 cv
245.819 295.229 245.229 294.971 244.746 294.456 cv
244.263 293.941 244.021 293.296 244.021 292.519 cv
244.021 291.792 244.251 291.179 244.711 290.677 cv
cp
f
249.496 294.916 mo
249.779 294.891 249.968 294.844 250.063 294.774 cv
250.208 294.668 250.28 294.456 250.28 294.139 cv
250.28 291.309 li
250.28 291.039 250.245 290.861 250.175 290.777 cv
250.104 290.693 249.986 290.651 249.823 290.651 cv
249.747 290.651 249.689 290.655 249.651 290.663 cv
249.613 290.67 249.568 290.683 249.518 290.701 cv
249.518 290.51 li
249.91 290.378 li
250.052 290.331 250.284 290.245 250.607 290.121 cv
250.931 289.997 251.102 289.935 251.119 289.935 cv
251.138 289.935 251.148 289.944 251.152 289.962 cv
251.155 289.98 251.157 290.015 251.157 290.066 cv
251.157 290.805 li
251.517 290.477 251.827 290.249 252.089 290.124 cv
252.351 289.998 252.619 289.935 252.896 289.935 cv
253.27 289.935 253.567 290.063 253.789 290.318 cv
253.904 290.457 254.001 290.645 254.077 290.882 cv
254.346 290.608 254.58 290.405 254.78 290.274 cv
255.125 290.048 255.478 289.935 255.837 289.935 cv
256.421 289.935 256.812 290.174 257.008 290.651 cv
257.12 290.922 257.177 291.349 257.177 291.933 cv
257.177 294.205 li
257.177 294.464 257.234 294.64 257.349 294.732 cv
257.463 294.826 257.669 294.887 257.967 294.916 cv
257.967 295.059 li
255.51 295.059 li
255.51 294.905 li
255.826 294.876 256.033 294.813 256.134 294.714 cv
256.233 294.615 256.283 294.414 256.283 294.111 cv
256.283 291.752 li
256.283 291.398 256.245 291.138 256.169 290.97 cv
256.034 290.67 255.771 290.521 255.379 290.521 cv
255.143 290.521 254.909 290.599 254.677 290.756 cv
254.542 290.847 254.377 290.993 254.181 291.193 cv
254.181 293.997 li
254.181 294.292 254.232 294.517 254.336 294.67 cv
254.439 294.823 254.658 294.905 254.992 294.916 cv
254.992 295.059 li
252.492 295.059 li
252.492 294.916 li
252.837 294.872 253.057 294.788 253.151 294.664 cv
253.246 294.54 253.293 294.233 253.293 293.745 cv
253.293 292.215 li
253.293 291.654 253.257 291.269 253.184 291.057 cv
253.064 290.699 252.81 290.521 252.421 290.521 cv
252.2 290.521 251.981 290.582 251.768 290.704 cv
251.554 290.826 251.364 290.985 251.201 291.183 cv
251.201 294.177 li
251.201 294.455 251.249 294.646 251.346 294.752 cv
251.441 294.858 251.651 294.913 251.975 294.916 cv
251.975 295.059 li
249.496 295.059 li
249.496 294.916 li
cp
f
259.285 290.876 mo
259.169 291.073 259.085 291.321 259.034 291.621 cv
261.333 291.621 li
261.293 291.256 261.225 290.984 261.126 290.805 cv
260.948 290.484 260.65 290.323 260.233 290.323 cv
259.819 290.323 259.503 290.508 259.285 290.876 cv
cp
261.895 290.457 mo
262.279 290.813 262.472 291.318 262.472 291.971 cv
259.013 291.971 li
259.049 292.816 259.239 293.432 259.585 293.817 cv
259.93 294.203 260.338 294.396 260.811 294.396 cv
261.191 294.396 261.513 294.296 261.774 294.096 cv
262.036 293.896 262.277 293.611 262.499 293.244 cv
262.689 293.31 li
262.541 293.773 262.262 294.203 261.854 294.598 cv
261.445 294.992 260.944 295.19 260.353 295.19 cv
259.67 295.19 259.143 294.931 258.771 294.413 cv
258.398 293.895 258.212 293.298 258.212 292.623 cv
258.212 291.889 258.428 291.256 258.86 290.723 cv
259.292 290.19 259.855 289.924 260.549 289.924 cv
261.061 289.924 261.51 290.102 261.895 290.457 cv
cp
f
263.146 294.905 mo
263.404 294.872 263.585 294.808 263.688 294.711 cv
263.792 294.614 263.844 294.398 263.844 294.063 cv
263.844 291.281 li
263.844 291.05 263.822 290.887 263.778 290.793 cv
263.71 290.655 263.568 290.586 263.354 290.586 cv
263.321 290.586 263.287 290.588 263.253 290.592 cv
263.219 290.596 263.176 290.601 263.125 290.608 cv
263.125 290.416 li
263.274 290.373 263.626 290.26 264.182 290.077 cv
264.694 289.907 li
264.719 289.907 264.734 289.917 264.74 289.935 cv
264.746 289.953 264.748 289.979 264.748 290.012 cv
264.748 290.816 li
265.082 290.502 265.343 290.287 265.531 290.17 cv
265.814 289.991 266.107 289.902 266.412 289.902 cv
266.658 289.902 266.884 289.973 267.086 290.115 cv
267.478 290.393 267.674 290.888 267.674 291.599 cv
267.674 294.155 li
267.674 294.418 267.726 294.608 267.83 294.725 cv
267.935 294.842 268.109 294.901 268.354 294.905 cv
268.354 295.059 li
266.028 295.059 li
266.028 294.905 li
266.294 294.869 266.479 294.795 266.584 294.684 cv
266.689 294.572 266.742 294.33 266.742 293.958 cv
266.742 291.621 li
266.742 291.307 266.685 291.047 266.568 290.841 cv
266.453 290.635 266.24 290.531 265.93 290.531 cv
265.717 290.531 265.5 290.604 265.279 290.75 cv
265.156 290.834 264.998 290.973 264.803 291.166 cv
264.803 294.232 li
264.803 294.495 264.861 294.671 264.978 294.76 cv
265.094 294.85 265.276 294.898 265.527 294.905 cv
265.527 295.059 li
263.146 295.059 li
263.146 294.905 li
cp
f
271.361 290.012 mo
271.361 290.405 li
270.25 290.405 li
270.239 293.559 li
270.239 293.836 270.263 294.046 270.311 294.188 cv
270.397 294.44 270.568 294.565 270.822 294.565 cv
270.953 294.565 271.066 294.535 271.163 294.473 cv
271.259 294.411 271.369 294.313 271.492 294.177 cv
271.634 294.298 li
271.514 294.462 li
271.325 294.718 271.125 294.898 270.915 295.004 cv
270.704 295.109 270.501 295.163 270.305 295.163 cv
269.876 295.163 269.586 294.971 269.434 294.588 cv
269.35 294.38 269.308 294.092 269.308 293.723 cv
269.308 290.405 li
268.714 290.405 li
268.696 290.395 268.683 290.384 268.673 290.373 cv
268.664 290.361 268.659 290.348 268.659 290.329 cv
268.659 290.292 268.668 290.264 268.685 290.244 cv
268.7 290.224 268.752 290.178 268.84 290.104 cv
269.09 289.896 269.271 289.728 269.382 289.598 cv
269.492 289.469 269.753 289.126 270.163 288.571 cv
270.21 288.571 270.238 288.575 270.247 288.583 cv
270.257 288.59 270.261 288.617 270.261 288.665 cv
270.261 290.012 li
271.361 290.012 li
cp
f
273.35 289.989 mo
273.35 293.493 li
273.35 293.741 273.385 293.94 273.453 294.09 cv
273.588 294.367 273.835 294.506 274.194 294.506 cv
274.441 294.506 274.683 294.424 274.919 294.26 cv
275.053 294.168 275.189 294.042 275.327 293.882 cv
275.327 290.882 li
275.327 290.601 275.272 290.416 275.164 290.329 cv
275.055 290.241 274.837 290.188 274.51 290.17 cv
274.51 289.989 li
276.27 289.989 li
276.27 293.844 li
276.27 294.092 276.313 294.262 276.403 294.355 cv
276.492 294.448 276.68 294.489 276.967 294.479 cv
276.967 294.632 li
276.767 294.687 276.62 294.728 276.525 294.755 cv
276.431 294.782 276.273 294.832 276.052 294.905 cv
275.957 294.938 275.75 295.017 275.431 295.141 cv
275.412 295.141 275.401 295.133 275.398 295.116 cv
275.395 295.1 275.393 295.08 275.393 295.059 cv
275.393 294.177 li
275.146 294.473 274.92 294.691 274.717 294.834 cv
274.408 295.053 274.081 295.163 273.736 295.163 cv
273.421 295.163 273.123 295.05 272.843 294.823 cv
272.56 294.6 272.418 294.226 272.418 293.699 cv
272.418 290.854 li
272.418 290.564 272.356 290.371 272.233 290.273 cv
272.153 290.212 271.982 290.168 271.721 290.143 cv
271.721 289.989 li
273.35 289.989 li
cp
f
277.38 294.916 mo
277.663 294.891 277.852 294.844 277.946 294.774 cv
278.092 294.668 278.164 294.456 278.164 294.139 cv
278.164 291.309 li
278.164 291.039 278.129 290.861 278.059 290.777 cv
277.987 290.693 277.87 290.651 277.707 290.651 cv
277.631 290.651 277.573 290.655 277.535 290.663 cv
277.497 290.67 277.452 290.683 277.401 290.701 cv
277.401 290.51 li
277.794 290.378 li
277.936 290.331 278.168 290.245 278.491 290.121 cv
278.814 289.997 278.985 289.935 279.003 289.935 cv
279.021 289.935 279.032 289.944 279.036 289.962 cv
279.039 289.98 279.041 290.015 279.041 290.066 cv
279.041 290.805 li
279.4 290.477 279.711 290.249 279.973 290.124 cv
280.234 289.998 280.503 289.935 280.779 289.935 cv
281.153 289.935 281.451 290.063 281.673 290.318 cv
281.788 290.457 281.885 290.645 281.961 290.882 cv
282.229 290.608 282.464 290.405 282.664 290.274 cv
283.009 290.048 283.361 289.935 283.721 289.935 cv
284.305 289.935 284.695 290.174 284.892 290.651 cv
285.004 290.922 285.061 291.349 285.061 291.933 cv
285.061 294.205 li
285.061 294.464 285.118 294.64 285.232 294.732 cv
285.347 294.826 285.553 294.887 285.851 294.916 cv
285.851 295.059 li
283.394 295.059 li
283.394 294.905 li
283.71 294.876 283.917 294.813 284.018 294.714 cv
284.117 294.615 284.167 294.414 284.167 294.111 cv
284.167 291.752 li
284.167 291.398 284.129 291.138 284.053 290.97 cv
283.918 290.67 283.655 290.521 283.263 290.521 cv
283.026 290.521 282.793 290.599 282.561 290.756 cv
282.426 290.847 282.261 290.993 282.064 291.193 cv
282.064 293.997 li
282.064 294.292 282.116 294.517 282.22 294.67 cv
282.323 294.823 282.542 294.905 282.876 294.916 cv
282.876 295.059 li
280.376 295.059 li
280.376 294.916 li
280.721 294.872 280.94 294.788 281.035 294.664 cv
281.13 294.54 281.177 294.233 281.177 293.745 cv
281.177 292.215 li
281.177 291.654 281.141 291.269 281.067 291.057 cv
280.948 290.699 280.693 290.521 280.305 290.521 cv
280.084 290.521 279.865 290.582 279.651 290.704 cv
279.438 290.826 279.248 290.985 279.085 291.183 cv
279.085 294.177 li
279.085 294.455 279.133 294.646 279.229 294.752 cv
279.325 294.858 279.535 294.913 279.858 294.916 cv
279.858 295.059 li
277.38 295.059 li
277.38 294.916 li
cp
f
29.5103 207.316 mo
29.5117 207.324 29.5127 207.343 29.5127 207.373 cv
29.5127 213.304 li
29.5127 213.557 29.5801 213.718 29.7144 213.787 cv
29.8491 213.856 30.1006 213.897 30.4688 213.91 cv
30.4688 214.048 li
27.6987 214.048 li
27.6987 213.9 li
28.0942 213.881 28.3521 213.827 28.4731 213.738 cv
28.5942 213.649 28.6548 213.457 28.6548 213.162 cv
28.6548 208.599 li
28.6548 208.441 28.6348 208.322 28.5957 208.24 cv
28.5566 208.158 28.4717 208.117 28.3408 208.117 cv
28.2559 208.117 28.1455 208.14 28.0098 208.188 cv
27.874 208.235 27.7476 208.286 27.6299 208.338 cv
27.6299 208.2 li
29.4292 207.279 li
29.4878 207.279 li
29.501 207.295 29.5083 207.308 29.5103 207.316 cv
cp
f
23.7363 131.998 mo
23.7378 132.006 23.7388 132.025 23.7388 132.055 cv
23.7388 137.986 li
23.7388 138.239 23.8062 138.4 23.9404 138.469 cv
24.0752 138.538 24.3267 138.58 24.6948 138.592 cv
24.6948 138.73 li
21.9248 138.73 li
21.9248 138.583 li
22.3203 138.563 22.5781 138.509 22.6992 138.42 cv
22.8203 138.332 22.8809 138.139 22.8809 137.844 cv
22.8809 133.281 li
22.8809 133.124 22.8608 133.004 22.8218 132.922 cv
22.7827 132.84 22.6978 132.799 22.5669 132.799 cv
22.4819 132.799 22.3716 132.822 22.2358 132.87 cv
22.1001 132.917 21.9736 132.968 21.856 133.021 cv
21.856 132.882 li
23.6553 131.961 li
23.7139 131.961 li
23.7271 131.978 23.7344 131.99 23.7363 131.998 cv
cp
f
29.1558 137.75 mo
29.3354 137.222 29.4253 136.458 29.4253 135.457 cv
29.4253 134.659 29.3716 134.022 29.2637 133.546 cv
29.061 132.66 28.6816 132.217 28.126 132.217 cv
27.5703 132.217 27.1899 132.673 26.9839 133.586 cv
26.876 134.072 26.8223 134.711 26.8223 135.506 cv
26.8223 136.251 26.8774 136.847 26.9888 137.293 cv
27.1978 138.126 27.5903 138.543 28.1655 138.543 cv
28.646 138.543 28.9761 138.279 29.1558 137.75 cv
cp
29.9009 133.139 mo
30.231 133.779 30.396 134.515 30.396 135.346 cv
30.396 136 30.2949 136.615 30.0923 137.193 cv
29.7095 138.28 29.0479 138.824 28.1064 138.824 cv
27.4629 138.824 26.9331 138.53 26.5181 137.942 cv
26.0737 137.315 25.8516 136.462 25.8516 135.385 cv
25.8516 134.538 26 133.809 26.2974 133.198 cv
26.6997 132.367 27.3174 131.951 28.1509 131.951 cv
28.9023 131.951 29.4858 132.347 29.9009 133.139 cv
cp
f
18.52 52.1987 mo
18.5215 52.207 18.5225 52.2256 18.5225 52.2554 cv
18.5225 58.187 li
18.5225 58.4399 18.5898 58.6011 18.7241 58.6699 cv
18.8589 58.7388 19.1104 58.7803 19.4785 58.793 cv
19.4785 58.9312 li
16.7085 58.9312 li
16.7085 58.7832 li
17.104 58.7637 17.3618 58.7095 17.4829 58.6206 cv
17.604 58.5322 17.6646 58.3398 17.6646 58.0444 cv
17.6646 53.4819 li
17.6646 53.3242 17.6445 53.2046 17.6055 53.1226 cv
17.5664 53.0405 17.4814 52.9995 17.3506 52.9995 cv
17.2656 52.9995 17.1553 53.0229 17.0195 53.0708 cv
16.8838 53.1182 16.7573 53.1685 16.6396 53.2212 cv
16.6396 53.083 li
18.439 52.1616 li
18.4976 52.1616 li
18.5107 52.1782 18.5181 52.1904 18.52 52.1987 cv
cp
f
23.9395 57.9512 mo
24.1191 57.4229 24.209 56.6582 24.209 55.6572 cv
24.209 54.8599 24.1553 54.2231 24.0474 53.7471 cv
23.8447 52.8608 23.4653 52.418 22.9097 52.418 cv
22.354 52.418 21.9736 52.874 21.7676 53.7866 cv
21.6597 54.2725 21.606 54.9121 21.606 55.7065 cv
21.606 56.4517 21.6611 57.0474 21.7725 57.4937 cv
21.9814 58.3271 22.374 58.7441 22.9492 58.7441 cv
23.4297 58.7441 23.7598 58.4795 23.9395 57.9512 cv
cp
24.6846 53.3394 mo
25.0146 53.9795 25.1797 54.7153 25.1797 55.5464 cv
25.1797 56.2002 25.0786 56.8159 24.876 57.394 cv
24.4932 58.481 23.8315 59.0249 22.8901 59.0249 cv
22.2466 59.0249 21.7168 58.731 21.3018 58.1431 cv
20.8574 57.5156 20.6353 56.6631 20.6353 55.5859 cv
20.6353 54.7383 20.7837 54.0093 21.0811 53.3984 cv
21.4834 52.5674 22.1011 52.1519 22.9346 52.1519 cv
23.686 52.1519 24.2695 52.5479 24.6846 53.3394 cv
cp
f
28.96 57.9512 mo
29.1396 57.4229 29.2295 56.6582 29.2295 55.6572 cv
29.2295 54.8599 29.1758 54.2231 29.0679 53.7471 cv
28.8652 52.8608 28.4858 52.418 27.9302 52.418 cv
27.3745 52.418 26.9941 52.874 26.7881 53.7866 cv
26.6802 54.2725 26.6265 54.9121 26.6265 55.7065 cv
26.6265 56.4517 26.6816 57.0474 26.793 57.4937 cv
27.002 58.3271 27.3945 58.7441 27.9697 58.7441 cv
28.4502 58.7441 28.7803 58.4795 28.96 57.9512 cv
cp
29.7051 53.3394 mo
30.0352 53.9795 30.2002 54.7153 30.2002 55.5464 cv
30.2002 56.2002 30.0991 56.8159 29.8965 57.394 cv
29.5137 58.481 28.8521 59.0249 27.9106 59.0249 cv
27.2671 59.0249 26.7373 58.731 26.3223 58.1431 cv
25.8779 57.5156 25.6558 56.6631 25.6558 55.5859 cv
25.6558 54.7383 25.8042 54.0093 26.1016 53.3984 cv
26.5039 52.5674 27.1216 52.1519 27.9551 52.1519 cv
28.7065 52.1519 29.29 52.5479 29.7051 53.3394 cv
cp
f
7.86328 182.524 mo
8.36426 182.334 8.76367 182.112 9.06152 181.857 cv
9.58105 181.413 9.84033 180.86 9.84033 180.201 cv
9.84033 179.844 9.72803 179.535 9.50293 179.274 cv
9.27783 179.014 8.96338 178.884 8.56055 178.884 cv
8.19727 178.884 7.88135 179.015 7.61279 179.277 cv
7.44189 179.448 7.18604 179.809 6.84473 180.359 cv
6.25098 181.315 li
6.06934 181.603 5.88574 181.833 5.70068 182.004 cv
5.34863 182.321 4.95996 182.48 4.53516 182.48 cv
3.97217 182.48 3.50342 182.292 3.12939 181.917 cv
2.75537 181.541 2.56836 181.042 2.56836 180.422 cv
2.56836 180.167 2.63135 179.859 2.75635 179.5 cv
2.88184 179.14 2.94434 178.935 2.94434 178.884 cv
2.94434 178.745 2.91162 178.649 2.84619 178.596 cv
2.78076 178.543 2.68848 178.502 2.56836 178.473 cv
2.56836 178.243 li
4.94336 177.997 li
4.94336 178.265 li
4.22803 178.448 3.72852 178.74 3.44531 179.144 cv
3.16211 179.547 3.02051 179.946 3.02051 180.34 cv
3.02051 180.646 3.11035 180.914 3.29004 181.142 cv
3.47021 181.37 3.71973 181.484 4.03906 181.484 cv
4.32617 181.484 4.57129 181.396 4.77441 181.222 cv
4.98145 181.047 5.19775 180.775 5.42285 180.407 cv
6.02734 179.422 li
6.40527 178.806 6.75195 178.372 7.06787 178.119 cv
7.3877 177.87 7.76514 177.745 8.20068 177.745 cv
8.78564 177.745 9.27393 177.967 9.66602 178.41 cv
10.0586 178.854 10.2544 179.42 10.2544 180.11 cv
10.2544 180.457 10.189 180.819 10.0586 181.196 cv
9.92773 181.574 9.8623 181.791 9.8623 181.845 cv
9.8623 181.977 9.90234 182.065 9.98193 182.111 cv
10.062 182.156 10.1475 182.187 10.2383 182.201 cv
10.2383 182.447 li
7.86328 182.781 li
7.86328 182.524 li
cp
f
5.08496 174.159 mo
5.47705 174.159 li
5.47705 175.276 li
8.61475 175.287 li
8.89111 175.287 9.09961 175.263 9.24121 175.216 cv
9.4917 175.128 9.61719 174.957 9.61719 174.701 cv
9.61719 174.57 9.58643 174.456 9.52441 174.359 cv
9.46289 174.262 9.36475 174.152 9.23047 174.028 cv
9.3501 173.885 li
9.51367 174.006 li
9.76807 174.196 9.94775 174.396 10.0527 174.608 cv
10.1582 174.82 10.2109 175.024 10.2109 175.221 cv
10.2109 175.652 10.0205 175.944 9.63916 176.097 cv
9.43213 176.181 9.14502 176.223 8.77832 176.223 cv
5.47705 176.223 li
5.47705 176.82 li
5.46631 176.838 5.45557 176.852 5.44482 176.861 cv
5.43359 176.87 5.41943 176.875 5.40088 176.875 cv
5.36475 176.875 5.33643 176.866 5.31641 176.85 cv
5.29688 176.833 5.25049 176.781 5.17773 176.694 cv
4.9707 176.442 4.80273 176.26 4.67383 176.149 cv
4.54492 176.038 4.20459 175.776 3.65234 175.363 cv
3.65234 175.316 3.65625 175.288 3.66357 175.279 cv
3.6709 175.27 3.69775 175.265 3.74512 175.265 cv
5.08496 175.265 li
5.08496 174.159 li
cp
f
5.60791 172.045 mo
5.93848 172.411 6.50879 172.594 7.31836 172.594 cv
7.96484 172.594 8.56787 172.446 9.12695 172.152 cv
9.68604 171.858 9.96582 171.449 9.96582 170.926 cv
9.96582 170.517 9.77881 170.202 9.40479 169.98 cv
9.03076 169.759 8.54053 169.648 7.93408 169.648 cv
7.30566 169.648 6.71387 169.789 6.1582 170.071 cv
5.60254 170.353 5.32471 170.76 5.32471 171.294 cv
5.32471 171.583 5.41943 171.833 5.60791 172.045 cv
cp
5.74707 172.919 mo
5.24756 172.458 4.99805 171.864 4.99805 171.138 cv
4.99805 170.415 5.23389 169.816 5.70605 169.342 cv
6.17822 168.868 6.80664 168.63 7.59082 168.63 cv
8.31348 168.63 8.94189 168.86 9.47559 169.32 cv
10.0093 169.78 10.2764 170.375 10.2764 171.104 cv
10.2764 171.805 10.0205 172.398 9.5083 172.884 cv
8.99609 173.369 8.35352 173.612 7.58008 173.612 cv
6.85742 173.612 6.24609 173.381 5.74707 172.919 cv
cp
f
9.65283 166.077 mo
9.77441 165.889 9.83496 165.667 9.83496 165.412 cv
9.83496 165.018 9.64014 164.681 9.25049 164.401 cv
8.86035 164.123 8.31738 163.983 7.62109 163.983 cv
6.95361 163.983 6.45508 164.128 6.125 164.418 cv
5.79492 164.708 5.62988 165.045 5.62988 165.428 cv
5.62988 165.698 5.7124 165.944 5.87744 166.167 cv
6.04248 166.39 6.20459 166.501 6.36426 166.501 cv
9.10059 166.501 li
9.34717 166.406 9.53125 166.265 9.65283 166.077 cv
cp
12.3569 168.236 mo
12.3354 167.896 12.2627 167.679 12.1392 167.586 cv
12.0156 167.494 11.8213 167.448 11.5562 167.448 cv
6.32715 167.448 li
6.05127 167.448 5.87402 167.482 5.7959 167.549 cv
5.71777 167.617 5.67871 167.744 5.67871 167.93 cv
5.67871 167.97 5.68066 168.007 5.68408 168.042 cv
5.68799 168.077 5.69531 168.127 5.70605 168.192 cv
5.52637 168.192 li
5.35742 167.672 li
5.354 167.654 5.22852 167.288 4.98145 166.572 cv
4.98145 166.554 4.98975 166.54 5.00586 166.531 cv
5.02246 166.522 5.0415 166.518 5.06348 166.518 cv
5.79834 166.518 li
5.55859 166.276 5.38086 166.065 5.26465 165.882 cv
5.06152 165.554 4.95996 165.216 4.95996 164.87 cv
4.95996 164.366 5.17285 163.933 5.59912 163.569 cv
6.02539 163.207 6.6084 163.025 7.34863 163.025 cv
8.07422 163.025 8.73291 163.243 9.32373 163.679 cv
9.91553 164.115 10.2109 164.664 10.2109 165.324 cv
10.2109 165.528 10.1855 165.706 10.1348 165.855 cv
10.0586 166.088 9.91895 166.304 9.71533 166.501 cv
11.502 166.501 li
11.8687 166.501 12.0938 166.441 12.1772 166.32 cv
12.2607 166.2 12.3169 165.937 12.3462 165.532 cv
12.5371 165.532 li
12.5371 168.236 li
12.3569 168.236 li
cp
f
9.65283 160.471 mo
9.77441 160.283 9.83496 160.062 9.83496 159.806 cv
9.83496 159.412 9.64014 159.075 9.25049 158.796 cv
8.86035 158.517 8.31738 158.377 7.62109 158.377 cv
6.95361 158.377 6.45508 158.522 6.125 158.813 cv
5.79492 159.103 5.62988 159.439 5.62988 159.823 cv
5.62988 160.093 5.7124 160.339 5.87744 160.562 cv
6.04248 160.784 6.20459 160.896 6.36426 160.896 cv
9.10059 160.896 li
9.34717 160.801 9.53125 160.659 9.65283 160.471 cv
cp
12.3569 162.631 mo
12.3354 162.29 12.2627 162.074 12.1392 161.981 cv
12.0156 161.889 11.8213 161.842 11.5562 161.842 cv
6.32715 161.842 li
6.05127 161.842 5.87402 161.876 5.7959 161.944 cv
5.71777 162.011 5.67871 162.138 5.67871 162.324 cv
5.67871 162.364 5.68066 162.402 5.68408 162.437 cv
5.68799 162.471 5.69531 162.521 5.70605 162.587 cv
5.52637 162.587 li
5.35742 162.067 li
5.354 162.049 5.22852 161.682 4.98145 160.967 cv
4.98145 160.948 4.98975 160.935 5.00586 160.926 cv
5.02246 160.917 5.0415 160.912 5.06348 160.912 cv
5.79834 160.912 li
5.55859 160.671 5.38086 160.459 5.26465 160.277 cv
5.06152 159.948 4.95996 159.611 4.95996 159.264 cv
4.95996 158.761 5.17285 158.327 5.59912 157.964 cv
6.02539 157.601 6.6084 157.419 7.34863 157.419 cv
8.07422 157.419 8.73291 157.637 9.32373 158.074 cv
9.91553 158.51 10.2109 159.058 10.2109 159.719 cv
10.2109 159.923 10.1855 160.1 10.1348 160.25 cv
10.0586 160.483 9.91895 160.698 9.71533 160.896 cv
11.502 160.896 li
11.8687 160.896 12.0938 160.835 12.1772 160.715 cv
12.2607 160.594 12.3169 160.332 12.3462 159.927 cv
12.5371 159.927 li
12.5371 162.631 li
12.3569 162.631 li
cp
f
9.95508 156.861 mo
9.91846 156.47 9.85254 156.224 9.75586 156.122 cv
9.65967 156.02 9.39941 155.968 8.97461 155.968 cv
6.37598 155.968 li
6.14014 155.968 5.97656 155.985 5.88574 156.018 cv
5.73682 156.072 5.6626 156.188 5.6626 156.362 cv
5.6626 156.403 5.66602 156.442 5.67334 156.48 cv
5.68066 156.519 5.70996 156.629 5.76074 156.812 cv
5.5918 156.812 li
5.51563 156.576 li
5.30859 155.938 5.15234 155.492 5.04688 155.24 cv
5.00342 155.138 4.98145 155.072 4.98145 155.043 cv
5.00684 155.036 5.03418 155.032 5.06348 155.032 cv
8.97461 155.032 li
9.38818 155.032 9.64795 154.982 9.75342 154.882 cv
9.85889 154.781 9.92578 154.554 9.95508 154.2 cv
10.1074 154.2 li
10.1074 156.861 li
9.95508 156.861 li
cp
2.67139 155.99 mo
2.55908 155.881 2.50293 155.746 2.50293 155.585 cv
2.50293 155.428 2.55811 155.294 2.66846 155.183 cv
2.77881 155.071 2.91357 155.016 3.07227 155.016 cv
3.22754 155.016 3.36084 155.071 3.4707 155.183 cv
3.58105 155.294 3.63623 155.428 3.63623 155.585 cv
3.63623 155.746 3.58105 155.881 3.4707 155.99 cv
3.36084 156.1 3.22754 156.154 3.07227 156.154 cv
2.91699 156.154 2.7832 156.1 2.67139 155.99 cv
cp
f
9.95508 153.762 mo
9.92236 153.503 9.85791 153.322 9.76172 153.218 cv
9.66553 153.114 9.4502 153.062 9.11621 153.062 cv
6.34863 153.062 li
6.11816 153.062 5.95605 153.083 5.8623 153.127 cv
5.72559 153.197 5.65723 153.339 5.65723 153.554 cv
5.65723 153.587 5.65869 153.621 5.6626 153.656 cv
5.66602 153.69 5.67139 153.733 5.67871 153.784 cv
5.48828 153.784 li
5.44482 153.635 5.33203 153.281 5.15039 152.722 cv
4.98145 152.208 li
4.98145 152.182 4.99072 152.167 5.00879 152.161 cv
5.02686 152.156 5.05225 152.153 5.08496 152.153 cv
5.88574 152.153 li
5.57373 151.818 5.35938 151.556 5.24316 151.366 cv
5.06494 151.082 4.97607 150.787 4.97607 150.481 cv
4.97607 150.233 5.04688 150.007 5.18848 149.803 cv
5.46484 149.41 5.95654 149.213 6.66455 149.213 cv
9.2085 149.213 li
9.47021 149.213 9.65918 149.161 9.7749 149.056 cv
9.8916 148.951 9.95117 148.775 9.95508 148.529 cv
10.1074 148.529 li
10.1074 150.866 li
9.95508 150.866 li
9.91846 150.6 9.84521 150.414 9.73438 150.308 cv
9.62354 150.202 9.38281 150.149 9.0127 150.149 cv
6.68652 150.149 li
6.37451 150.149 6.11572 150.208 5.91016 150.324 cv
5.70508 150.439 5.60254 150.654 5.60254 150.966 cv
5.60254 151.18 5.67529 151.397 5.82031 151.619 cv
5.90381 151.743 6.04199 151.902 6.23438 152.098 cv
9.28467 152.098 li
9.54639 152.098 9.72168 152.04 9.81055 151.923 cv
9.89941 151.806 9.94775 151.622 9.95508 151.37 cv
10.1074 151.37 li
10.1074 153.762 li
9.95508 153.762 li
cp
f
11.7471 146.742 mo
11.8633 146.397 11.9214 146.002 11.9214 145.557 cv
11.9214 144.951 11.8169 144.458 11.6079 144.079 cv
11.3994 143.699 11.1426 143.509 10.8374 143.509 cv
10.5942 143.509 10.4326 143.663 10.3525 143.97 cv
10.3052 144.16 10.2778 144.521 10.271 145.051 cv
10.2671 145.186 10.2627 145.329 10.2573 145.479 cv
10.252 145.628 10.2456 145.766 10.2383 145.89 cv
10.2344 145.97 10.2197 146.1 10.1943 146.279 cv
10.1689 146.458 10.1475 146.592 10.1294 146.68 cv
10.1294 146.724 10.2437 146.83 10.4722 147 cv
10.7046 147.172 10.9189 147.259 11.1152 147.259 cv
11.4204 147.259 11.6309 147.086 11.7471 146.742 cv
cp
8.00488 145.004 mo
7.83057 144.785 7.52734 144.675 7.09521 144.675 cv
6.75 144.675 6.36182 144.764 5.9292 144.941 cv
5.49707 145.118 5.28125 145.413 5.28125 145.825 cv
5.28125 146.183 5.4502 146.429 5.7876 146.564 cv
5.96582 146.633 6.18555 146.668 6.44678 146.668 cv
6.89014 146.668 7.2876 146.56 7.63965 146.345 cv
7.99219 146.129 8.16797 145.851 8.16797 145.507 cv
8.16797 145.307 8.11377 145.139 8.00488 145.004 cv
cp
7.69434 147.322 mo
7.41455 147.506 7.10059 147.599 6.75195 147.599 cv
6.32715 147.599 5.92383 147.429 5.54248 147.089 cv
5.16113 146.75 4.9707 146.27 4.9707 145.649 cv
4.9707 145.383 5.0332 145.089 5.15869 144.768 cv
5.28369 144.447 5.34668 144.139 5.34668 143.843 cv
5.34668 143.767 5.34375 143.651 5.33838 143.496 cv
5.33301 143.34 5.33008 143.228 5.33008 143.159 cv
5.33008 143.093 li
5.77148 143.093 li
5.77148 144.04 li
5.92383 143.975 6.05664 143.923 6.16895 143.887 cv
6.37988 143.825 6.57959 143.794 6.76807 143.794 cv
7.18213 143.794 7.5625 143.966 7.90967 144.311 cv
8.25635 144.656 8.42969 145.121 8.42969 145.705 cv
8.42969 145.795 8.41357 145.96 8.38086 146.197 cv
8.38086 146.303 8.46973 146.443 8.64746 146.619 cv
8.82568 146.794 8.9707 146.881 9.0835 146.881 cv
9.19971 146.881 9.28467 146.753 9.33936 146.498 cv
9.37549 146.33 9.39404 146.143 9.39404 145.938 cv
9.39404 144.999 9.44629 144.361 9.55176 144.025 cv
9.72266 143.473 10.0894 143.197 10.6523 143.197 cv
11.2261 143.197 11.6836 143.52 12.0249 144.164 cv
12.3662 144.808 12.5371 145.458 12.5371 146.115 cv
12.5371 146.713 12.416 147.188 12.1748 147.538 cv
11.9331 147.889 11.6797 148.064 11.4146 148.064 cv
11.2842 148.064 11.1563 148.018 11.0308 147.925 cv
10.9053 147.832 10.7192 147.649 10.4722 147.377 cv
10.1509 147.017 li
10.0854 146.952 li
10.0205 147.118 9.95654 147.243 9.89502 147.326 cv
9.78223 147.471 9.65332 147.544 9.5083 147.544 cv
9.37402 147.544 9.22607 147.481 9.06445 147.355 cv
8.90283 147.229 8.64014 146.96 8.27734 146.547 cv
8.16797 146.879 7.97412 147.138 7.69434 147.322 cv
cp
f
9.65283 137.737 mo
9.77441 137.549 9.83496 137.327 9.83496 137.072 cv
9.83496 136.678 9.64014 136.341 9.25049 136.062 cv
8.86035 135.783 8.31738 135.643 7.62109 135.643 cv
6.95361 135.643 6.45508 135.788 6.125 136.078 cv
5.79492 136.368 5.62988 136.705 5.62988 137.088 cv
5.62988 137.358 5.7124 137.604 5.87744 137.827 cv
6.04248 138.05 6.20459 138.161 6.36426 138.161 cv
9.10059 138.161 li
9.34717 138.066 9.53125 137.925 9.65283 137.737 cv
cp
12.3569 139.896 mo
12.3354 139.556 12.2627 139.339 12.1392 139.247 cv
12.0156 139.154 11.8213 139.108 11.5562 139.108 cv
6.32715 139.108 li
6.05127 139.108 5.87402 139.142 5.7959 139.209 cv
5.71777 139.277 5.67871 139.404 5.67871 139.59 cv
5.67871 139.63 5.68066 139.667 5.68408 139.702 cv
5.68799 139.737 5.69531 139.787 5.70605 139.853 cv
5.52637 139.853 li
5.35742 139.333 li
5.354 139.314 5.22852 138.948 4.98145 138.232 cv
4.98145 138.214 4.98975 138.2 5.00586 138.191 cv
5.02246 138.182 5.0415 138.178 5.06348 138.178 cv
5.79834 138.178 li
5.55859 137.937 5.38086 137.725 5.26465 137.542 cv
5.06152 137.214 4.95996 136.876 4.95996 136.53 cv
4.95996 136.026 5.17285 135.593 5.59912 135.229 cv
6.02539 134.867 6.6084 134.685 7.34863 134.685 cv
8.07422 134.685 8.73291 134.903 9.32373 135.339 cv
9.91553 135.775 10.2109 136.324 10.2109 136.984 cv
10.2109 137.188 10.1855 137.366 10.1348 137.515 cv
10.0586 137.749 9.91895 137.964 9.71533 138.161 cv
11.502 138.161 li
11.8687 138.161 12.0938 138.101 12.1772 137.98 cv
12.2607 137.86 12.3169 137.597 12.3462 137.192 cv
12.5371 137.192 li
12.5371 139.896 li
12.3569 139.896 li
cp
f
5.60791 132.494 mo
5.93848 132.859 6.50879 133.042 7.31836 133.042 cv
7.96484 133.042 8.56787 132.895 9.12695 132.601 cv
9.68604 132.307 9.96582 131.898 9.96582 131.375 cv
9.96582 130.965 9.77881 130.65 9.40479 130.429 cv
9.03076 130.208 8.54053 130.097 7.93408 130.097 cv
7.30566 130.097 6.71387 130.238 6.1582 130.52 cv
5.60254 130.801 5.32471 131.208 5.32471 131.743 cv
5.32471 132.031 5.41943 132.282 5.60791 132.494 cv
cp
5.74707 133.368 mo
5.24756 132.906 4.99805 132.313 4.99805 131.586 cv
4.99805 130.864 5.23389 130.265 5.70605 129.791 cv
6.17822 129.316 6.80664 129.079 7.59082 129.079 cv
8.31348 129.079 8.94189 129.309 9.47559 129.769 cv
10.0093 130.229 10.2764 130.823 10.2764 131.553 cv
10.2764 132.254 10.0205 132.847 9.5083 133.333 cv
8.99609 133.818 8.35352 134.061 7.58008 134.061 cv
6.85742 134.061 6.24609 133.83 5.74707 133.368 cv
cp
f
5.19971 123.525 mo
5.2251 123.744 5.26172 123.907 5.30957 124.013 cv
5.35742 124.119 5.45313 124.171 5.59619 124.171 cv
5.67334 124.171 5.75342 124.16 5.83594 124.136 cv
5.91895 124.112 6.01514 124.08 6.12549 124.04 cv
8.70361 123.044 li
6.34863 122.072 li
6.24707 122.028 6.11377 121.981 5.94824 121.93 cv
5.7832 121.879 5.65869 121.853 5.5752 121.853 cv
5.44092 121.853 5.3501 121.895 5.30273 121.979 cv
5.25586 122.063 5.22119 122.185 5.19971 122.346 cv
5.04688 122.346 li
5.04688 120.956 li
5.19971 120.956 li
5.21777 121.047 5.26123 121.122 5.33008 121.18 cv
5.39941 121.238 5.5625 121.32 5.82031 121.426 cv
10.1182 123.178 li
10.1509 123.192 10.1748 123.205 10.189 123.216 cv
10.2036 123.227 10.2109 123.244 10.2109 123.266 cv
10.1875 123.309 10.1675 123.335 10.1519 123.342 cv
6.85986 124.68 li
10.1455 126.019 li
10.1636 126.026 10.1792 126.037 10.1919 126.049 cv
10.2046 126.062 10.2109 126.078 10.2109 126.096 cv
10.189 126.14 10.1709 126.165 10.1563 126.172 cv
6.14209 127.809 li
5.69727 127.988 5.43555 128.106 5.35645 128.165 cv
5.27734 128.223 5.2251 128.338 5.19971 128.51 cv
5.04688 128.51 li
5.04688 126.478 li
5.19971 126.478 li
5.21436 126.646 5.24463 126.774 5.29004 126.864 cv
5.33594 126.954 5.43408 126.999 5.58447 126.999 cv
5.69092 126.999 5.95117 126.923 6.36523 126.773 cv
6.59766 126.685 6.87988 126.573 7.2124 126.437 cv
8.73535 125.807 li
6.6748 124.839 li
6.61035 124.828 li
6.5376 124.828 6.40137 124.867 6.20215 124.945 cv
6.00342 125.023 5.8252 125.098 5.66797 125.17 cv
5.50049 125.244 5.38428 125.327 5.31934 125.419 cv
5.25439 125.513 5.21436 125.643 5.19971 125.811 cv
5.04688 125.811 li
5.04688 123.525 li
5.19971 123.525 li
cp
f
5.9458 119.346 mo
6.14209 119.463 6.38867 119.547 6.68652 119.598 cv
6.68652 117.288 li
6.32324 117.328 6.05273 117.397 5.875 117.496 cv
5.55566 117.675 5.39551 117.974 5.39551 118.394 cv
5.39551 118.81 5.5791 119.127 5.9458 119.346 cv
cp
5.52881 116.724 mo
5.8833 116.337 6.38525 116.144 7.03516 116.144 cv
7.03516 119.62 li
7.87598 119.583 8.48828 119.392 8.87207 119.045 cv
9.25635 118.698 9.44824 118.288 9.44824 117.813 cv
9.44824 117.43 9.34863 117.107 9.14941 116.844 cv
8.9502 116.582 8.66748 116.339 8.30127 116.116 cv
8.3667 115.925 li
8.82861 116.074 9.25635 116.354 9.64893 116.765 cv
10.042 117.176 10.2383 117.678 10.2383 118.273 cv
10.2383 118.959 9.98047 119.489 9.46484 119.863 cv
8.94922 120.238 8.35547 120.425 7.68359 120.425 cv
6.95361 120.425 6.32324 120.208 5.79346 119.773 cv
5.26318 119.339 4.99805 118.773 4.99805 118.076 cv
4.99805 117.562 5.1748 117.111 5.52881 116.724 cv
cp
f
9.92773 115.618 mo
9.89844 115.283 9.83984 115.06 9.75049 114.95 cv
9.66162 114.841 9.47217 114.786 9.18115 114.786 cv
6.72461 114.786 li
6.36523 114.786 6.1084 114.82 5.9541 114.887 cv
5.7998 114.955 5.72266 115.078 5.72266 115.257 cv
5.72266 115.293 5.72705 115.342 5.73584 115.402 cv
5.74512 115.462 5.75684 115.525 5.77148 115.591 cv
5.5918 115.591 li
5.51904 115.383 5.44482 115.171 5.36816 114.953 cv
5.29199 114.734 5.23779 114.583 5.20508 114.5 cv
5.13574 114.318 5.05762 114.13 4.9707 113.938 cv
4.9707 113.912 4.97998 113.896 4.99805 113.891 cv
5.01611 113.886 5.0542 113.883 5.1123 113.883 cv
6.00586 113.883 li
5.68262 113.649 5.43018 113.423 5.24854 113.205 cv
5.06689 112.987 4.97607 112.761 4.97607 112.527 cv
4.97607 112.34 5.03174 112.188 5.14209 112.071 cv
5.25293 111.954 5.39209 111.896 5.55908 111.896 cv
5.70801 111.896 5.83301 111.94 5.93506 112.03 cv
6.03662 112.119 6.0874 112.231 6.0874 112.367 cv
6.0874 112.505 6.02393 112.645 5.89648 112.785 cv
5.76953 112.926 5.70605 113.036 5.70605 113.117 cv
5.70605 113.244 5.80859 113.401 6.01367 113.587 cv
6.21924 113.773 6.43066 113.867 6.64844 113.867 cv
9.10498 113.867 li
9.41748 113.867 9.63428 113.793 9.75586 113.647 cv
9.87793 113.501 9.93506 113.259 9.92773 112.919 cv
10.1074 112.919 li
10.1074 115.618 li
9.92773 115.618 li
cp
f
2.72656 108.146 mo
2.72656 105.781 li
2.99316 105.781 li
2.99316 106.777 li
2.99316 106.996 3.0625 107.144 3.2002 107.22 cv
3.27295 107.264 3.37305 107.286 3.5 107.286 cv
11.0063 107.286 li
11.1719 107.286 11.2939 107.262 11.373 107.215 cv
11.5132 107.135 11.5835 106.976 11.5835 106.739 cv
11.5835 105.781 li
11.8667 105.781 li
11.8667 108.146 li
2.72656 108.146 li
cp
f
9.90039 105.271 mo
9.85352 104.808 9.74902 104.511 9.5874 104.379 cv
9.42578 104.248 9.05127 104.182 8.46338 104.182 cv
3.93506 104.182 li
3.53223 104.182 3.27002 104.246 3.14844 104.374 cv
3.02686 104.501 2.95508 104.792 2.93359 105.244 cv
2.72656 105.244 li
2.72656 103.034 li
8.2832 100.459 li
2.72656 97.9473 li
2.72656 95.7192 li
2.93359 95.7192 li
2.9624 96.1353 3.0376 96.4033 3.15918 96.5239 cv
3.28076 96.644 3.53955 96.7046 3.93506 96.7046 cv
8.89355 96.7046 li
9.2998 96.7046 9.56055 96.644 9.6748 96.5239 cv
9.78906 96.4033 9.86426 96.1353 9.90039 95.7192 cv
10.1074 95.7192 li
10.1074 98.856 li
9.90039 98.856 li
9.86426 98.4033 9.7832 98.1216 9.6582 98.0098 cv
9.5332 97.8989 9.23438 97.8428 8.7627 97.8428 cv
3.75537 97.8428 li
10.1074 100.714 li
10.1074 100.868 li
4.0166 103.689 li
8.46338 103.689 li
9.07324 103.689 9.47021 103.6 9.65527 103.421 cv
9.77539 103.305 9.85693 103.043 9.90039 102.639 cv
10.1074 102.639 li
10.1074 105.271 li
9.90039 105.271 li
cp
f
5.9458 94.1318 mo
6.14209 94.2485 6.38867 94.3325 6.68652 94.3838 cv
6.68652 92.0737 li
6.32324 92.1138 6.05273 92.1831 5.875 92.2817 cv
5.55566 92.4604 5.39551 92.7598 5.39551 93.1792 cv
5.39551 93.5952 5.5791 93.9126 5.9458 94.1318 cv
cp
5.52881 91.5098 mo
5.8833 91.123 6.38525 90.9292 7.03516 90.9292 cv
7.03516 94.4053 li
7.87598 94.3691 8.48828 94.1772 8.87207 93.8306 cv
9.25635 93.4839 9.44824 93.0732 9.44824 92.5991 cv
9.44824 92.2158 9.34863 91.8931 9.14941 91.6299 cv
8.9502 91.3672 8.66748 91.1245 8.30127 90.9019 cv
8.3667 90.7104 li
8.82861 90.8599 9.25635 91.1401 9.64893 91.5508 cv
10.042 91.9614 10.2383 92.4639 10.2383 93.0591 cv
10.2383 93.7451 9.98047 94.2749 9.46484 94.6489 cv
8.94922 95.0234 8.35547 95.2104 7.68359 95.2104 cv
6.95361 95.2104 6.32324 94.9932 5.79346 94.5586 cv
5.26318 94.1245 4.99805 93.5591 4.99805 92.8618 cv
4.99805 92.3472 5.1748 91.8965 5.52881 91.5098 cv
cp
f
2.72656 87.2891 mo
2.91699 87.2891 li
2.9209 87.5693 2.93945 87.7607 2.97266 87.8623 cv
3.03125 88.0415 3.15137 88.1304 3.33203 88.1304 cv
3.42432 88.1304 3.55371 88.0986 3.71924 88.0347 cv
3.88525 87.9712 4.16113 87.8521 4.5459 87.6782 cv
8.42969 85.9233 li
4.22559 84.3301 li
4.03955 84.2598 3.88232 84.2065 3.75293 84.1699 cv
3.62402 84.1338 3.51855 84.1152 3.4375 84.1152 cv
3.21973 84.1152 3.07227 84.208 2.99463 84.394 cv
2.9502 84.5034 2.92432 84.6836 2.91699 84.9351 cv
2.72656 84.9351 li
2.72656 82.6416 li
2.91699 82.6416 li
2.94971 82.8789 3.01318 83.0542 3.10791 83.1675 cv
3.24951 83.3389 3.53467 83.5088 3.96289 83.6763 cv
10.2383 86.1592 li
10.2383 86.3276 li
4.10645 89.0986 li
3.58643 89.3325 3.2627 89.5195 3.13525 89.6597 cv
3.00781 89.8003 2.93555 90.0054 2.91699 90.2759 cv
2.72656 90.2759 li
2.72656 87.2891 li
cp
f
5.3208 75.5874 mo
5.5542 75.2573 5.81055 75.0923 6.08887 75.0923 cv
6.2085 75.0923 6.31982 75.1343 6.42285 75.2183 cv
6.52588 75.3022 6.57764 75.4316 6.57764 75.6069 cv
6.57764 75.7344 6.53418 75.8467 6.44678 75.9434 cv
6.35986 76.04 6.23242 76.1104 6.06543 76.1543 cv
5.8042 76.2197 li
5.61182 76.2676 5.47559 76.3496 5.39551 76.4663 cv
5.31934 76.5869 5.28125 76.7456 5.28125 76.9424 cv
5.28125 77.3584 5.46191 77.71 5.82373 77.9961 cv
6.18555 78.2827 6.6665 78.4258 7.2666 78.4258 cv
7.81592 78.4258 8.30859 78.2681 8.74463 77.9526 cv
9.18115 77.6367 9.39941 77.2109 9.39941 76.6743 cv
9.39941 76.2949 9.27539 75.957 9.02832 75.6616 cv
8.88623 75.4937 8.66064 75.3037 8.35156 75.0923 cv
8.44434 74.939 li
8.88037 75.147 9.22559 75.3657 9.48047 75.5957 cv
9.96729 76.0376 10.2109 76.5483 10.2109 77.1284 cv
10.2109 77.6978 9.98779 78.2017 9.54102 78.6396 cv
9.09424 79.0776 8.48779 79.2964 7.72168 79.2964 cv
6.96973 79.2964 6.32324 79.0576 5.78223 78.5791 cv
5.24121 78.1011 4.9707 77.4971 4.9707 76.7671 cv
4.9707 76.311 5.0874 75.918 5.3208 75.5874 cv
cp
f
9.96582 74.397 mo
9.94043 74.1123 9.89307 73.9229 9.82422 73.8276 cv
9.71875 73.6816 9.5083 73.6089 9.19238 73.6089 cv
6.37598 73.6089 li
6.10742 73.6089 5.93115 73.644 5.84766 73.7153 cv
5.76416 73.7866 5.72266 73.9043 5.72266 74.0684 cv
5.72266 74.145 5.72607 74.2026 5.7334 74.2412 cv
5.74072 74.2793 5.75342 74.3242 5.77148 74.375 cv
5.58057 74.375 li
5.4502 73.981 li
5.40283 73.8384 5.31738 73.605 5.19385 73.2803 cv
5.0708 72.9556 5.00879 72.7842 5.00879 72.7656 cv
5.00879 72.7476 5.01807 72.7363 5.03613 72.7329 cv
5.0542 72.729 5.08887 72.7275 5.13965 72.7275 cv
5.875 72.7275 li
5.54834 72.3662 5.32227 72.0542 5.19678 71.791 cv
5.07129 71.5283 5.00879 71.2583 5.00879 70.981 cv
5.00879 70.605 5.13574 70.3062 5.39014 70.0835 cv
5.52832 69.9663 5.71533 69.8696 5.95117 69.793 cv
5.67871 69.5229 5.47705 69.2876 5.34668 69.0869 cv
5.12158 68.7402 5.00879 68.3862 5.00879 68.0249 cv
5.00879 67.4375 5.24658 67.0449 5.72266 66.8481 cv
5.99121 66.7349 6.41602 66.6782 6.99707 66.6782 cv
9.25781 66.6782 li
9.51563 66.6782 9.69092 66.6206 9.7832 66.5059 cv
9.87598 66.3911 9.93701 66.1841 9.96582 65.8848 cv
10.1074 65.8848 li
10.1074 68.3535 li
9.95508 68.3535 li
9.92578 68.0361 9.8623 67.8271 9.76416 67.7266 cv
9.66602 67.6265 9.46631 67.5762 9.16504 67.5762 cv
6.81738 67.5762 li
6.46533 67.5762 6.20557 67.6143 6.03857 67.6909 cv
5.74072 67.8262 5.5918 68.0908 5.5918 68.4849 cv
5.5918 68.7222 5.66992 68.9575 5.82568 69.1909 cv
5.9165 69.3262 6.06201 69.4922 6.26172 69.689 cv
9.05078 69.689 li
9.34473 69.689 9.56836 69.6372 9.7207 69.5332 cv
9.87305 69.4292 9.95508 69.2095 9.96582 68.8735 cv
10.1074 68.8735 li
10.1074 71.3862 li
9.96582 71.3862 li
9.92236 71.0396 9.83887 70.8188 9.71533 70.7236 cv
9.5918 70.6289 9.28662 70.5815 8.80029 70.5815 cv
7.27783 70.5815 li
6.71973 70.5815 6.33594 70.6182 6.12549 70.6909 cv
5.76953 70.8115 5.5918 71.0669 5.5918 71.4575 cv
5.5918 71.6802 5.65234 71.8989 5.77393 72.1143 cv
5.896 72.3296 6.05469 72.5195 6.25098 72.6836 cv
9.23047 72.6836 li
9.50635 72.6836 9.69727 72.6353 9.80225 72.5386 cv
9.90771 72.4419 9.9624 72.231 9.96582 71.9063 cv
10.1074 71.9063 li
10.1074 74.397 li
9.96582 74.397 li
cp
f
6.64795 64.123 mo
5.40674 62.9209 4.49561 62.1045 3.91455 61.6743 cv
3.33301 61.2441 2.7666 61.0288 2.21484 61.0288 cv
1.73145 61.0288 1.36328 61.1602 1.11035 61.4229 cv
.857422 61.6855 .730469 61.9995 .730469 62.3638 cv
.730469 62.814 .894043 63.1787 1.2207 63.4575 cv
1.3999 63.6123 1.67578 63.7598 2.04834 63.9009 cv
2.00439 64.1128 li
1.25293 63.9487 .730957 63.6704 .438965 63.2778 cv
.146484 62.8853 0 62.4644 0 62.0142 cv
0 61.459 .174316 61.0098 .521973 60.6665 cv
.869629 60.3232 1.29492 60.1519 1.79785 60.1519 cv
2.3335 60.1519 2.84961 60.3374 3.3457 60.709 cv
3.84229 61.0801 4.72559 61.8867 5.99609 63.1289 cv
5.99609 60.8667 li
5.99609 60.5513 5.9585 60.3296 5.8833 60.2012 cv
5.80811 60.0732 5.62549 59.9287 5.33496 59.7676 cv
5.39355 59.6396 li
6.76074 60.1865 li
6.76074 64.123 li
6.64795 64.123 li
cp
f
2.56885 56.356 mo
2.56885 55.8047 li
10.293 58.2319 li
10.293 58.7896 li
2.56885 56.356 li
cp
f
11.7476 54.0806 mo
11.8638 53.7358 11.9219 53.3408 11.9219 52.8955 cv
11.9219 52.2896 11.8174 51.7969 11.6084 51.4175 cv
11.3999 51.0381 11.1431 50.8481 10.8379 50.8481 cv
10.5947 50.8481 10.4331 51.0015 10.353 51.3091 cv
10.3057 51.499 10.2783 51.8594 10.2715 52.3896 cv
10.2676 52.5249 10.2632 52.6675 10.2578 52.8174 cv
10.2524 52.9673 10.2461 53.1045 10.2388 53.2285 cv
10.2349 53.3091 10.2202 53.439 10.1948 53.6182 cv
10.1694 53.7974 10.1479 53.9307 10.1299 54.0186 cv
10.1299 54.0625 10.2441 54.1689 10.4727 54.3384 cv
10.7051 54.5112 10.9194 54.5981 11.1157 54.5981 cv
11.4209 54.5981 11.6313 54.4253 11.7476 54.0806 cv
cp
8.00537 52.3428 mo
7.83105 52.1235 7.52783 52.0142 7.0957 52.0142 cv
6.75049 52.0142 6.3623 52.1025 5.92969 52.2798 cv
5.49756 52.4565 5.28174 52.7515 5.28174 53.1636 cv
5.28174 53.5215 5.45068 53.7676 5.78809 53.9028 cv
5.96631 53.9722 6.18604 54.0068 6.44727 54.0068 cv
6.89063 54.0068 7.28809 53.8989 7.64014 53.6836 cv
7.99268 53.4683 8.16846 53.1895 8.16846 52.8462 cv
8.16846 52.6455 8.11426 52.4775 8.00537 52.3428 cv
cp
7.69482 54.6606 mo
7.41504 54.8452 7.10107 54.9375 6.75244 54.9375 cv
6.32764 54.9375 5.92432 54.7676 5.54297 54.4282 cv
5.16162 54.0889 4.97119 53.6089 4.97119 52.9883 cv
4.97119 52.7222 5.03369 52.4282 5.15918 52.1069 cv
5.28418 51.7861 5.34717 51.4775 5.34717 51.1821 cv
5.34717 51.1055 5.34424 50.9897 5.33887 50.8345 cv
5.3335 50.6792 5.33057 50.5669 5.33057 50.4976 cv
5.33057 50.4321 li
5.77197 50.4321 li
5.77197 51.3789 li
5.92432 51.3135 6.05713 51.2622 6.16943 51.2256 cv
6.38037 51.1636 6.58008 51.1328 6.76855 51.1328 cv
7.18262 51.1328 7.56299 51.3052 7.91016 51.6499 cv
8.25684 51.9951 8.43018 52.4595 8.43018 53.0435 cv
8.43018 53.1343 8.41406 53.2988 8.38135 53.5361 cv
8.38135 53.6416 8.47021 53.7822 8.64795 53.9575 cv
8.82617 54.1328 8.97119 54.2202 9.08398 54.2202 cv
9.2002 54.2202 9.28516 54.0923 9.33984 53.8364 cv
9.37598 53.6685 9.39453 53.4819 9.39453 53.2773 cv
9.39453 52.3379 9.44678 51.7002 9.55225 51.3638 cv
9.72314 50.812 10.0898 50.5361 10.6528 50.5361 cv
11.2266 50.5361 11.6841 50.8584 12.0254 51.5024 cv
12.3667 52.1465 12.5376 52.7969 12.5376 53.4536 cv
12.5376 54.0522 12.4165 54.5269 12.1753 54.877 cv
11.9336 55.2275 11.6802 55.4028 11.415 55.4028 cv
11.2847 55.4028 11.1567 55.3564 11.0313 55.2637 cv
10.9058 55.1709 10.7197 54.9883 10.4727 54.7158 cv
10.1514 54.356 li
10.0859 54.2905 li
10.021 54.457 9.95703 54.582 9.89551 54.665 cv
9.78271 54.8101 9.65381 54.8828 9.50879 54.8828 cv
9.37451 54.8828 9.22656 54.8198 9.06494 54.6938 cv
8.90332 54.5679 8.64063 54.2988 8.27783 53.8862 cv
8.16846 54.2183 7.97461 54.4766 7.69482 54.6606 cv
cp
f
11.8672 47.3555 mo
11.8672 49.7207 li
11.5952 49.7207 li
11.5952 48.7188 li
11.5952 48.5034 11.5278 48.3555 11.3936 48.2754 cv
11.3208 48.2354 11.2207 48.2153 11.0938 48.2153 cv
3.5874 48.2153 li
3.40967 48.2153 3.26904 48.2505 3.16553 48.3218 cv
3.06201 48.3931 3.01025 48.5381 3.01025 48.7568 cv
3.01025 49.7207 li
2.72705 49.7207 li
2.72705 47.3555 li
11.8672 47.3555 li
cp
f
.44734 lw
0 lc
0 lj
2.5 ml
[] 0 dsh
true sadj
33.9341 215.627 mo
464.767 215.627 li
@
33.9341 215.627 mo
33.9341 208.096 li
@
81.7793 215.627 mo
81.7793 208.096 li
@
129.657 215.627 mo
129.657 208.096 li
@
177.534 215.627 mo
177.534 208.096 li
@
225.412 215.627 mo
225.412 208.096 li
@
273.258 215.627 mo
273.258 208.096 li
@
321.135 215.627 mo
321.135 208.096 li
@
369.012 215.627 mo
369.012 208.096 li
@
416.89 215.627 mo
416.89 208.096 li
@
464.767 215.627 mo
464.767 208.096 li
@
33.9341 .223633 mo
464.767 .223633 li
@
33.9341 .223633 mo
33.9341 7.78809 li
@
81.7793 .223633 mo
81.7793 7.78809 li
@
129.657 .223633 mo
129.657 7.78809 li
@
177.534 .223633 mo
177.534 7.78809 li
@
225.412 .223633 mo
225.412 7.78809 li
@
273.258 .223633 mo
273.258 7.78809 li
@
321.135 .223633 mo
321.135 7.78809 li
@
369.012 .223633 mo
369.012 7.78809 li
@
416.89 .223633 mo
416.89 7.78809 li
@
464.767 .223633 mo
464.767 7.78809 li
@
33.9341 215.627 mo
33.9341 .223633 li
@
33.9341 215.627 mo
42.5356 215.627 li
@
33.9341 135.828 mo
42.5356 135.828 li
@
33.9341 56.0288 mo
42.5356 56.0288 li
@
33.9341 191.601 mo
38.2344 191.601 li
@
33.9341 177.555 mo
38.2344 177.555 li
@
33.9341 167.576 mo
38.2344 167.576 li
@
33.9341 159.853 mo
38.2344 159.853 li
@
33.9341 153.529 mo
38.2344 153.529 li
@
33.9341 148.191 mo
38.2344 148.191 li
@
33.9341 143.551 mo
38.2344 143.551 li
@
33.9341 139.482 mo
38.2344 139.482 li
@
33.9341 111.802 mo
38.2344 111.802 li
@
33.9341 97.7559 mo
38.2344 97.7559 li
@
33.9341 87.7773 mo
38.2344 87.7773 li
@
33.9341 80.0552 mo
38.2344 80.0552 li
@
33.9341 73.7305 mo
38.2344 73.7305 li
@
33.9341 68.3916 mo
38.2344 68.3916 li
@
33.9341 63.751 mo
38.2344 63.751 li
@
33.9341 59.6841 mo
38.2344 59.6841 li
@
33.9341 32.0039 mo
38.2344 32.0039 li
@
33.9341 17.957 mo
38.2344 17.957 li
@
33.9341 7.97852 mo
38.2344 7.97852 li
@
33.9341 .223633 mo
38.2344 .223633 li
@
464.767 215.627 mo
464.767 .223633 li
@
464.767 215.627 mo
456.134 215.627 li
@
464.767 135.828 mo
456.134 135.828 li
@
464.767 56.0288 mo
456.134 56.0288 li
@
464.767 191.601 mo
460.435 191.601 li
@
464.767 177.555 mo
460.435 177.555 li
@
464.767 167.576 mo
460.435 167.576 li
@
464.767 159.853 mo
460.435 159.853 li
@
464.767 153.529 mo
460.435 153.529 li
@
464.767 148.191 mo
460.435 148.191 li
@
464.767 143.551 mo
460.435 143.551 li
@
464.767 139.482 mo
460.435 139.482 li
@
464.767 111.802 mo
460.435 111.802 li
@
464.767 97.7559 mo
460.435 97.7559 li
@
464.767 87.7773 mo
460.435 87.7773 li
@
464.767 80.0552 mo
460.435 80.0552 li
@
464.767 73.7305 mo
460.435 73.7305 li
@
464.767 68.3916 mo
460.435 68.3916 li
@
464.767 63.751 mo
460.435 63.751 li
@
464.767 59.6841 mo
460.435 59.6841 li
@
464.767 32.0039 mo
460.435 32.0039 li
@
464.767 17.957 mo
460.435 17.957 li
@
464.767 7.97852 mo
460.435 7.97852 li
@
464.767 .223633 mo
460.435 .223633 li
@
.559175 lw
41.7769 88.3809 mo
46.0142 82.2153 li
48.9858 77.7666 li
51.3271 74.271 li
53.2241 71.4111 li
56.1968 66.8027 li
58.5054 63.2109 li
60.4023 60.2554 li
62.0156 57.7451 li
63.4063 55.5518 li
64.6401 53.582 li
65.7153 51.8335 li
68.0557 48.688 li
69.9526 46.1777 li
71.5337 44.0796 li
72.9253 42.332 li
74.1582 40.8706 li
75.2339 39.5996 li
76.2451 38.519 li
77.1309 37.5645 li
78.7441 36.0088 li
80.1348 34.7998 li
81.3687 33.8784 li
82.4438 33.1484 li
83.4556 32.5439 li
84.3413 32.0669 li
85.1953 31.686 li
85.9541 31.3682 li
86.6802 31.1138 li
87.3457 30.9229 li
87.978 30.7646 li
88.5786 30.6055 li
89.1162 30.5103 li
89.6528 30.415 li
91.9941 30.2246 li
93.8594 30.3516 li
95.4727 30.6685 li
96.8643 31.0503 li
98.0972 31.5586 li
99.1724 32.0991 li
100.184 32.6714 li
101.07 33.3071 li
102.683 34.5781 li
104.074 35.8804 li
105.307 37.1846 li
106.383 38.4546 li
107.394 39.79 li
108.28 41.0923 li
109.133 42.3955 li
109.893 43.6665 li
110.62 44.8745 li
111.283 46.0186 li
111.916 47.1299 li
112.518 48.2119 li
113.055 49.1963 li
113.593 50.1816 li
115.932 54.4092 li
117.829 57.9678 li
119.411 61.0503 li
120.802 63.7832 li
122.036 66.3252 li
123.142 68.582 li
124.123 70.6479 li
125.04 72.5869 li
126.622 76.0503 li
128.012 79.1011 li
1 0 1 0 cmyk
@
[4.4734 3.35505 ] 0 dsh
41.7769 92.5127 mo
46.0142 85.4897 li
48.9858 80.499 li
51.3271 76.6226 li
53.2241 73.4761 li
56.1968 68.4868 li
58.5054 64.6104 li
60.4023 61.4634 li
62.0156 58.7939 li
63.4063 56.4741 li
64.6401 54.4399 li
65.7153 52.5977 li
68.0557 49.2915 li
69.9526 46.686 li
71.5337 44.5566 li
72.9253 42.7773 li
74.1582 41.2515 li
75.2339 39.9482 li
76.2451 38.8047 li
77.1309 37.8511 li
78.7441 36.2622 li
80.1348 35.0234 li
81.3687 34.0688 li
82.4438 33.3071 li
83.4556 32.7026 li
84.3413 32.2266 li
85.1953 31.8135 li
85.9541 31.5264 li
86.6802 31.2412 li
87.3457 31.0503 li
87.978 30.8599 li
88.5786 30.7324 li
89.1162 30.6055 li
89.6528 30.5103 li
91.9941 30.3198 li
93.8594 30.4458 li
95.4727 30.7324 li
96.8643 31.1138 li
98.0972 31.5908 li
99.1724 32.1621 li
100.184 32.7979 li
101.07 33.3701 li
102.683 34.6094 li
104.074 35.9126 li
105.307 37.2158 li
106.383 38.4868 li
107.394 39.8223 li
108.28 41.1563 li
109.133 42.4277 li
109.893 43.6987 li
110.62 44.9058 li
111.283 46.0503 li
111.916 47.1621 li
112.518 48.2427 li
113.055 49.228 li
113.593 50.1816 li
115.932 54.4399 li
117.829 58 li
119.411 61.0825 li
120.802 63.8154 li
122.036 66.3252 li
123.142 68.6143 li
124.123 70.6802 li
125.04 72.6182 li
126.622 76.0825 li
128.012 79.1328 li
0 .26 1 0 cmyk
@
[] 0 dsh
131.018 86.0288 mo
132.629 89.5889 li
134.654 94.3242 li
136.33 98.3594 li
138.669 103.985 li
140.567 108.625 li
142.212 112.597 li
143.603 116.061 li
144.835 119.112 li
145.942 121.845 li
146.955 124.355 li
147.872 126.643 li
149.485 130.68 li
150.907 134.208 li
152.141 137.29 li
153.279 140.055 li
155.208 144.822 li
156.853 148.826 li
158.94 153.815 li
160.711 157.947 li
163.146 163.476 li
165.17 167.861 li
166.878 171.484 li
168.364 174.504 li
169.724 177.078 li
170.925 179.334 li
172.032 181.305 li
173.044 183.021 li
174.846 185.944 li
176.428 188.36 li
177.882 190.33 li
179.178 191.983 li
181.456 194.621 li
183.416 196.59 li
185.978 198.721 li
188.192 200.214 li
191.322 201.802 li
193.947 202.756 li
196.255 203.297 li
198.279 203.646 li
200.146 203.837 li
201.821 203.9 li
203.338 203.932 li
204.761 203.9 li
207.355 203.741 li
209.632 203.52 li
211.656 203.297 li
213.521 203.042 li
216.778 202.534 li
219.593 202.089 li
223.198 201.453 li
226.266 200.913 li
230.534 200.118 li
234.045 199.482 li
237.081 198.942 li
239.705 198.466 li
242.046 198.053 li
244.164 197.703 li
246.062 197.385 li
247.802 197.067 li
250.899 196.559 li
253.62 196.114 li
255.991 195.733 li
258.142 195.415 li
261.873 194.811 li
265.035 194.335 li
269.021 193.731 li
272.341 193.191 li
276.926 192.459 li
280.688 191.855 li
283.883 191.315 li
286.634 190.807 li
289.069 190.362 li
291.251 189.949 li
293.244 189.535 li
295.045 189.155 li
298.239 188.391 li
300.99 187.725 li
303.457 187.057 li
305.64 186.389 li
309.402 185.182 li
312.629 184.038 li
316.645 182.354 li
320.028 180.796 li
324.645 178.317 li
328.44 176.03 li
331.634 173.836 li
334.417 171.77 li
336.884 169.833 li
339.065 167.989 li
341.025 166.242 li
342.859 164.558 li
346.054 161.411 li
348.837 158.487 li
351.271 155.786 li
353.453 153.244 li
357.249 148.73 li
360.442 144.694 li
364.49 139.387 li
367.874 134.716 li
372.522 128.169 li
376.286 122.64 li
379.511 117.84 li
382.294 113.582 li
384.729 109.864 li
386.912 106.463 li
388.902 103.381 li
390.706 100.553 li
393.9 95.4683 li
396.683 91.0181 li
399.149 87.0786 li
401.331 83.5186 li
405.127 77.3848 li
408.319 72.1406 li
412.367 65.5313 li
415.751 59.9375 li
420.368 52.311 li
424.163 46.0186 li
427.39 40.7114 li
430.14 36.0708 li
432.606 32.0029 li
434.788 28.3809 li
436.78 25.0757 li
438.583 22.0562 li
441.777 16.7183 li
444.56 12.0776 li
446.995 7.97852 li
449.208 4.32373 li
451.644 .223633 li
1 0 1 0 cmyk
@
[1.11835 2.2367 ] 0 dsh
328.566 215.627 mo
331.634 209.748 li
334.417 204.441 li
336.884 199.896 li
339.065 195.829 li
341.025 192.142 li
342.859 188.804 li
346.054 182.862 li
348.837 177.746 li
351.271 173.233 li
353.453 169.197 li
357.248 162.396 li
360.442 156.644 li
364.49 149.43 li
367.874 143.392 li
372.522 135.256 li
376.286 128.614 li
379.511 122.989 li
382.294 118.127 li
384.729 113.932 li
386.912 110.149 li
388.902 106.75 li
390.706 103.635 li
393.9 98.1367 li
396.683 93.3701 li
399.148 89.1758 li
401.331 85.3936 li
405.126 78.9424 li
408.319 73.5078 li
412.367 66.6431 li
415.751 60.9229 li
420.368 53.0737 li
424.163 46.6538 li
427.389 41.2515 li
430.14 36.5801 li
432.606 32.4487 li
434.788 28.7617 li
436.78 25.4258 li
438.583 22.374 li
441.777 17.0039 li
444.56 12.3325 li
446.995 8.20117 li
449.208 4.51416 li
451.771 .223633 li
0 1 0 0 cmyk
@
[6.71011 2.2367 1.11835 2.2367 ] 0 dsh
269.021 194.239 mo
272.341 193.827 li
276.926 193.318 li
280.688 192.904 li
283.883 192.587 li
286.634 192.332 li
289.069 192.11 li
291.251 191.888 li
293.244 191.729 li
295.045 191.57 li
298.239 191.315 li
300.99 191.093 li
303.457 190.902 li
305.64 190.712 li
309.402 190.457 li
312.629 190.235 li
316.645 189.949 li
320.028 189.727 li
324.645 189.44 li
328.44 189.218 li
331.634 189.027 li
334.417 188.868 li
336.884 188.709 li
339.065 188.583 li
341.025 188.486 li
342.859 188.391 li
346.054 188.201 li
348.837 188.042 li
351.271 187.915 li
353.453 187.788 li
357.249 187.597 li
360.442 187.438 li
364.49 187.215 li
367.874 187.026 li
372.522 186.802 li
376.286 186.612 li
379.511 186.453 li
382.294 186.294 li
384.729 186.167 li
386.912 186.071 li
388.902 185.976 li
390.706 185.881 li
393.9 185.723 li
396.683 185.563 li
399.149 185.468 li
401.331 185.341 li
405.127 185.15 li
408.319 185.023 li
412.367 184.8 li
415.751 184.642 li
420.368 184.419 li
424.163 184.261 li
427.39 184.102 li
430.14 183.974 li
432.606 183.847 li
434.788 183.751 li
436.78 183.656 li
438.583 183.561 li
441.777 183.434 li
444.56 183.307 li
446.995 183.18 li
449.208 183.085 li
453.003 182.926 li
456.197 182.766 li
460.245 182.576 li
463.597 182.448 li
.269505 .688472 1 .33 cmyk
@
[1.11835 2.2367 ] 0 dsh
33.9341 105.594 mo
41.4287 93.0732 li
89.3057 13.2734 li
.64 .1 0 .33 cmyk
@
[] 0 dsh
202.896 215.627 mo
202.896 171.804 li
0 0 0 1 cmyk
@
.44734 lw
343.081 215.627 mo
343.081 132.565 li
@
.559175 lw
[4.4734 3.35505 ] 0 dsh
191.322 201.071 mo
193.947 201.866 li
196.255 202.312 li
198.279 202.565 li
200.146 202.629 li
201.821 202.629 li
203.338 202.565 li
204.761 202.438 li
207.355 202.153 li
209.632 201.802 li
211.656 201.453 li
213.521 201.104 li
216.778 200.405 li
219.593 199.737 li
223.198 198.879 li
226.266 198.148 li
230.534 197.1 li
234.045 196.242 li
237.081 195.479 li
239.705 194.875 li
242.046 194.303 li
244.164 193.827 li
246.062 193.381 li
247.802 192.967 li
250.899 192.269 li
253.62 191.696 li
255.991 191.157 li
258.142 190.712 li
261.873 189.949 li
265.035 189.313 li
269.021 188.52 li
272.341 187.884 li
276.926 187.057 li
280.688 186.389 li
283.883 185.818 li
286.634 185.373 li
289.069 184.959 li
291.251 184.61 li
293.244 184.292 li
295.045 184.006 li
298.239 183.497 li
300.99 183.085 li
303.457 182.735 li
305.64 182.417 li
309.402 181.877 li
312.629 181.432 li
316.645 180.859 li
320.028 180.416 li
324.645 179.811 li
328.44 179.334 li
331.634 178.922 li
334.417 178.572 li
336.884 178.286 li
339.065 178 li
341.025 177.778 li
342.859 177.555 li
346.054 177.173 li
348.837 176.855 li
351.271 176.57 li
353.453 176.315 li
357.249 175.902 li
360.442 175.521 li
364.49 175.076 li
367.874 174.727 li
372.522 174.218 li
376.286 173.836 li
379.511 173.486 li
382.294 173.201 li
384.729 172.946 li
386.912 172.725 li
388.902 172.534 li
390.706 172.344 li
393.9 172.026 li
396.683 171.739 li
399.149 171.517 li
401.331 171.294 li
405.127 170.913 li
408.319 170.627 li
412.367 170.214 li
415.751 169.896 li
420.368 169.483 li
424.163 169.133 li
427.39 168.848 li
430.14 168.593 li
432.606 168.371 li
434.788 168.179 li
436.78 167.989 li
438.583 167.831 li
441.777 167.544 li
444.56 167.322 li
446.995 167.1 li
449.208 166.908 li
453.003 166.591 li
456.197 166.305 li
460.245 165.987 li
463.597 165.7 li
1 0 0 0 cmyk
@
196.496 74.0879 mo
196.881 73.8657 197.073 73.4385 197.073 72.8071 cv
197.073 72.1797 196.848 71.7505 196.398 71.5205 cv
195.948 71.291 195.374 71.1758 194.677 71.1758 cv
194.506 71.1758 194.398 71.1758 194.353 71.1758 cv
194.307 71.1758 194.237 71.1738 194.143 71.1704 cv
194.143 73.9624 li
194.143 74.1558 194.197 74.2808 194.306 74.3374 cv
194.415 74.394 194.667 74.4219 195.063 74.4219 cv
195.633 74.4219 196.111 74.3105 196.496 74.0879 cv
cp
196.137 70.5513 mo
196.608 70.332 196.845 69.939 196.845 69.3721 cv
196.845 68.7031 196.572 68.2515 196.028 68.0176 cv
195.726 67.8896 195.269 67.8257 194.655 67.8257 cv
194.422 67.8257 194.279 67.8457 194.225 67.8862 cv
194.17 67.9263 194.143 68.0361 194.143 68.2148 cv
194.143 70.749 li
195.205 70.7324 li
195.579 70.7251 195.89 70.665 196.137 70.5513 cv
cp
191.942 74.6191 mo
192.39 74.5938 192.68 74.5239 192.812 74.4097 cv
192.944 74.2954 193.01 74.0293 193.01 73.6118 cv
193.01 68.625 li
193.01 68.2124 192.944 67.9468 192.812 67.8281 cv
192.68 67.71 192.39 67.6396 191.942 67.6177 cv
191.942 67.4097 li
195.066 67.4097 li
195.958 67.4097 196.667 67.5537 197.191 67.8423 cv
197.715 68.1309 197.978 68.6279 197.978 69.3325 cv
197.978 69.8623 197.794 70.2642 197.428 70.5381 cv
197.221 70.6953 196.91 70.8247 196.496 70.9272 cv
197.008 71.0513 197.446 71.2583 197.809 71.5479 cv
198.172 71.8379 198.354 72.2437 198.354 72.7651 cv
198.354 73.6401 197.951 74.2417 197.146 74.5698 cv
196.721 74.7412 196.198 74.8271 195.578 74.8271 cv
191.942 74.8271 li
191.942 74.6191 li
cp
0 0 0 1 cmyk
f
200.478 70.645 mo
200.362 70.8418 200.278 71.0903 200.228 71.3892 cv
202.526 71.3892 li
202.486 71.0244 202.417 70.7524 202.319 70.5737 cv
202.141 70.2524 201.843 70.0918 201.426 70.0918 cv
201.012 70.0918 200.696 70.2764 200.478 70.645 cv
cp
203.087 70.2261 mo
203.472 70.582 203.665 71.0864 203.665 71.7397 cv
200.206 71.7397 li
200.242 72.5845 200.433 73.1997 200.778 73.5859 cv
201.123 73.9717 201.531 74.1646 202.003 74.1646 cv
202.385 74.1646 202.706 74.0645 202.967 73.8643 cv
203.229 73.6641 203.47 73.3799 203.692 73.0122 cv
203.882 73.0776 li
203.733 73.542 203.455 73.9717 203.046 74.3662 cv
202.638 74.7612 202.138 74.9585 201.546 74.9585 cv
200.863 74.9585 200.335 74.6992 199.963 74.1812 cv
199.591 73.6631 199.405 73.0664 199.405 72.3911 cv
199.405 71.6577 199.621 71.0244 200.053 70.4917 cv
200.485 69.959 201.048 69.6924 201.742 69.6924 cv
202.254 69.6924 202.702 69.8701 203.087 70.2261 cv
cp
f
206.977 69.7798 mo
206.977 70.1738 li
205.865 70.1738 li
205.854 73.3271 li
205.854 73.6045 205.878 73.8145 205.925 73.9565 cv
206.013 74.2085 206.183 74.3345 206.438 74.3345 cv
206.568 74.3345 206.682 74.3037 206.778 74.2412 cv
206.874 74.1792 206.984 74.0811 207.107 73.9458 cv
207.249 74.0664 li
207.129 74.2305 li
206.94 74.4858 206.741 74.6665 206.53 74.7725 cv
206.319 74.8784 206.116 74.9312 205.92 74.9312 cv
205.491 74.9312 205.201 74.7397 205.048 74.3564 cv
204.965 74.1484 204.923 73.8599 204.923 73.4912 cv
204.923 70.1738 li
204.329 70.1738 li
204.311 70.1631 204.297 70.1523 204.289 70.1411 cv
204.279 70.1304 204.275 70.1157 204.275 70.0977 cv
204.275 70.061 204.283 70.0327 204.299 70.0127 cv
204.316 69.9927 204.368 69.9458 204.455 69.873 cv
204.705 69.665 204.886 69.4961 204.997 69.3667 cv
205.107 69.2373 205.368 68.895 205.778 68.3403 cv
205.825 68.3403 205.854 68.3438 205.863 68.3511 cv
205.872 68.3584 205.876 68.3857 205.876 68.4331 cv
205.876 69.7798 li
206.977 69.7798 li
cp
f
207.336 74.6738 mo
207.634 74.6338 207.829 74.5601 207.921 74.4521 cv
208.014 74.3447 208.061 74.0898 208.061 73.6885 cv
208.061 68.4331 li
208.061 68.229 208.034 68.0786 207.981 67.9814 cv
207.929 67.8848 207.801 67.8364 207.597 67.8364 cv
207.557 67.8364 207.519 67.8394 207.48 67.8447 cv
207.442 67.8501 207.399 67.8564 207.352 67.8638 cv
207.352 67.667 li
207.512 67.6196 207.709 67.562 207.943 67.4946 cv
208.177 67.4268 208.34 67.3784 208.431 67.3496 cv
208.954 67.1851 li
208.964 67.2236 li
208.964 70.5845 li
209.193 70.3218 209.396 70.1284 209.575 70.0044 cv
209.894 69.7852 210.239 69.6758 210.61 69.6758 cv
211.198 69.6758 211.599 69.9243 211.813 70.4204 cv
211.93 70.6831 211.988 71.0278 211.988 71.4551 cv
211.988 73.6885 li
211.988 74.0752 212.032 74.3271 212.121 74.4438 cv
212.21 74.561 212.393 74.6372 212.668 74.6738 cv
212.668 74.8271 li
210.31 74.8271 li
210.31 74.6738 li
210.626 74.6299 210.829 74.5552 210.92 74.4492 cv
211.011 74.3438 211.056 74.0898 211.056 73.6885 cv
211.056 71.4717 li
211.056 71.1177 210.997 70.8311 210.879 70.6118 cv
210.761 70.3931 210.539 70.2837 210.212 70.2837 cv
209.929 70.2837 209.654 70.3857 209.39 70.5903 cv
209.125 70.7944 208.992 70.9277 208.992 70.9897 cv
208.992 73.6885 li
208.992 74.0972 209.039 74.3525 209.133 74.4551 cv
209.228 74.5571 209.429 74.6299 209.738 74.6738 cv
209.738 74.8271 li
207.336 74.8271 li
207.336 74.6738 li
cp
f
214.107 70.645 mo
213.991 70.8418 213.907 71.0903 213.856 71.3892 cv
216.155 71.3892 li
216.115 71.0244 216.046 70.7524 215.948 70.5737 cv
215.77 70.2524 215.472 70.0918 215.055 70.0918 cv
214.641 70.0918 214.325 70.2764 214.107 70.645 cv
cp
216.716 70.2261 mo
217.101 70.582 217.293 71.0864 217.293 71.7397 cv
213.834 71.7397 li
213.871 72.5845 214.062 73.1997 214.407 73.5859 cv
214.751 73.9717 215.16 74.1646 215.632 74.1646 cv
216.014 74.1646 216.335 74.0645 216.596 73.8643 cv
216.858 73.6641 217.099 73.3799 217.321 73.0122 cv
217.511 73.0776 li
217.362 73.542 217.084 73.9717 216.675 74.3662 cv
216.267 74.7612 215.767 74.9585 215.175 74.9585 cv
214.492 74.9585 213.964 74.6992 213.592 74.1812 cv
213.22 73.6631 213.034 73.0664 213.034 72.3911 cv
213.034 71.6577 213.25 71.0244 213.682 70.4917 cv
214.114 69.959 214.677 69.6924 215.371 69.6924 cv
215.883 69.6924 216.331 69.8701 216.716 70.2261 cv
cp
f
328.312 70.7324 mo
328.903 70.4883 329.198 70.0293 329.198 69.3555 cv
329.198 68.707 328.935 68.2646 328.403 68.0278 cv
328.12 67.9004 327.745 67.8364 327.276 67.8364 cv
326.96 67.8364 326.767 67.8594 326.696 67.9048 cv
326.624 67.9502 326.589 68.0571 326.589 68.2246 cv
326.589 70.9844 li
327.392 70.9551 327.966 70.8711 328.312 70.7324 cv
cp
324.497 74.6191 mo
324.927 74.5791 325.192 74.4956 325.298 74.3687 cv
325.403 74.2412 325.456 73.9453 325.456 73.4805 cv
325.456 68.625 li
325.456 68.231 325.397 67.9727 325.28 67.8501 cv
325.161 67.728 324.901 67.6504 324.497 67.6177 cv
324.497 67.4097 li
327.587 67.4097 li
328.229 67.4097 328.765 67.4917 329.192 67.6558 cv
330.007 67.9653 330.413 68.5356 330.413 69.3667 cv
330.413 69.9243 330.233 70.3525 329.872 70.6514 cv
329.511 70.9502 329.019 71.147 328.397 71.2417 cv
330.696 74.0869 li
330.839 74.2607 330.979 74.3877 331.122 74.4673 cv
331.263 74.5469 331.444 74.5972 331.667 74.6191 cv
331.667 74.8271 li
329.87 74.8271 li
327.079 71.373 li
326.589 71.4004 li
326.589 73.6099 li
326.589 74.0244 326.651 74.2871 326.778 74.3979 cv
326.903 74.5093 327.177 74.583 327.597 74.6191 cv
327.597 74.8271 li
324.497 74.8271 li
324.497 74.6191 li
cp
f
335.011 71.7944 mo
334.595 71.9331 334.249 72.0864 333.976 72.2544 cv
333.454 72.5791 333.192 72.9478 333.192 73.3599 cv
333.192 73.6924 333.302 73.9365 333.519 74.0938 cv
333.661 74.1958 333.819 74.2471 333.993 74.2471 cv
334.233 74.2471 334.462 74.1792 334.683 74.0444 cv
334.901 73.9092 335.011 73.7378 335.011 73.5298 cv
335.011 71.7944 li
cp
333.013 72.4131 mo
333.347 72.1938 334.013 71.8965 335.011 71.5205 cv
335.011 71.0552 li
335.011 70.6831 334.976 70.4243 334.903 70.2778 cv
334.778 70.0337 334.522 69.9111 334.134 69.9111 cv
333.95 69.9111 333.772 69.959 333.606 70.0537 cv
333.438 70.1523 333.356 70.2871 333.356 70.4585 cv
333.356 70.5024 333.364 70.5767 333.382 70.6807 cv
333.401 70.7847 333.409 70.8511 333.409 70.8804 cv
333.409 71.0845 333.343 71.2271 333.208 71.3071 cv
333.132 71.3545 333.042 71.3784 332.937 71.3784 cv
332.772 71.3784 332.647 71.3247 332.56 71.2168 cv
332.474 71.1094 332.429 70.9897 332.429 70.8584 cv
332.429 70.603 332.587 70.3354 332.901 70.0562 cv
333.214 69.7773 333.675 69.6377 334.282 69.6377 cv
334.985 69.6377 335.464 69.8677 335.714 70.3271 cv
335.849 70.5791 335.915 70.9458 335.915 71.4277 cv
335.915 73.623 li
335.915 73.8345 335.931 73.9805 335.96 74.0605 cv
336.007 74.2031 336.104 74.2744 336.253 74.2744 cv
336.337 74.2744 336.405 74.2617 336.46 74.2358 cv
336.515 74.2104 336.608 74.1484 336.743 74.0498 cv
336.743 74.3345 li
336.628 74.4766 336.503 74.5938 336.368 74.6851 cv
336.165 74.8237 335.958 74.8931 335.747 74.8931 cv
335.499 74.8931 335.321 74.8125 335.21 74.6519 cv
335.099 74.4912 335.038 74.2998 335.028 74.0771 cv
334.751 74.3179 334.517 74.4971 334.319 74.6138 cv
333.989 74.8105 333.675 74.9092 333.378 74.9092 cv
333.065 74.9092 332.794 74.7988 332.565 74.5781 cv
332.337 74.3574 332.222 74.0771 332.222 73.7378 cv
332.222 73.2085 332.485 72.7671 333.013 72.4131 cv
cp
f
340.296 74.0879 mo
340.47 73.9204 340.556 73.7617 340.556 73.6118 cv
340.556 71.2637 li
340.556 70.7891 340.431 70.4541 340.179 70.2588 cv
339.925 70.064 339.679 69.9658 339.44 69.9658 cv
338.981 69.9658 338.626 70.1694 338.372 70.5767 cv
338.118 70.9834 337.991 71.4844 337.991 72.0791 cv
337.991 72.6665 338.126 73.1904 338.397 73.6504 cv
338.667 74.1099 339.071 74.3398 339.608 74.3398 cv
339.892 74.3398 340.12 74.2559 340.296 74.0879 cv
cp
340.138 69.8291 mo
340.282 69.9058 340.423 70.0117 340.556 70.1465 cv
340.556 68.4058 li
340.556 68.1831 340.532 68.0303 340.483 67.9463 cv
340.435 67.8623 340.317 67.8203 340.132 67.8203 cv
340.089 67.8203 340.05 67.8223 340.017 67.8257 cv
339.985 67.8291 339.911 67.8364 339.8 67.8477 cv
339.8 67.667 li
340.245 67.5518 li
340.409 67.5083 340.573 67.4624 340.735 67.415 cv
340.899 67.3677 341.044 67.3218 341.167 67.2783 cv
341.224 67.2598 341.321 67.2251 341.456 67.1743 cv
341.487 67.1851 li
341.478 67.7598 li
341.474 67.9678 341.47 68.1826 341.466 68.4033 cv
341.462 68.624 341.46 68.8418 341.46 69.0571 cv
341.45 73.5298 li
341.45 73.7671 341.479 73.9331 341.536 74.0278 cv
341.595 74.123 341.749 74.1704 341.999 74.1704 cv
342.04 74.1704 342.079 74.1694 342.12 74.1675 cv
342.159 74.1655 342.2 74.1611 342.239 74.1538 cv
342.239 74.3345 li
342.218 74.3418 341.954 74.4331 341.45 74.6084 cv
340.595 74.9312 li
340.556 74.8818 li
340.556 74.2085 li
340.353 74.4312 340.177 74.5898 340.028 74.6851 cv
339.763 74.8491 339.456 74.9312 339.108 74.9312 cv
338.489 74.9312 337.989 74.6914 337.606 74.2114 cv
337.224 73.7314 337.032 73.1758 337.032 72.5444 cv
337.032 71.7524 337.261 71.0728 337.722 70.5054 cv
338.181 69.938 338.743 69.6538 339.407 69.6538 cv
339.673 69.6538 339.915 69.7124 340.138 69.8291 cv
cp
f
343.427 67.354 mo
343.536 67.2417 343.671 67.1851 343.831 67.1851 cv
343.987 67.1851 344.12 67.2407 344.231 67.3516 cv
344.341 67.4619 344.397 67.5977 344.397 67.7573 cv
344.397 67.9136 344.341 68.0469 344.231 68.1577 cv
344.12 68.2686 343.987 68.3237 343.831 68.3237 cv
343.671 68.3237 343.536 68.2686 343.427 68.1577 cv
343.317 68.0469 343.265 67.9136 343.265 67.7573 cv
343.265 67.6011 343.317 67.4668 343.427 67.354 cv
cp
342.562 74.6738 mo
342.95 74.6372 343.194 74.5708 343.296 74.4741 cv
343.397 74.3774 343.448 74.1157 343.448 73.6885 cv
343.448 71.0771 li
343.448 70.8403 343.433 70.6758 343.399 70.5845 cv
343.345 70.4351 343.231 70.3604 343.058 70.3604 cv
343.017 70.3604 342.978 70.3638 342.94 70.3711 cv
342.901 70.3784 342.792 70.4077 342.61 70.4585 cv
342.61 70.2891 li
342.845 70.2124 li
343.479 70.0044 343.923 69.8477 344.173 69.7417 cv
344.274 69.6978 344.341 69.6758 344.37 69.6758 cv
344.376 69.7017 344.38 69.729 344.38 69.7578 cv
344.38 73.6885 li
344.38 74.1045 344.431 74.3657 344.53 74.4712 cv
344.63 74.5771 344.856 74.6445 345.208 74.6738 cv
345.208 74.8271 li
342.562 74.8271 li
342.562 74.6738 li
cp
f
348.64 71.7944 mo
348.224 71.9331 347.878 72.0864 347.604 72.2544 cv
347.083 72.5791 346.821 72.9478 346.821 73.3599 cv
346.821 73.6924 346.931 73.9365 347.147 74.0938 cv
347.29 74.1958 347.448 74.2471 347.622 74.2471 cv
347.862 74.2471 348.091 74.1792 348.312 74.0444 cv
348.53 73.9092 348.64 73.7378 348.64 73.5298 cv
348.64 71.7944 li
cp
346.642 72.4131 mo
346.976 72.1938 347.642 71.8965 348.64 71.5205 cv
348.64 71.0552 li
348.64 70.6831 348.604 70.4243 348.532 70.2778 cv
348.407 70.0337 348.151 69.9111 347.763 69.9111 cv
347.579 69.9111 347.401 69.959 347.235 70.0537 cv
347.067 70.1523 346.985 70.2871 346.985 70.4585 cv
346.985 70.5024 346.993 70.5767 347.011 70.6807 cv
347.03 70.7847 347.038 70.8511 347.038 70.8804 cv
347.038 71.0845 346.972 71.2271 346.837 71.3071 cv
346.761 71.3545 346.671 71.3784 346.565 71.3784 cv
346.401 71.3784 346.276 71.3247 346.188 71.2168 cv
346.103 71.1094 346.058 70.9897 346.058 70.8584 cv
346.058 70.603 346.216 70.3354 346.53 70.0562 cv
346.843 69.7773 347.304 69.6377 347.911 69.6377 cv
348.614 69.6377 349.093 69.8677 349.343 70.3271 cv
349.478 70.5791 349.544 70.9458 349.544 71.4277 cv
349.544 73.623 li
349.544 73.8345 349.56 73.9805 349.589 74.0605 cv
349.636 74.2031 349.733 74.2744 349.882 74.2744 cv
349.966 74.2744 350.034 74.2617 350.089 74.2358 cv
350.144 74.2104 350.237 74.1484 350.372 74.0498 cv
350.372 74.3345 li
350.257 74.4766 350.132 74.5938 349.997 74.6851 cv
349.794 74.8237 349.587 74.8931 349.376 74.8931 cv
349.128 74.8931 348.95 74.8125 348.839 74.6519 cv
348.728 74.4912 348.667 74.2998 348.657 74.0771 cv
348.38 74.3179 348.146 74.4971 347.948 74.6138 cv
347.618 74.8105 347.304 74.9092 347.007 74.9092 cv
346.694 74.9092 346.423 74.7988 346.194 74.5781 cv
345.966 74.3574 345.851 74.0771 345.851 73.7378 cv
345.851 73.2085 346.114 72.7671 346.642 72.4131 cv
cp
f
353.231 69.7798 mo
353.231 70.1738 li
352.12 70.1738 li
352.11 73.3271 li
352.11 73.6045 352.134 73.8145 352.181 73.9565 cv
352.269 74.2085 352.438 74.3345 352.692 74.3345 cv
352.823 74.3345 352.937 74.3037 353.034 74.2412 cv
353.13 74.1792 353.239 74.0811 353.362 73.9458 cv
353.505 74.0664 li
353.384 74.2305 li
353.196 74.4858 352.995 74.6665 352.786 74.7725 cv
352.575 74.8784 352.372 74.9312 352.175 74.9312 cv
351.747 74.9312 351.456 74.7397 351.304 74.3564 cv
351.22 74.1484 351.179 73.8599 351.179 73.4912 cv
351.179 70.1738 li
350.585 70.1738 li
350.567 70.1631 350.554 70.1523 350.544 70.1411 cv
350.534 70.1304 350.53 70.1157 350.53 70.0977 cv
350.53 70.061 350.538 70.0327 350.556 70.0127 cv
350.571 69.9927 350.622 69.9458 350.71 69.873 cv
350.96 69.665 351.142 69.4961 351.253 69.3667 cv
351.362 69.2373 351.624 68.895 352.034 68.3403 cv
352.081 68.3403 352.108 68.3438 352.118 68.3511 cv
352.128 68.3584 352.132 68.3857 352.132 68.4331 cv
352.132 69.7798 li
353.231 69.7798 li
cp
f
354.577 67.354 mo
354.687 67.2417 354.821 67.1851 354.981 67.1851 cv
355.138 67.1851 355.271 67.2407 355.382 67.3516 cv
355.491 67.4619 355.548 67.5977 355.548 67.7573 cv
355.548 67.9136 355.491 68.0469 355.382 68.1577 cv
355.271 68.2686 355.138 68.3237 354.981 68.3237 cv
354.821 68.3237 354.687 68.2686 354.577 68.1577 cv
354.468 68.0469 354.415 67.9136 354.415 67.7573 cv
354.415 67.6011 354.468 67.4668 354.577 67.354 cv
cp
353.712 74.6738 mo
354.101 74.6372 354.345 74.5708 354.446 74.4741 cv
354.548 74.3774 354.599 74.1157 354.599 73.6885 cv
354.599 71.0771 li
354.599 70.8403 354.583 70.6758 354.55 70.5845 cv
354.495 70.4351 354.382 70.3604 354.208 70.3604 cv
354.167 70.3604 354.128 70.3638 354.091 70.3711 cv
354.052 70.3784 353.942 70.4077 353.761 70.4585 cv
353.761 70.2891 li
353.995 70.2124 li
354.63 70.0044 355.073 69.8477 355.323 69.7417 cv
355.425 69.6978 355.491 69.6758 355.521 69.6758 cv
355.526 69.7017 355.53 69.729 355.53 69.7578 cv
355.53 73.6885 li
355.53 74.1045 355.581 74.3657 355.681 74.4712 cv
355.78 74.5771 356.007 74.6445 356.358 74.6738 cv
356.358 74.8271 li
353.712 74.8271 li
353.712 74.6738 li
cp
f
358.989 69.7417 mo
358.989 69.9111 li
358.802 69.9331 358.667 69.9624 358.589 69.999 cv
358.511 70.0356 358.472 70.1157 358.472 70.2397 cv
358.472 70.2983 358.481 70.354 358.497 70.4067 cv
358.513 70.4595 358.542 70.5371 358.581 70.6392 cv
359.726 73.3896 li
360.694 70.9624 li
360.741 70.8418 360.786 70.7158 360.829 70.5845 cv
360.87 70.4531 360.892 70.353 360.892 70.2837 cv
360.892 70.1411 360.823 70.0391 360.69 69.9771 cv
360.61 69.9443 360.501 69.9224 360.362 69.9111 cv
360.362 69.7417 li
361.909 69.7417 li
361.909 69.9111 li
361.731 69.9258 361.604 69.9854 361.526 70.0894 cv
361.448 70.1934 361.335 70.4331 361.185 70.8091 cv
359.61 74.7505 li
359.581 74.8198 359.558 74.8672 359.54 74.8931 cv
359.522 74.9185 359.497 74.9312 359.464 74.9312 cv
359.427 74.9312 359.397 74.9102 359.372 74.8682 cv
359.347 74.8262 359.319 74.7744 359.29 74.7124 cv
357.622 70.7051 li
357.489 70.3804 357.345 70.1597 357.192 70.0425 cv
357.103 69.9771 356.97 69.9331 356.794 69.9111 cv
356.794 69.7417 li
358.989 69.7417 li
cp
f
363.462 70.645 mo
363.347 70.8418 363.263 71.0903 363.212 71.3892 cv
365.511 71.3892 li
365.47 71.0244 365.401 70.7524 365.304 70.5737 cv
365.126 70.2524 364.827 70.0918 364.411 70.0918 cv
363.997 70.0918 363.681 70.2764 363.462 70.645 cv
cp
366.071 70.2261 mo
366.456 70.582 366.649 71.0864 366.649 71.7397 cv
363.19 71.7397 li
363.226 72.5845 363.417 73.1997 363.763 73.5859 cv
364.106 73.9717 364.515 74.1646 364.987 74.1646 cv
365.368 74.1646 365.69 74.0645 365.952 73.8643 cv
366.214 73.6641 366.454 73.3799 366.677 73.0122 cv
366.866 73.0776 li
366.718 73.542 366.438 73.9717 366.03 74.3662 cv
365.622 74.7612 365.122 74.9585 364.53 74.9585 cv
363.847 74.9585 363.319 74.6992 362.948 74.1812 cv
362.575 73.6631 362.39 73.0664 362.39 72.3911 cv
362.39 71.6577 362.604 71.0244 363.038 70.4917 cv
363.47 69.959 364.032 69.6924 364.726 69.6924 cv
365.237 69.6924 365.687 69.8701 366.071 70.2261 cv
cp
f
240.695 169.381 mo
241.029 169.352 241.251 169.292 241.36 169.203 cv
241.469 169.114 241.523 168.923 241.523 168.631 cv
241.523 166.162 li
241.523 165.801 241.49 165.542 241.423 165.387 cv
241.355 165.232 241.233 165.155 241.055 165.155 cv
241.019 165.155 240.971 165.159 240.911 165.168 cv
240.851 165.178 240.788 165.189 240.723 165.204 cv
240.723 165.023 li
240.929 164.95 241.141 164.875 241.358 164.799 cv
241.575 164.722 241.726 164.667 241.809 164.635 cv
241.989 164.565 242.176 164.487 242.368 164.399 cv
242.394 164.399 242.408 164.409 242.414 164.427 cv
242.42 164.445 242.422 164.483 242.422 164.542 cv
242.422 165.439 li
242.655 165.115 242.88 164.861 243.097 164.679 cv
243.313 164.496 243.538 164.405 243.771 164.405 cv
243.957 164.405 244.108 164.46 244.225 164.572 cv
244.342 164.683 244.399 164.823 244.399 164.991 cv
244.399 165.14 244.355 165.266 244.267 165.368 cv
244.177 165.471 244.065 165.521 243.932 165.521 cv
243.793 165.521 243.654 165.458 243.515 165.33 cv
243.375 165.202 243.265 165.138 243.185 165.138 cv
243.058 165.138 242.901 165.242 242.717 165.448 cv
242.531 165.654 242.438 165.866 242.438 166.085 cv
242.438 168.554 li
242.438 168.868 242.511 169.086 242.656 169.208 cv
242.802 169.331 243.043 169.388 243.381 169.381 cv
243.381 169.562 li
240.695 169.562 li
240.695 169.381 li
cp
f
245.652 165.379 mo
245.536 165.576 245.452 165.825 245.401 166.124 cv
247.7 166.124 li
247.66 165.759 247.592 165.487 247.493 165.308 cv
247.315 164.987 247.018 164.826 246.601 164.826 cv
246.187 164.826 245.87 165.011 245.652 165.379 cv
cp
248.262 164.96 mo
248.646 165.316 248.839 165.821 248.839 166.474 cv
245.38 166.474 li
245.416 167.319 245.606 167.934 245.952 168.32 cv
246.297 168.706 246.705 168.899 247.178 168.899 cv
247.559 168.899 247.88 168.799 248.142 168.599 cv
248.403 168.398 248.645 168.114 248.866 167.747 cv
249.057 167.812 li
248.908 168.276 248.629 168.706 248.221 169.101 cv
247.813 169.496 247.312 169.693 246.72 169.693 cv
246.037 169.693 245.51 169.434 245.138 168.916 cv
244.766 168.397 244.579 167.801 244.579 167.125 cv
244.579 166.392 244.795 165.759 245.228 165.226 cv
245.659 164.693 246.223 164.427 246.916 164.427 cv
247.428 164.427 247.877 164.604 248.262 164.96 cv
cp
f
252.511 166.529 mo
252.094 166.667 251.748 166.821 251.476 166.989 cv
250.953 167.313 250.691 167.682 250.691 168.094 cv
250.691 168.427 250.801 168.671 251.019 168.828 cv
251.16 168.93 251.318 168.981 251.492 168.981 cv
251.732 168.981 251.962 168.914 252.182 168.779 cv
252.401 168.644 252.511 168.472 252.511 168.264 cv
252.511 166.529 li
cp
250.512 167.147 mo
250.846 166.928 251.513 166.631 252.511 166.255 cv
252.511 165.79 li
252.511 165.417 252.475 165.159 252.402 165.012 cv
252.278 164.768 252.022 164.646 251.634 164.646 cv
251.449 164.646 251.272 164.693 251.105 164.788 cv
250.938 164.887 250.855 165.021 250.855 165.193 cv
250.855 165.237 250.864 165.311 250.882 165.415 cv
250.9 165.519 250.909 165.585 250.909 165.615 cv
250.909 165.819 250.842 165.961 250.708 166.042 cv
250.632 166.089 250.541 166.113 250.436 166.113 cv
250.272 166.113 250.146 166.059 250.06 165.951 cv
249.973 165.844 249.929 165.724 249.929 165.593 cv
249.929 165.337 250.086 165.07 250.4 164.791 cv
250.714 164.512 251.175 164.372 251.781 164.372 cv
252.485 164.372 252.963 164.602 253.214 165.062 cv
253.348 165.313 253.415 165.68 253.415 166.162 cv
253.415 168.357 li
253.415 168.569 253.43 168.715 253.459 168.795 cv
253.506 168.938 253.604 169.009 253.753 169.009 cv
253.837 169.009 253.905 168.996 253.96 168.97 cv
254.015 168.945 254.108 168.883 254.243 168.784 cv
254.243 169.069 li
254.127 169.211 254.002 169.328 253.867 169.419 cv
253.664 169.558 253.457 169.627 253.246 169.627 cv
252.999 169.627 252.82 169.547 252.71 169.386 cv
252.599 169.226 252.538 169.034 252.527 168.812 cv
252.251 169.052 252.016 169.231 251.819 169.348 cv
251.488 169.545 251.175 169.644 250.877 169.644 cv
250.564 169.644 250.294 169.533 250.065 169.313 cv
249.836 169.092 249.722 168.812 249.722 168.472 cv
249.722 167.943 249.985 167.501 250.512 167.147 cv
cp
f
258.211 164.751 mo
258.54 164.986 258.704 165.243 258.704 165.523 cv
258.704 165.643 258.662 165.755 258.579 165.859 cv
258.495 165.962 258.366 166.014 258.192 166.014 cv
258.064 166.014 257.953 165.97 257.857 165.883 cv
257.761 165.795 257.691 165.667 257.647 165.5 cv
257.582 165.237 li
257.535 165.043 257.453 164.907 257.337 164.826 cv
257.217 164.75 257.059 164.711 256.863 164.711 cv
256.449 164.711 256.1 164.893 255.814 165.257 cv
255.529 165.621 255.387 166.104 255.387 166.707 cv
255.387 167.258 255.544 167.754 255.858 168.192 cv
256.172 168.631 256.596 168.85 257.13 168.85 cv
257.508 168.85 257.844 168.726 258.138 168.477 cv
258.305 168.334 258.493 168.107 258.704 167.797 cv
258.856 167.89 li
258.649 168.329 258.432 168.675 258.203 168.931 cv
257.764 169.421 257.255 169.666 256.678 169.666 cv
256.111 169.666 255.61 169.441 255.175 168.992 cv
254.738 168.543 254.521 167.934 254.521 167.164 cv
254.521 166.408 254.759 165.759 255.234 165.215 cv
255.71 164.671 256.311 164.399 257.037 164.399 cv
257.491 164.399 257.883 164.517 258.211 164.751 cv
cp
f
259.313 169.408 mo
259.611 169.368 259.807 169.294 259.899 169.187 cv
259.992 169.079 260.038 168.824 260.038 168.423 cv
260.038 163.167 li
260.038 162.963 260.012 162.813 259.959 162.716 cv
259.906 162.619 259.778 162.571 259.575 162.571 cv
259.535 162.571 259.496 162.574 259.458 162.579 cv
259.42 162.584 259.377 162.591 259.33 162.598 cv
259.33 162.401 li
259.49 162.354 259.687 162.296 259.921 162.229 cv
260.155 162.161 260.318 162.113 260.409 162.084 cv
260.932 161.919 li
260.942 161.958 li
260.942 165.319 li
261.171 165.056 261.375 164.863 261.553 164.739 cv
261.872 164.52 262.217 164.41 262.588 164.41 cv
263.176 164.41 263.577 164.659 263.791 165.155 cv
263.907 165.417 263.966 165.762 263.966 166.189 cv
263.966 168.423 li
263.966 168.81 264.01 169.062 264.1 169.178 cv
264.188 169.295 264.371 169.372 264.646 169.408 cv
264.646 169.562 li
262.288 169.562 li
262.288 169.408 li
262.604 169.364 262.808 169.29 262.898 169.184 cv
262.989 169.078 263.034 168.824 263.034 168.423 cv
263.034 166.206 li
263.034 165.852 262.976 165.565 262.857 165.346 cv
262.739 165.127 262.517 165.018 262.19 165.018 cv
261.907 165.018 261.633 165.12 261.367 165.325 cv
261.103 165.529 260.97 165.662 260.97 165.724 cv
260.97 168.423 li
260.97 168.832 261.017 169.087 261.111 169.189 cv
261.206 169.292 261.407 169.364 261.716 169.408 cv
261.716 169.562 li
259.313 169.562 li
259.313 169.408 li
cp
f
270.908 162.081 mo
270.91 162.09 270.911 162.111 270.911 162.144 cv
270.911 168.735 li
270.911 169.016 270.986 169.195 271.136 169.271 cv
271.285 169.348 271.564 169.394 271.974 169.408 cv
271.974 169.562 li
268.896 169.562 li
268.896 169.397 li
269.335 169.375 269.622 169.315 269.757 169.217 cv
269.891 169.118 269.958 168.905 269.958 168.576 cv
269.958 163.507 li
269.958 163.332 269.937 163.199 269.893 163.107 cv
269.849 163.016 269.755 162.971 269.609 162.971 cv
269.515 162.971 269.393 162.997 269.241 163.05 cv
269.091 163.103 268.95 163.159 268.819 163.217 cv
268.819 163.063 li
270.818 162.04 li
270.884 162.04 li
270.898 162.058 270.906 162.072 270.908 162.081 cv
cp
f
280.971 168.354 mo
281.324 167.772 281.501 167.233 281.501 166.737 cv
281.501 166.43 281.427 166.191 281.278 166.02 cv
281.13 165.848 280.936 165.762 280.696 165.762 cv
280.266 165.762 279.881 166.095 279.544 166.759 cv
279.207 167.423 279.039 167.998 279.039 168.483 cv
279.039 168.724 279.107 168.908 279.245 169.036 cv
279.383 169.164 279.561 169.228 279.778 169.228 cv
280.22 169.228 280.617 168.937 280.971 168.354 cv
cp
278.942 166.247 mo
279.44 165.687 279.993 165.407 280.599 165.407 cv
280.914 165.407 281.193 165.501 281.436 165.691 cv
281.679 165.881 281.801 166.233 281.801 166.748 cv
281.801 167.299 281.594 167.908 281.181 168.576 cv
280.767 169.244 280.222 169.578 279.543 169.578 cv
279.177 169.578 278.86 169.453 278.594 169.203 cv
278.327 168.953 278.194 168.563 278.194 168.034 cv
278.194 167.403 278.443 166.807 278.942 166.247 cv
cp
276.604 165.127 mo
276.975 164.583 277.159 163.991 277.159 163.348 cv
277.159 163.118 277.135 162.971 277.086 162.905 cv
277.037 162.839 276.95 162.792 276.827 162.763 cv
276.74 162.741 276.638 162.687 276.52 162.601 cv
276.401 162.515 276.329 162.472 276.304 162.472 cv
275.952 162.472 275.594 162.789 275.229 163.422 cv
274.863 164.055 274.681 164.638 274.681 165.171 cv
274.681 165.412 274.738 165.601 274.853 165.738 cv
274.967 165.875 275.142 165.943 275.378 165.943 cv
275.825 165.943 276.233 165.671 276.604 165.127 cv
cp
276.81 162.231 mo
276.887 162.261 276.961 162.308 277.034 162.374 cv
277.242 162.56 li
277.326 162.633 277.444 162.684 277.598 162.713 cv
277.751 162.743 277.908 162.757 278.069 162.757 cv
278.488 162.757 278.876 162.655 279.229 162.451 cv
279.42 162.345 279.618 162.189 279.826 161.985 cv
280.259 161.985 li
275.934 169.72 li
275.406 169.72 li
279.324 162.713 li
279.047 162.841 278.841 162.925 278.704 162.965 cv
278.567 163.005 278.387 163.025 278.162 163.025 cv
277.963 163.025 277.791 163.013 277.647 162.987 cv
277.555 162.973 277.463 162.951 277.372 162.921 cv
277.4 163.02 277.421 163.101 277.432 163.165 cv
277.442 163.229 277.448 163.328 277.448 163.463 cv
277.448 164.12 277.229 164.762 276.791 165.387 cv
276.353 166.013 275.815 166.326 275.179 166.326 cv
274.841 166.326 274.533 166.197 274.257 165.938 cv
273.98 165.679 273.842 165.299 273.842 164.799 cv
273.842 164.197 274.087 163.604 274.576 163.02 cv
275.064 162.436 275.625 162.144 276.257 162.144 cv
276.483 162.144 276.667 162.173 276.81 162.231 cv
cp
f
225.405 32.7822 mo
225.405 37.2637 li
225.405 37.8965 225.566 38.4482 226.102 38.6904 cv
226.503 38.8652 226.838 38.8652 227.199 38.7036 cv
227.507 38.5557 227.988 38.2192 228.176 37.7886 cv
228.176 32.7822 li
229.326 32.7822 li
229.326 37.9502 li
229.326 38.2998 229.434 38.6904 229.635 38.8921 cv
229.849 39.1074 230.076 39.1479 230.344 39 cv
230.705 38.7847 230.665 38.3809 230.759 38.1519 cv
231.026 38.1519 li
230.919 38.6094 230.812 39.1748 230.116 39.5518 cv
229.474 39.9014 228.925 39.686 228.737 39.5381 cv
228.27 39.1885 228.283 38.8516 228.189 38.4209 cv
228.068 38.5962 227.881 38.8921 227.252 39.3496 cv
226.944 39.5786 226.477 39.7402 225.994 39.7402 cv
225.365 39.7402 224.924 39.2285 224.736 39.0942 cv
224.736 39.4033 li
224.776 40.1978 225.004 40.4399 225.138 41.1934 cv
225.285 42.0815 224.884 42.5122 224.522 42.5122 cv
224.161 42.5122 223.76 42.0815 223.907 41.1934 cv
224.041 40.4399 224.255 40.1978 224.255 39.4033 cv
224.255 32.7822 li
225.405 32.7822 li
cp
f
234.518 27.9282 mo
234.518 30.5635 li
237.161 30.5635 li
237.161 31.1807 li
234.518 31.1807 li
234.518 33.9058 li
233.904 33.9058 li
233.904 31.1807 li
231.261 31.1807 li
231.261 30.5635 li
233.904 30.5635 li
233.904 27.9282 li
234.518 27.9282 li
cp
f
242.832 34.085 mo
242.396 34.4839 242.177 35.1714 242.177 36.1479 cv
242.177 36.9272 242.353 37.6543 242.704 38.3286 cv
243.056 39.0034 243.543 39.3403 244.168 39.3403 cv
244.656 39.3403 245.033 39.1147 245.297 38.6641 cv
245.562 38.2129 245.693 37.6216 245.693 36.8901 cv
245.693 36.1328 245.525 35.4189 245.189 34.7485 cv
244.854 34.0786 244.366 33.7437 243.729 33.7437 cv
243.384 33.7437 243.085 33.8574 242.832 34.085 cv
cp
241.788 34.2529 mo
242.339 33.6504 243.048 33.3496 243.916 33.3496 cv
244.778 33.3496 245.493 33.6343 246.06 34.2036 cv
246.626 34.7729 246.909 35.5303 246.909 36.4766 cv
246.909 37.3477 246.635 38.1055 246.086 38.749 cv
245.537 39.3931 244.826 39.7148 243.955 39.7148 cv
243.118 39.7148 242.41 39.4063 241.83 38.7886 cv
241.251 38.1714 240.961 37.396 240.961 36.4634 cv
240.961 35.5918 241.236 34.855 241.788 34.2529 cv
cp
f
247.557 39.3271 mo
247.865 39.2881 248.082 39.21 248.207 39.0942 cv
248.331 38.978 248.393 38.7188 248.393 38.3154 cv
248.393 34.9785 li
248.393 34.7007 248.367 34.5049 248.314 34.3921 cv
248.231 34.2271 248.062 34.1445 247.805 34.1445 cv
247.766 34.1445 247.726 34.1465 247.684 34.1509 cv
247.643 34.1553 247.591 34.1621 247.53 34.1704 cv
247.53 33.9409 li
247.709 33.8882 248.132 33.7524 248.798 33.5332 cv
249.413 33.3296 li
249.443 33.3296 249.462 33.3408 249.469 33.3628 cv
249.475 33.3848 249.479 33.415 249.479 33.4546 cv
249.479 34.4204 li
249.878 34.0435 250.191 33.7852 250.418 33.645 cv
250.757 33.4307 251.109 33.3232 251.475 33.3232 cv
251.771 33.3232 252.04 33.4087 252.283 33.5796 cv
252.753 33.9121 252.988 34.5059 252.988 35.3594 cv
252.988 38.4272 li
252.988 38.7427 253.051 38.9702 253.177 39.1104 cv
253.302 39.2505 253.512 39.3228 253.806 39.3271 cv
253.806 39.5112 li
251.015 39.5112 li
251.015 39.3271 li
251.332 39.2837 251.555 39.1948 251.681 39.061 cv
251.808 38.9277 251.87 38.6377 251.87 38.1909 cv
251.87 35.3857 li
251.87 35.0093 251.801 34.6973 251.662 34.4497 cv
251.523 34.2026 251.269 34.0786 250.896 34.0786 cv
250.64 34.0786 250.38 34.1665 250.115 34.3413 cv
249.968 34.4424 249.777 34.6084 249.543 34.8408 cv
249.543 38.5195 li
249.543 38.8345 249.613 39.0459 249.753 39.1533 cv
249.892 39.2607 250.112 39.3184 250.413 39.3271 cv
250.413 39.5112 li
247.557 39.5112 li
247.557 39.3271 li
cp
f
263.8 30.6694 mo
264.31 30.814 264.595 30.8862 264.656 30.8862 cv
264.782 30.8862 264.902 30.8511 265.016 30.7808 cv
265.129 30.7109 265.207 30.6016 265.251 30.4526 cv
265.532 30.4526 li
265.656 33.4741 li
265.349 33.4741 li
265.17 32.8745 264.937 32.3906 264.649 32.0225 cv
264.101 31.3306 263.361 30.9844 262.434 30.9844 cv
261.496 30.9844 260.73 31.3569 260.136 32.1016 cv
259.541 32.8457 259.243 33.8706 259.243 35.1758 cv
259.243 36.3755 259.557 37.3335 260.182 38.0498 cv
260.807 38.7656 261.599 39.1235 262.558 39.1235 cv
263.251 39.1235 263.889 38.9575 264.473 38.6245 cv
264.809 38.436 265.177 38.1514 265.577 37.7705 cv
265.826 38.02 li
265.529 38.397 265.161 38.7275 264.722 39.0122 cv
263.972 39.4937 263.159 39.7344 262.283 39.7344 cv
260.845 39.7344 259.703 39.2725 258.858 38.3486 cv
258.078 37.4946 257.688 36.4282 257.688 35.1494 cv
257.688 33.8398 258.1 32.7407 258.923 31.8516 cv
259.79 30.9189 260.919 30.4526 262.31 30.4526 cv
262.793 30.4526 263.29 30.5249 263.8 30.6694 cv
cp
f
268.356 33.4282 mo
268.356 37.6323 li
268.356 37.9302 268.397 38.1689 268.48 38.3486 cv
268.642 38.6812 268.938 38.8477 269.369 38.8477 cv
269.666 38.8477 269.955 38.749 270.239 38.5522 cv
270.4 38.4429 270.563 38.2915 270.729 38.0991 cv
270.729 34.499 li
270.729 34.1621 270.664 33.9409 270.533 33.8354 cv
270.402 33.7305 270.141 33.667 269.749 33.645 cv
269.749 33.4282 li
271.86 33.4282 li
271.86 38.0527 li
271.86 38.3506 271.913 38.5557 272.021 38.667 cv
272.127 38.7788 272.353 38.8281 272.696 38.8149 cv
272.696 38.999 li
272.457 39.0645 272.28 39.1138 272.167 39.1465 cv
272.054 39.1797 271.864 39.2397 271.599 39.3271 cv
271.485 39.3667 271.236 39.4609 270.854 39.6099 cv
270.831 39.6099 270.818 39.6001 270.814 39.5801 cv
270.81 39.5605 270.808 39.5376 270.808 39.5112 cv
270.808 38.4536 li
270.511 38.8081 270.241 39.0713 269.997 39.2417 cv
269.627 39.5049 269.234 39.6362 268.82 39.6362 cv
268.441 39.6362 268.084 39.5 267.748 39.228 cv
267.408 38.9609 267.238 38.5112 267.238 37.8799 cv
267.238 34.4663 li
267.238 34.1187 267.164 33.8862 267.017 33.7686 cv
266.92 33.6948 266.716 33.6426 266.401 33.6123 cv
266.401 33.4282 li
268.356 33.4282 li
cp
f
.44734 lw
[] 0 dsh
286.136 46.2402 mo
286.136 22.6963 li
214.738 22.6963 li
214.738 46.2402 li
286.136 46.2402 li
cp
@
386.157 195.778 mo
386.157 195.986 li
385.936 195.994 385.777 196.014 385.684 196.046 cv
385.517 196.108 385.433 196.222 385.433 196.386 cv
385.433 196.459 385.442 196.53 385.463 196.6 cv
385.482 196.669 385.513 196.758 385.553 196.868 cv
387.166 201.083 li
388.345 197.941 li
387.823 196.567 li
387.725 196.319 387.578 196.153 387.382 196.068 cv
387.266 196.017 387.09 195.99 386.854 195.986 cv
386.854 195.778 li
389.841 195.778 li
389.841 195.986 li
389.561 195.99 389.368 196.01 389.264 196.046 cv
389.096 196.108 389.013 196.236 389.013 196.43 cv
389.013 196.495 389.02 196.553 389.034 196.602 cv
389.049 196.651 389.085 196.752 389.144 196.906 cv
390.756 201.11 li
392.151 197.306 li
392.231 197.09 392.286 196.898 392.315 196.731 cv
392.333 196.636 392.342 196.559 392.342 196.501 cv
392.342 196.293 392.244 196.149 392.048 196.068 cv
391.939 196.021 391.775 195.994 391.558 195.986 cv
391.558 195.778 li
393.772 195.778 li
393.772 195.986 li
393.573 196.016 393.42 196.061 393.315 196.123 cv
393.126 196.229 392.984 196.412 392.89 196.671 cv
391.722 200.014 li
391.271 201.303 li
390.564 203.327 li
390.392 203.327 li
389.904 202.044 li
388.613 198.591 li
386.899 203.327 li
386.73 203.327 li
385.899 201.005 li
384.959 198.376 li
384.57 197.293 384.3 196.629 384.146 196.383 cv
383.991 196.137 383.751 196.004 383.424 195.986 cv
383.424 195.778 li
386.157 195.778 li
cp
1 0 0 0 cmyk
f
394.985 195.723 mo
395.095 195.61 395.229 195.554 395.389 195.554 cv
395.545 195.554 395.678 195.609 395.789 195.72 cv
395.899 195.831 395.955 195.966 395.955 196.126 cv
395.955 196.282 395.899 196.416 395.789 196.526 cv
395.678 196.637 395.545 196.692 395.389 196.692 cv
395.229 196.692 395.095 196.637 394.985 196.526 cv
394.876 196.416 394.822 196.282 394.822 196.126 cv
394.822 195.97 394.876 195.835 394.985 195.723 cv
cp
394.119 203.042 mo
394.508 203.006 394.753 202.939 394.854 202.843 cv
394.956 202.746 395.007 202.484 395.007 202.057 cv
395.007 199.446 li
395.007 199.209 394.991 199.044 394.958 198.953 cv
394.903 198.804 394.789 198.729 394.615 198.729 cv
394.575 198.729 394.536 198.732 394.498 198.74 cv
394.46 198.747 394.35 198.776 394.168 198.827 cv
394.168 198.658 li
394.402 198.581 li
395.038 198.373 395.481 198.216 395.731 198.11 cv
395.833 198.066 395.898 198.044 395.928 198.044 cv
395.935 198.07 395.938 198.098 395.938 198.126 cv
395.938 202.057 li
395.938 202.473 395.988 202.734 396.089 202.84 cv
396.188 202.946 396.414 203.013 396.767 203.042 cv
396.767 203.196 li
394.119 203.196 li
394.119 203.042 li
cp
f
399.839 198.148 mo
399.839 198.542 li
398.728 198.542 li
398.717 201.696 li
398.717 201.973 398.74 202.183 398.788 202.325 cv
398.875 202.577 399.046 202.703 399.3 202.703 cv
399.431 202.703 399.544 202.672 399.641 202.61 cv
399.736 202.548 399.847 202.45 399.97 202.314 cv
400.111 202.435 li
399.991 202.599 li
399.803 202.854 399.603 203.035 399.393 203.141 cv
399.182 203.247 398.979 203.3 398.782 203.3 cv
398.354 203.3 398.063 203.108 397.911 202.725 cv
397.827 202.517 397.785 202.229 397.785 201.86 cv
397.785 198.542 li
397.191 198.542 li
397.174 198.532 397.16 198.521 397.15 198.51 cv
397.142 198.499 397.137 198.484 397.137 198.466 cv
397.137 198.43 397.146 198.401 397.162 198.381 cv
397.178 198.361 397.229 198.314 397.317 198.242 cv
397.567 198.034 397.748 197.865 397.859 197.735 cv
397.97 197.606 398.23 197.264 398.641 196.709 cv
398.688 196.709 398.716 196.712 398.725 196.72 cv
398.734 196.727 398.738 196.754 398.738 196.802 cv
398.738 198.148 li
399.839 198.148 li
cp
f
400.198 203.042 mo
400.496 203.002 400.691 202.929 400.784 202.821 cv
400.877 202.713 400.923 202.458 400.923 202.057 cv
400.923 196.802 li
400.923 196.598 400.896 196.447 400.844 196.35 cv
400.791 196.253 400.663 196.205 400.46 196.205 cv
400.42 196.205 400.381 196.208 400.343 196.213 cv
400.305 196.219 400.262 196.225 400.215 196.232 cv
400.215 196.036 li
400.375 195.988 400.571 195.931 400.806 195.863 cv
401.04 195.795 401.203 195.747 401.294 195.718 cv
401.816 195.554 li
401.827 195.592 li
401.827 198.953 li
402.056 198.69 402.26 198.497 402.438 198.373 cv
402.757 198.154 403.102 198.044 403.473 198.044 cv
404.061 198.044 404.462 198.293 404.676 198.789 cv
404.792 199.052 404.851 199.396 404.851 199.824 cv
404.851 202.057 li
404.851 202.444 404.895 202.696 404.984 202.813 cv
405.073 202.93 405.256 203.006 405.531 203.042 cv
405.531 203.196 li
403.173 203.196 li
403.173 203.042 li
403.488 202.999 403.692 202.924 403.783 202.818 cv
403.874 202.712 403.919 202.458 403.919 202.057 cv
403.919 199.84 li
403.919 199.486 403.86 199.2 403.742 198.98 cv
403.624 198.762 403.401 198.652 403.075 198.652 cv
402.792 198.652 402.518 198.754 402.252 198.959 cv
401.987 199.163 401.854 199.296 401.854 199.358 cv
401.854 202.057 li
401.854 202.466 401.901 202.721 401.996 202.824 cv
402.091 202.926 402.292 202.999 402.601 203.042 cv
402.601 203.196 li
400.198 203.196 li
400.198 203.042 li
cp
f
407.521 198.674 mo
407.157 199.006 406.976 199.579 406.976 200.393 cv
406.976 201.042 407.121 201.648 407.414 202.21 cv
407.707 202.772 408.114 203.054 408.634 203.054 cv
409.042 203.054 409.355 202.866 409.575 202.49 cv
409.796 202.114 409.905 201.621 409.905 201.012 cv
409.905 200.38 409.766 199.785 409.485 199.227 cv
409.205 198.668 408.8 198.39 408.269 198.39 cv
407.981 198.39 407.731 198.484 407.521 198.674 cv
cp
406.651 198.813 mo
407.11 198.312 407.701 198.061 408.424 198.061 cv
409.144 198.061 409.738 198.298 410.211 198.772 cv
410.683 199.247 410.919 199.878 410.919 200.667 cv
410.919 201.393 410.69 202.024 410.232 202.561 cv
409.775 203.097 409.183 203.366 408.457 203.366 cv
407.76 203.366 407.169 203.108 406.687 202.594 cv
406.203 202.079 405.962 201.433 405.962 200.656 cv
405.962 199.93 406.191 199.315 406.651 198.813 cv
cp
f
412.983 198.126 mo
412.983 201.63 li
412.983 201.878 413.019 202.077 413.087 202.227 cv
413.222 202.504 413.469 202.643 413.828 202.643 cv
414.075 202.643 414.316 202.561 414.553 202.396 cv
414.687 202.305 414.823 202.18 414.961 202.019 cv
414.961 199.019 li
414.961 198.738 414.906 198.554 414.798 198.466 cv
414.688 198.378 414.471 198.326 414.144 198.307 cv
414.144 198.126 li
415.903 198.126 li
415.903 201.98 li
415.903 202.229 415.947 202.399 416.037 202.492 cv
416.126 202.585 416.313 202.626 416.601 202.616 cv
416.601 202.769 li
416.4 202.824 416.254 202.865 416.159 202.892 cv
416.064 202.919 415.907 202.97 415.686 203.042 cv
415.591 203.075 415.384 203.154 415.064 203.278 cv
415.046 203.278 415.035 203.27 415.032 203.253 cv
415.028 203.237 415.026 203.218 415.026 203.196 cv
415.026 202.314 li
414.779 202.61 414.554 202.829 414.351 202.971 cv
414.042 203.19 413.715 203.3 413.37 203.3 cv
413.055 203.3 412.757 203.187 412.477 202.96 cv
412.193 202.737 412.052 202.362 412.052 201.836 cv
412.052 198.992 li
412.052 198.702 411.99 198.508 411.867 198.41 cv
411.787 198.349 411.616 198.305 411.354 198.28 cv
411.354 198.126 li
412.983 198.126 li
cp
f
419.672 198.148 mo
419.672 198.542 li
418.561 198.542 li
418.55 201.696 li
418.55 201.973 418.573 202.183 418.621 202.325 cv
418.708 202.577 418.879 202.703 419.133 202.703 cv
419.264 202.703 419.377 202.672 419.474 202.61 cv
419.569 202.548 419.68 202.45 419.803 202.314 cv
419.944 202.435 li
419.824 202.599 li
419.636 202.854 419.436 203.035 419.226 203.141 cv
419.015 203.247 418.812 203.3 418.615 203.3 cv
418.187 203.3 417.896 203.108 417.744 202.725 cv
417.66 202.517 417.618 202.229 417.618 201.86 cv
417.618 198.542 li
417.024 198.542 li
417.007 198.532 416.993 198.521 416.983 198.51 cv
416.975 198.499 416.97 198.484 416.97 198.466 cv
416.97 198.43 416.979 198.401 416.995 198.381 cv
417.011 198.361 417.063 198.314 417.15 198.242 cv
417.4 198.034 417.581 197.865 417.692 197.735 cv
417.803 197.606 418.063 197.264 418.474 196.709 cv
418.521 196.709 418.549 196.712 418.558 196.72 cv
418.567 196.727 418.571 196.754 418.571 196.802 cv
418.571 198.148 li
419.672 198.148 li
cp
f
426.73 198.508 mo
425.961 198.676 425.336 199.169 425.213 200.179 cv
425.157 200.594 425.112 201.514 425.57 202.31 cv
425.871 202.837 426.328 202.882 426.563 202.882 cv
426.864 202.882 427.21 202.725 427.467 202.388 cv
427.778 201.962 427.957 201.099 427.734 200.146 cv
427.522 199.271 426.887 198.643 426.73 198.508 cv
cp
425.091 196.994 mo
424.812 196.736 424.723 196.433 424.688 196.321 cv
424.466 195.581 424.968 195.323 425.213 195.132 cv
425.727 194.74 426.998 194.953 427.165 194.986 cv
427.556 195.076 428.058 195.312 428.247 195.536 cv
428.459 195.794 428.56 196.142 428.28 196.354 cv
427.912 196.624 427.533 196.399 427.177 196.018 cv
426.819 195.648 426.73 195.524 426.362 195.413 cv
425.826 195.233 425.492 195.446 425.303 195.648 cv
425.146 195.805 425.057 196.175 425.414 196.534 cv
425.949 197.083 426.875 197.588 427.021 197.678 cv
427.221 197.801 428.035 198.317 428.47 199.046 cv
428.994 199.91 429.24 201.48 428.08 202.635 cv
427.801 202.904 427.332 203.218 426.965 203.319 cv
426.429 203.465 425.793 203.42 425.414 203.218 cv
424.667 202.826 424.41 202.388 424.221 201.984 cv
423.919 201.334 423.841 200.459 424.377 199.562 cv
424.957 198.564 426.194 198.261 426.385 198.183 cv
425.091 196.994 li
cp
f
249.786 237.702 mo
249.997 237.904 250.165 238.106 250.511 238.24 cv
251.001 238.431 251.515 238.487 251.917 238.263 cv
252.362 238.016 252.53 237.612 252.597 237.265 cv
252.765 236.457 252.585 235.201 251.95 234.483 cv
251.782 234.292 251.671 234.214 251.347 234.248 cv
251.136 234.27 250.856 234.326 250.679 234.226 cv
250.321 234.035 250.544 233.766 250.646 233.676 cv
250.856 233.497 251.313 233.62 251.538 233.653 cv
251.716 233.676 251.827 233.474 251.917 233.362 cv
252.196 233.003 252.386 231.702 251.616 231.085 cv
251.214 230.771 250.823 230.782 250.567 230.883 cv
250.177 231.04 249.786 231.556 249.786 232.05 cv
249.786 237.702 li
cp
249.798 240.405 mo
249.798 240.686 249.741 240.966 249.708 241.246 cv
248.737 241.246 li
248.794 240.674 248.915 240.113 248.915 239.542 cv
248.915 232.195 li
248.915 231.276 249.573 230.917 249.931 230.704 cv
250.69 230.267 251.815 230.367 252.608 231.018 cv
252.843 231.208 253.312 231.736 253.198 232.454 cv
253.077 233.25 252.698 233.552 252.284 233.9 cv
252.987 234.237 253.423 234.696 253.69 235.616 cv
253.813 236.042 253.856 236.67 253.724 237.208 cv
253.444 238.341 252.687 238.711 252.396 238.813 cv
252.017 238.947 251.548 238.98 251.091 238.902 cv
250.622 238.824 250.288 238.655 249.819 238.33 cv
249.798 240.405 li
cp
0 0 0 1 cmyk
f
259.581 233.205 mo
257.306 238.095 li
257.351 238.454 257.663 239.743 257.405 240.607 cv
257.249 241.134 257.026 241.291 256.702 241.269 cv
256.392 241.246 256.179 240.932 256.179 240.483 cv
256.179 239.698 256.636 238.622 256.849 238.072 cv
256.669 236.749 256.581 236.401 256.38 235.65 cv
256.245 235.134 256.011 234.517 255.845 234.315 cv
255.722 234.169 255.253 233.811 254.784 234.203 cv
254.427 234.506 254.45 234.91 254.417 235.19 cv
254.237 235.19 li
254.249 234.842 254.192 234.427 254.427 233.788 cv
254.706 233.025 255.466 233.126 255.677 233.193 cv
256.022 233.294 256.356 233.575 256.636 234.708 cv
256.815 235.493 256.993 236.278 257.138 237.152 cv
257.161 237.152 li
258.421 233.205 li
259.581 233.205 li
cp
f
404.575 186.939 mo
413.337 186.939 li
413.337 181.333 li
404.575 181.333 li
404.575 186.939 li
cp
0 0 0 0 cmyk
f
62.042 191.284 mo
69.6416 191.284 li
69.6416 167.11 li
62.042 167.11 li
62.042 191.284 li
cp
0 0 0 .050781 cmyk
f
29.8975 228.748 mo
30.0771 228.22 30.167 227.455 30.167 226.454 cv
30.167 225.657 30.1133 225.02 30.0054 224.544 cv
29.8027 223.658 29.4233 223.215 28.8677 223.215 cv
28.312 223.215 27.9316 223.671 27.7256 224.583 cv
27.6177 225.069 27.564 225.709 27.564 226.503 cv
27.564 227.249 27.6191 227.844 27.7305 228.291 cv
27.9395 229.124 28.332 229.541 28.9072 229.541 cv
29.3877 229.541 29.7178 229.276 29.8975 228.748 cv
cp
30.6426 224.136 mo
30.9727 224.776 31.1377 225.512 31.1377 226.343 cv
31.1377 226.997 31.0366 227.613 30.834 228.191 cv
30.4512 229.278 29.7896 229.822 28.8481 229.822 cv
28.2046 229.822 27.6748 229.528 27.2598 228.94 cv
26.8154 228.313 26.5933 227.46 26.5933 226.383 cv
26.5933 225.535 26.7417 224.806 27.0391 224.195 cv
27.4414 223.364 28.0591 222.949 28.8926 222.949 cv
29.644 222.949 30.2275 223.345 30.6426 224.136 cv
cp
0 0 0 1 cmyk
f
32.7651 229.681 mo
32.6572 229.571 32.6035 229.439 32.6035 229.285 cv
32.6035 229.13 32.6582 228.999 32.7676 228.891 cv
32.877 228.782 33.0088 228.728 33.1621 228.728 cv
33.3159 228.728 33.4468 228.782 33.5547 228.891 cv
33.6626 228.999 33.7163 229.13 33.7163 229.285 cv
33.7163 229.439 33.6631 229.571 33.5571 229.681 cv
33.4507 229.791 33.3193 229.846 33.1621 229.846 cv
33.0054 229.846 32.873 229.791 32.7651 229.681 cv
cp
f
37.4277 228.748 mo
37.6074 228.22 37.6973 227.455 37.6973 226.454 cv
37.6973 225.657 37.6436 225.02 37.5356 224.544 cv
37.333 223.658 36.9536 223.215 36.3979 223.215 cv
35.8423 223.215 35.4619 223.671 35.2559 224.583 cv
35.1479 225.069 35.0942 225.709 35.0942 226.503 cv
35.0942 227.249 35.1494 227.844 35.2607 228.291 cv
35.4697 229.124 35.8623 229.541 36.4375 229.541 cv
36.918 229.541 37.248 229.276 37.4277 228.748 cv
cp
38.1729 224.136 mo
38.5029 224.776 38.668 225.512 38.668 226.343 cv
38.668 226.997 38.5669 227.613 38.3643 228.191 cv
37.9814 229.278 37.3198 229.822 36.3784 229.822 cv
35.7349 229.822 35.2051 229.528 34.79 228.94 cv
34.3457 228.313 34.1235 227.46 34.1235 226.383 cv
34.1235 225.535 34.272 224.806 34.5693 224.195 cv
34.9717 223.364 35.5894 222.949 36.4229 222.949 cv
37.1743 222.949 37.7578 223.345 38.1729 224.136 cv
cp
f
42.4478 228.748 mo
42.6274 228.22 42.7173 227.455 42.7173 226.454 cv
42.7173 225.657 42.6636 225.02 42.5557 224.544 cv
42.353 223.658 41.9736 223.215 41.418 223.215 cv
40.8623 223.215 40.4819 223.671 40.2759 224.583 cv
40.168 225.069 40.1143 225.709 40.1143 226.503 cv
40.1143 227.249 40.1694 227.844 40.2808 228.291 cv
40.4897 229.124 40.8823 229.541 41.4575 229.541 cv
41.938 229.541 42.2681 229.276 42.4478 228.748 cv
cp
43.1929 224.136 mo
43.5229 224.776 43.688 225.512 43.688 226.343 cv
43.688 226.997 43.5869 227.613 43.3843 228.191 cv
43.0015 229.278 42.3398 229.822 41.3984 229.822 cv
40.7549 229.822 40.2251 229.528 39.8101 228.94 cv
39.3657 228.313 39.1436 227.46 39.1436 226.383 cv
39.1436 225.535 39.292 224.806 39.5894 224.195 cv
39.9917 223.364 40.6094 222.949 41.4429 222.949 cv
42.1943 222.949 42.7778 223.345 43.1929 224.136 cv
cp
f
47.0688 222.996 mo
47.0703 223.004 47.0713 223.022 47.0713 223.052 cv
47.0713 228.984 li
47.0713 229.237 47.1387 229.398 47.2729 229.467 cv
47.4077 229.536 47.6592 229.577 48.0273 229.59 cv
48.0273 229.728 li
45.2573 229.728 li
45.2573 229.58 li
45.6528 229.561 45.9106 229.506 46.0317 229.417 cv
46.1528 229.329 46.2134 229.137 46.2134 228.841 cv
46.2134 224.279 li
46.2134 224.121 46.1934 224.001 46.1543 223.919 cv
46.1152 223.837 46.0303 223.796 45.8994 223.796 cv
45.8145 223.796 45.7041 223.82 45.5684 223.868 cv
45.4326 223.915 45.3062 223.965 45.1885 224.018 cv
45.1885 223.88 li
46.9878 222.958 li
47.0464 222.958 li
47.0596 222.975 47.0669 222.987 47.0688 222.996 cv
cp
f
77.0068 228.748 mo
77.1865 228.22 77.2764 227.455 77.2764 226.454 cv
77.2764 225.657 77.2227 225.02 77.1147 224.544 cv
76.9121 223.658 76.5327 223.215 75.9771 223.215 cv
75.4214 223.215 75.041 223.671 74.835 224.583 cv
74.7271 225.069 74.6733 225.709 74.6733 226.503 cv
74.6733 227.249 74.7285 227.844 74.8398 228.291 cv
75.0488 229.124 75.4414 229.541 76.0166 229.541 cv
76.4971 229.541 76.8271 229.276 77.0068 228.748 cv
cp
77.752 224.136 mo
78.082 224.776 78.2471 225.512 78.2471 226.343 cv
78.2471 226.997 78.146 227.613 77.9434 228.191 cv
77.5605 229.278 76.8989 229.822 75.9575 229.822 cv
75.314 229.822 74.7842 229.528 74.3691 228.94 cv
73.9248 228.313 73.7026 227.46 73.7026 226.383 cv
73.7026 225.535 73.8511 224.806 74.1484 224.195 cv
74.5508 223.364 75.1685 222.949 76.002 222.949 cv
76.7534 222.949 77.3369 223.345 77.752 224.136 cv
cp
f
79.8745 229.681 mo
79.7666 229.571 79.7129 229.439 79.7129 229.285 cv
79.7129 229.13 79.7676 228.999 79.877 228.891 cv
79.9863 228.782 80.1182 228.728 80.2715 228.728 cv
80.4253 228.728 80.5562 228.782 80.6641 228.891 cv
80.772 228.999 80.8257 229.13 80.8257 229.285 cv
80.8257 229.439 80.7725 229.571 80.6665 229.681 cv
80.5601 229.791 80.4287 229.846 80.2715 229.846 cv
80.1147 229.846 79.9824 229.791 79.8745 229.681 cv
cp
f
84.5371 228.748 mo
84.7168 228.22 84.8066 227.455 84.8066 226.454 cv
84.8066 225.657 84.7529 225.02 84.645 224.544 cv
84.4424 223.658 84.063 223.215 83.5073 223.215 cv
82.9517 223.215 82.5713 223.671 82.3652 224.583 cv
82.2573 225.069 82.2036 225.709 82.2036 226.503 cv
82.2036 227.249 82.2588 227.844 82.3701 228.291 cv
82.5791 229.124 82.9717 229.541 83.5469 229.541 cv
84.0273 229.541 84.3574 229.276 84.5371 228.748 cv
cp
85.2822 224.136 mo
85.6123 224.776 85.7773 225.512 85.7773 226.343 cv
85.7773 226.997 85.6763 227.613 85.4736 228.191 cv
85.0908 229.278 84.4292 229.822 83.4878 229.822 cv
82.8442 229.822 82.3145 229.528 81.8994 228.94 cv
81.4551 228.313 81.2329 227.46 81.2329 226.383 cv
81.2329 225.535 81.3813 224.806 81.6787 224.195 cv
82.0811 223.364 82.6987 222.949 83.5322 222.949 cv
84.2837 222.949 84.8672 223.345 85.2822 224.136 cv
cp
f
89.1577 222.996 mo
89.1592 223.004 89.1602 223.022 89.1602 223.052 cv
89.1602 228.984 li
89.1602 229.237 89.2275 229.398 89.3618 229.467 cv
89.4966 229.536 89.748 229.577 90.1162 229.59 cv
90.1162 229.728 li
87.3462 229.728 li
87.3462 229.58 li
87.7417 229.561 87.9995 229.506 88.1206 229.417 cv
88.2417 229.329 88.3022 229.137 88.3022 228.841 cv
88.3022 224.279 li
88.3022 224.121 88.2822 224.001 88.2432 223.919 cv
88.2041 223.837 88.1191 223.796 87.9883 223.796 cv
87.9033 223.796 87.793 223.82 87.6572 223.868 cv
87.5215 223.915 87.395 223.965 87.2773 224.018 cv
87.2773 223.88 li
89.0767 222.958 li
89.1353 222.958 li
89.1484 222.975 89.1558 222.987 89.1577 222.996 cv
cp
f
127.279 228.748 mo
127.458 228.22 127.548 227.455 127.548 226.454 cv
127.548 225.657 127.495 225.02 127.387 224.544 cv
127.184 223.658 126.805 223.215 126.249 223.215 cv
125.693 223.215 125.313 223.671 125.107 224.583 cv
124.999 225.069 124.945 225.709 124.945 226.503 cv
124.945 227.249 125 227.844 125.112 228.291 cv
125.321 229.124 125.713 229.541 126.289 229.541 cv
126.769 229.541 127.099 229.276 127.279 228.748 cv
cp
128.024 224.136 mo
128.354 224.776 128.519 225.512 128.519 226.343 cv
128.519 226.997 128.418 227.613 128.215 228.191 cv
127.833 229.278 127.171 229.822 126.229 229.822 cv
125.586 229.822 125.056 229.528 124.641 228.94 cv
124.197 228.313 123.975 227.46 123.975 226.383 cv
123.975 225.535 124.123 224.806 124.42 224.195 cv
124.823 223.364 125.44 222.949 126.274 222.949 cv
127.025 222.949 127.609 223.345 128.024 224.136 cv
cp
f
130.146 229.681 mo
130.039 229.571 129.985 229.439 129.985 229.285 cv
129.985 229.13 130.04 228.999 130.149 228.891 cv
130.258 228.782 130.39 228.728 130.543 228.728 cv
130.697 228.728 130.828 228.782 130.936 228.891 cv
131.044 228.999 131.098 229.13 131.098 229.285 cv
131.098 229.439 131.044 229.571 130.938 229.681 cv
130.832 229.791 130.701 229.846 130.543 229.846 cv
130.387 229.846 130.254 229.791 130.146 229.681 cv
cp
f
134.41 222.996 mo
134.411 223.004 134.412 223.022 134.412 223.052 cv
134.412 228.984 li
134.412 229.237 134.479 229.398 134.614 229.467 cv
134.749 229.536 135 229.577 135.368 229.59 cv
135.368 229.728 li
132.598 229.728 li
132.598 229.58 li
132.994 229.561 133.251 229.506 133.373 229.417 cv
133.494 229.329 133.554 229.137 133.554 228.841 cv
133.554 224.279 li
133.554 224.121 133.534 224.001 133.495 223.919 cv
133.456 223.837 133.371 223.796 133.24 223.796 cv
133.155 223.796 133.045 223.82 132.909 223.868 cv
132.773 223.915 132.647 223.965 132.529 224.018 cv
132.529 223.88 li
134.329 222.958 li
134.387 222.958 li
134.4 222.975 134.408 222.987 134.41 222.996 cv
cp
f
177.623 222.996 mo
177.625 223.004 177.625 223.022 177.625 223.052 cv
177.625 228.984 li
177.625 229.237 177.693 229.398 177.827 229.467 cv
177.962 229.536 178.213 229.577 178.582 229.59 cv
178.582 229.728 li
175.812 229.728 li
175.812 229.58 li
176.207 229.561 176.465 229.506 176.586 229.417 cv
176.707 229.329 176.768 229.137 176.768 228.841 cv
176.768 224.279 li
176.768 224.121 176.748 224.001 176.708 223.919 cv
176.669 223.837 176.584 223.796 176.454 223.796 cv
176.369 223.796 176.258 223.82 176.123 223.868 cv
175.987 223.915 175.86 223.965 175.743 224.018 cv
175.743 223.88 li
177.542 222.958 li
177.601 222.958 li
177.614 222.975 177.621 222.987 177.623 222.996 cv
cp
f
222.805 222.996 mo
222.806 223.004 222.807 223.022 222.807 223.052 cv
222.807 228.984 li
222.807 229.237 222.874 229.398 223.009 229.467 cv
223.144 229.536 223.395 229.577 223.763 229.59 cv
223.763 229.728 li
220.993 229.728 li
220.993 229.58 li
221.389 229.561 221.646 229.506 221.768 229.417 cv
221.889 229.329 221.949 229.137 221.949 228.841 cv
221.949 224.279 li
221.949 224.121 221.929 224.001 221.89 223.919 cv
221.851 223.837 221.766 223.796 221.635 223.796 cv
221.55 223.796 221.439 223.82 221.304 223.868 cv
221.168 223.915 221.042 223.965 220.924 224.018 cv
220.924 223.88 li
222.724 222.958 li
222.782 222.958 li
222.795 222.975 222.803 222.987 222.805 222.996 cv
cp
f
228.224 228.748 mo
228.403 228.22 228.493 227.455 228.493 226.454 cv
228.493 225.657 228.439 225.02 228.331 224.544 cv
228.129 223.658 227.75 223.215 227.194 223.215 cv
226.639 223.215 226.258 223.671 226.052 224.583 cv
225.944 225.069 225.89 225.709 225.89 226.503 cv
225.89 227.249 225.945 227.844 226.057 228.291 cv
226.266 229.124 226.658 229.541 227.233 229.541 cv
227.714 229.541 228.044 229.276 228.224 228.748 cv
cp
228.969 224.136 mo
229.299 224.776 229.464 225.512 229.464 226.343 cv
229.464 226.997 229.362 227.613 229.16 228.191 cv
228.777 229.278 228.116 229.822 227.175 229.822 cv
226.53 229.822 226.001 229.528 225.586 228.94 cv
225.142 228.313 224.919 227.46 224.919 226.383 cv
224.919 225.535 225.068 224.806 225.365 224.195 cv
225.768 223.364 226.385 222.949 227.219 222.949 cv
227.971 222.949 228.554 223.345 228.969 224.136 cv
cp
f
268.99 222.996 mo
268.991 223.004 268.992 223.022 268.992 223.052 cv
268.992 228.984 li
268.992 229.237 269.06 229.398 269.194 229.467 cv
269.329 229.536 269.58 229.577 269.948 229.59 cv
269.948 229.728 li
267.179 229.728 li
267.179 229.58 li
267.574 229.561 267.832 229.506 267.953 229.417 cv
268.074 229.329 268.135 229.137 268.135 228.841 cv
268.135 224.279 li
268.135 224.121 268.115 224.001 268.076 223.919 cv
268.036 223.837 267.951 223.796 267.821 223.796 cv
267.735 223.796 267.625 223.82 267.49 223.868 cv
267.354 223.915 267.228 223.965 267.11 224.018 cv
267.11 223.88 li
268.909 222.958 li
268.968 222.958 li
268.981 222.975 268.988 222.987 268.99 222.996 cv
cp
f
274.409 228.748 mo
274.589 228.22 274.679 227.455 274.679 226.454 cv
274.679 225.657 274.625 225.02 274.517 224.544 cv
274.314 223.658 273.936 223.215 273.38 223.215 cv
272.824 223.215 272.443 223.671 272.237 224.583 cv
272.13 225.069 272.075 225.709 272.075 226.503 cv
272.075 227.249 272.131 227.844 272.242 228.291 cv
272.451 229.124 272.844 229.541 273.419 229.541 cv
273.899 229.541 274.229 229.276 274.409 228.748 cv
cp
275.154 224.136 mo
275.484 224.776 275.649 225.512 275.649 226.343 cv
275.649 226.997 275.548 227.613 275.346 228.191 cv
274.963 229.278 274.302 229.822 273.36 229.822 cv
272.716 229.822 272.187 229.528 271.771 228.94 cv
271.327 228.313 271.104 227.46 271.104 226.383 cv
271.104 225.535 271.254 224.806 271.551 224.195 cv
271.953 223.364 272.57 222.949 273.404 222.949 cv
274.156 222.949 274.739 223.345 275.154 224.136 cv
cp
f
279.43 228.748 mo
279.609 228.22 279.699 227.455 279.699 226.454 cv
279.699 225.657 279.646 225.02 279.537 224.544 cv
279.335 223.658 278.956 223.215 278.4 223.215 cv
277.845 223.215 277.464 223.671 277.258 224.583 cv
277.15 225.069 277.096 225.709 277.096 226.503 cv
277.096 227.249 277.151 227.844 277.263 228.291 cv
277.472 229.124 277.864 229.541 278.439 229.541 cv
278.92 229.541 279.25 229.276 279.43 228.748 cv
cp
280.175 224.136 mo
280.505 224.776 280.67 225.512 280.67 226.343 cv
280.67 226.997 280.568 227.613 280.366 228.191 cv
279.983 229.278 279.322 229.822 278.381 229.822 cv
277.736 229.822 277.207 229.528 276.792 228.94 cv
276.348 228.313 276.125 227.46 276.125 226.383 cv
276.125 225.535 276.274 224.806 276.571 224.195 cv
276.974 223.364 277.591 222.949 278.425 222.949 cv
279.177 222.949 279.76 223.345 280.175 224.136 cv
cp
f
314.172 222.996 mo
314.173 223.004 314.174 223.022 314.174 223.052 cv
314.174 228.984 li
314.174 229.237 314.241 229.398 314.376 229.467 cv
314.511 229.536 314.762 229.577 315.13 229.59 cv
315.13 229.728 li
312.36 229.728 li
312.36 229.58 li
312.756 229.561 313.014 229.506 313.135 229.417 cv
313.256 229.329 313.316 229.137 313.316 228.841 cv
313.316 224.279 li
313.316 224.121 313.297 224.001 313.258 223.919 cv
313.218 223.837 313.133 223.796 313.003 223.796 cv
312.917 223.796 312.807 223.82 312.672 223.868 cv
312.536 223.915 312.409 223.965 312.292 224.018 cv
312.292 223.88 li
314.091 222.958 li
314.149 222.958 li
314.163 222.975 314.17 222.987 314.172 222.996 cv
cp
f
319.591 228.748 mo
319.771 228.22 319.86 227.455 319.86 226.454 cv
319.86 225.657 319.807 225.02 319.698 224.544 cv
319.496 223.658 319.117 223.215 318.562 223.215 cv
318.006 223.215 317.625 223.671 317.419 224.583 cv
317.312 225.069 317.257 225.709 317.257 226.503 cv
317.257 227.249 317.313 227.844 317.424 228.291 cv
317.633 229.124 318.025 229.541 318.601 229.541 cv
319.081 229.541 319.411 229.276 319.591 228.748 cv
cp
320.336 224.136 mo
320.666 224.776 320.831 225.512 320.831 226.343 cv
320.831 226.997 320.729 227.613 320.527 228.191 cv
320.145 229.278 319.483 229.822 318.542 229.822 cv
317.897 229.822 317.368 229.528 316.953 228.94 cv
316.509 228.313 316.286 227.46 316.286 226.383 cv
316.286 225.535 316.436 224.806 316.732 224.195 cv
317.135 223.364 317.752 222.949 318.586 222.949 cv
319.338 222.949 319.921 223.345 320.336 224.136 cv
cp
f
324.611 228.748 mo
324.791 228.22 324.881 227.455 324.881 226.454 cv
324.881 225.657 324.827 225.02 324.719 224.544 cv
324.517 223.658 324.138 223.215 323.582 223.215 cv
323.026 223.215 322.646 223.671 322.439 224.583 cv
322.332 225.069 322.277 225.709 322.277 226.503 cv
322.277 227.249 322.333 227.844 322.444 228.291 cv
322.653 229.124 323.046 229.541 323.621 229.541 cv
324.102 229.541 324.432 229.276 324.611 228.748 cv
cp
325.356 224.136 mo
325.687 224.776 325.852 225.512 325.852 226.343 cv
325.852 226.997 325.75 227.613 325.548 228.191 cv
325.165 229.278 324.504 229.822 323.563 229.822 cv
322.918 229.822 322.389 229.528 321.974 228.94 cv
321.529 228.313 321.307 227.46 321.307 226.383 cv
321.307 225.535 321.456 224.806 321.753 224.195 cv
322.155 223.364 322.772 222.949 323.606 222.949 cv
324.358 222.949 324.941 223.345 325.356 224.136 cv
cp
f
329.632 228.748 mo
329.812 228.22 329.901 227.455 329.901 226.454 cv
329.901 225.657 329.848 225.02 329.739 224.544 cv
329.537 223.658 329.158 223.215 328.603 223.215 cv
328.047 223.215 327.666 223.671 327.46 224.583 cv
327.353 225.069 327.298 225.709 327.298 226.503 cv
327.298 227.249 327.354 227.844 327.465 228.291 cv
327.674 229.124 328.066 229.541 328.642 229.541 cv
329.122 229.541 329.452 229.276 329.632 228.748 cv
cp
330.377 224.136 mo
330.707 224.776 330.872 225.512 330.872 226.343 cv
330.872 226.997 330.771 227.613 330.568 228.191 cv
330.186 229.278 329.524 229.822 328.583 229.822 cv
327.938 229.822 327.409 229.528 326.994 228.94 cv
326.55 228.313 326.327 227.46 326.327 226.383 cv
326.327 225.535 326.477 224.806 326.773 224.195 cv
327.176 223.364 327.793 222.949 328.627 222.949 cv
329.379 222.949 329.962 223.345 330.377 224.136 cv
cp
f
363.871 222.996 mo
363.872 223.004 363.873 223.022 363.873 223.052 cv
363.873 228.984 li
363.873 229.237 363.94 229.398 364.075 229.467 cv
364.21 229.536 364.461 229.577 364.829 229.59 cv
364.829 229.728 li
362.06 229.728 li
362.06 229.58 li
362.455 229.561 362.713 229.506 362.834 229.417 cv
362.955 229.329 363.016 229.137 363.016 228.841 cv
363.016 224.279 li
363.016 224.121 362.996 224.001 362.957 223.919 cv
362.917 223.837 362.832 223.796 362.702 223.796 cv
362.616 223.796 362.506 223.82 362.371 223.868 cv
362.235 223.915 362.108 223.965 361.991 224.018 cv
361.991 223.88 li
363.79 222.958 li
363.849 222.958 li
363.862 222.975 363.869 222.987 363.871 222.996 cv
cp
f
369.291 228.748 mo
369.471 228.22 369.561 227.455 369.561 226.454 cv
369.561 225.657 369.507 225.02 369.398 224.544 cv
369.196 223.658 368.817 223.215 368.262 223.215 cv
367.706 223.215 367.325 223.671 367.119 224.583 cv
367.012 225.069 366.957 225.709 366.957 226.503 cv
366.957 227.249 367.013 227.844 367.124 228.291 cv
367.333 229.124 367.726 229.541 368.301 229.541 cv
368.781 229.541 369.111 229.276 369.291 228.748 cv
cp
370.036 224.136 mo
370.366 224.776 370.531 225.512 370.531 226.343 cv
370.531 226.997 370.43 227.613 370.228 228.191 cv
369.845 229.278 369.184 229.822 368.242 229.822 cv
367.598 229.822 367.068 229.528 366.653 228.94 cv
366.209 228.313 365.986 227.46 365.986 226.383 cv
365.986 225.535 366.136 224.806 366.433 224.195 cv
366.835 223.364 367.452 222.949 368.286 222.949 cv
369.038 222.949 369.621 223.345 370.036 224.136 cv
cp
f
375.118 221.251 mo
372.979 224.289 li
375.118 224.289 li
375.118 221.251 li
cp
375.406 220.348 mo
375.819 220.348 li
375.819 224.289 li
376.73 224.289 li
376.73 224.872 li
375.819 224.872 li
375.819 226.365 li
375.127 226.365 li
375.127 224.872 li
372.617 224.872 li
372.617 224.289 li
375.406 220.348 li
cp
f
413.05 222.996 mo
413.051 223.004 413.052 223.022 413.052 223.052 cv
413.052 228.984 li
413.052 229.237 413.119 229.398 413.254 229.467 cv
413.389 229.536 413.64 229.577 414.008 229.59 cv
414.008 229.728 li
411.238 229.728 li
411.238 229.58 li
411.634 229.561 411.892 229.506 412.013 229.417 cv
412.134 229.329 412.194 229.137 412.194 228.841 cv
412.194 224.279 li
412.194 224.121 412.175 224.001 412.136 223.919 cv
412.096 223.837 412.011 223.796 411.881 223.796 cv
411.795 223.796 411.685 223.82 411.55 223.868 cv
411.414 223.915 411.287 223.965 411.17 224.018 cv
411.17 223.88 li
412.969 222.958 li
413.027 222.958 li
413.041 222.975 413.048 222.987 413.05 222.996 cv
cp
f
418.47 228.748 mo
418.649 228.22 418.739 227.455 418.739 226.454 cv
418.739 225.657 418.686 225.02 418.577 224.544 cv
418.375 223.658 417.996 223.215 417.44 223.215 cv
416.885 223.215 416.504 223.671 416.298 224.583 cv
416.19 225.069 416.136 225.709 416.136 226.503 cv
416.136 227.249 416.191 227.844 416.303 228.291 cv
416.512 229.124 416.904 229.541 417.479 229.541 cv
417.96 229.541 418.29 229.276 418.47 228.748 cv
cp
419.215 224.136 mo
419.545 224.776 419.71 225.512 419.71 226.343 cv
419.71 226.997 419.608 227.613 419.406 228.191 cv
419.023 229.278 418.362 229.822 417.421 229.822 cv
416.776 229.822 416.247 229.528 415.832 228.94 cv
415.388 228.313 415.165 227.46 415.165 226.383 cv
415.165 225.535 415.314 224.806 415.611 224.195 cv
416.014 223.364 416.631 222.949 417.465 222.949 cv
418.217 222.949 418.8 223.345 419.215 224.136 cv
cp
f
422.573 225.846 mo
422.843 226.034 423.05 226.128 423.196 226.128 cv
423.53 226.128 423.823 225.98 424.073 225.684 cv
424.323 225.388 424.448 225.023 424.448 224.591 cv
424.448 223.835 424.048 223.291 423.245 222.958 cv
422.8 222.773 422.384 222.682 422.001 222.682 cv
421.937 222.682 421.897 222.68 421.88 222.675 cv
421.864 222.671 421.845 222.655 421.821 222.629 cv
421.827 222.606 421.833 222.586 421.837 222.57 cv
421.841 222.554 421.847 222.539 421.853 222.524 cv
422.802 220.431 li
424.671 220.431 li
424.765 220.431 424.835 220.415 424.886 220.382 cv
424.937 220.351 425.003 220.291 425.085 220.203 cv
425.155 220.264 li
424.819 221.075 li
424.808 221.101 424.776 221.118 424.724 221.125 cv
424.671 221.132 424.614 221.136 424.554 221.136 cv
422.864 221.136 li
422.493 221.902 li
422.97 221.984 423.319 222.062 423.54 222.134 cv
423.903 222.257 424.208 222.438 424.452 222.677 cv
424.661 222.885 424.819 223.118 424.929 223.376 cv
425.036 223.634 425.089 223.908 425.089 224.197 cv
425.089 224.842 424.86 225.381 424.401 225.813 cv
423.944 226.245 423.364 226.461 422.663 226.461 cv
422.378 226.461 422.149 226.433 421.974 226.378 cv
421.683 226.288 421.538 226.125 421.538 225.892 cv
421.538 225.804 421.569 225.728 421.632 225.662 cv
421.694 225.596 421.79 225.563 421.921 225.563 cv
422.087 225.563 422.306 225.658 422.573 225.846 cv
cp
f
459.172 222.996 mo
459.173 223.004 459.174 223.022 459.174 223.052 cv
459.174 228.984 li
459.174 229.237 459.241 229.398 459.376 229.467 cv
459.511 229.536 459.762 229.577 460.13 229.59 cv
460.13 229.728 li
457.36 229.728 li
457.36 229.58 li
457.756 229.561 458.014 229.506 458.135 229.417 cv
458.256 229.329 458.316 229.137 458.316 228.841 cv
458.316 224.279 li
458.316 224.121 458.297 224.001 458.258 223.919 cv
458.218 223.837 458.133 223.796 458.003 223.796 cv
457.917 223.796 457.807 223.82 457.672 223.868 cv
457.536 223.915 457.409 223.965 457.292 224.018 cv
457.292 223.88 li
459.091 222.958 li
459.149 222.958 li
459.163 222.975 459.17 222.987 459.172 222.996 cv
cp
f
464.592 228.748 mo
464.771 228.22 464.861 227.455 464.861 226.454 cv
464.861 225.657 464.808 225.02 464.699 224.544 cv
464.497 223.658 464.118 223.215 463.563 223.215 cv
463.007 223.215 462.626 223.671 462.42 224.583 cv
462.313 225.069 462.258 225.709 462.258 226.503 cv
462.258 227.249 462.313 227.844 462.425 228.291 cv
462.634 229.124 463.026 229.541 463.602 229.541 cv
464.082 229.541 464.412 229.276 464.592 228.748 cv
cp
465.337 224.136 mo
465.667 224.776 465.832 225.512 465.832 226.343 cv
465.832 226.997 465.73 227.613 465.528 228.191 cv
465.146 229.278 464.484 229.822 463.543 229.822 cv
462.898 229.822 462.369 229.528 461.954 228.94 cv
461.51 228.313 461.287 227.46 461.287 226.383 cv
461.287 225.535 461.437 224.806 461.733 224.195 cv
462.136 223.364 462.753 222.949 463.587 222.949 cv
464.339 222.949 464.922 223.345 465.337 224.136 cv
cp
f
470.931 223.676 mo
470.728 223.174 470.382 222.922 469.894 222.922 cv
469.444 222.922 469.144 223.057 468.997 223.326 cv
468.909 223.483 468.866 223.746 468.866 224.114 cv
468.866 224.59 468.966 225.055 469.169 225.511 cv
469.37 225.966 469.688 226.194 470.124 226.194 cv
470.47 226.194 470.722 226.046 470.878 225.75 cv
471.036 225.453 471.114 225.106 471.114 224.709 cv
471.114 224.321 471.054 223.977 470.931 223.676 cv
cp
471.399 225.817 mo
471.058 226.247 470.614 226.461 470.067 226.461 cv
469.558 226.461 469.091 226.22 468.671 225.738 cv
468.251 225.257 468.042 224.616 468.042 223.816 cv
468.042 222.785 468.448 221.901 469.263 221.162 cv
469.989 220.543 470.806 220.233 471.712 220.233 cv
471.733 220.378 li
471.37 220.445 471.058 220.537 470.794 220.652 cv
470.53 220.767 470.296 220.929 470.091 221.136 cv
469.878 221.346 469.679 221.613 469.493 221.937 cv
469.308 222.261 469.179 222.583 469.11 222.901 cv
469.29 222.79 469.444 222.708 469.575 222.655 cv
469.808 222.562 470.042 222.515 470.278 222.515 cv
470.739 222.515 471.128 222.676 471.44 222.997 cv
471.755 223.318 471.911 223.776 471.911 224.372 cv
471.911 224.906 471.741 225.388 471.399 225.817 cv
cp
f
87.6841 277.059 mo
90.0371 277.059 li
90.0371 277.327 li
89.0459 277.327 li
88.8281 277.327 88.6812 277.396 88.6045 277.535 cv
88.561 277.608 88.5396 277.708 88.5396 277.836 cv
88.5396 285.379 li
88.5396 285.545 88.563 285.668 88.6104 285.748 cv
88.6899 285.889 88.8481 285.959 89.084 285.959 cv
90.0371 285.959 li
90.0371 286.244 li
87.6841 286.244 li
87.6841 277.059 li
cp
f
90.5439 284.268 mo
91.0049 284.22 91.3008 284.115 91.4316 283.953 cv
91.5625 283.791 91.6279 283.414 91.6279 282.823 cv
91.6279 278.273 li
91.6279 277.868 91.564 277.604 91.437 277.482 cv
91.3101 277.36 91.021 277.289 90.5708 277.267 cv
90.5708 277.059 li
92.7705 277.059 li
95.3325 282.643 li
97.832 277.059 li
100.049 277.059 li
100.049 277.267 li
99.6353 277.296 99.3682 277.372 99.2485 277.494 cv
99.1284 277.616 99.0688 277.875 99.0688 278.273 cv
99.0688 283.256 li
99.0688 283.664 99.1284 283.926 99.2485 284.041 cv
99.3682 284.155 99.6353 284.231 100.049 284.268 cv
100.049 284.476 li
96.9277 284.476 li
96.9277 284.268 li
97.3779 284.231 97.6587 284.15 97.7695 284.024 cv
97.8804 283.898 97.9355 283.599 97.9355 283.124 cv
97.9355 278.092 li
95.0786 284.476 li
94.9263 284.476 li
92.1182 278.355 li
92.1182 282.823 li
92.1182 283.437 92.207 283.835 92.3848 284.021 cv
92.501 284.142 92.7607 284.224 93.1641 284.268 cv
93.1641 284.476 li
90.5439 284.476 li
90.5439 284.268 li
cp
f
101.629 280.294 mo
101.513 280.49 101.429 280.738 101.378 281.038 cv
103.677 281.038 li
103.637 280.673 103.568 280.401 103.47 280.223 cv
103.292 279.901 102.994 279.741 102.577 279.741 cv
102.163 279.741 101.847 279.925 101.629 280.294 cv
cp
104.238 279.875 mo
104.623 280.231 104.815 280.735 104.815 281.388 cv
101.356 281.388 li
101.393 282.233 101.583 282.849 101.929 283.234 cv
102.273 283.62 102.682 283.813 103.154 283.813 cv
103.536 283.813 103.857 283.713 104.118 283.513 cv
104.38 283.313 104.621 283.028 104.843 282.661 cv
105.033 282.727 li
104.884 283.19 104.606 283.62 104.197 284.015 cv
103.789 284.409 103.289 284.607 102.697 284.607 cv
102.014 284.607 101.486 284.348 101.114 283.83 cv
100.742 283.312 100.556 282.715 100.556 282.04 cv
100.556 281.306 100.772 280.673 101.204 280.141 cv
101.636 279.608 102.199 279.341 102.893 279.341 cv
103.405 279.341 103.853 279.519 104.238 279.875 cv
cp
f
108.438 277.059 mo
108.438 277.25 li
108.159 277.254 107.969 277.272 107.867 277.306 cv
107.689 277.365 107.601 277.485 107.601 277.667 cv
107.601 277.76 107.632 277.89 107.696 278.057 cv
107.759 278.223 107.878 278.5 108.051 278.887 cv
109.797 282.789 li
111.382 278.565 li
111.452 278.378 111.505 278.22 111.542 278.09 cv
111.578 277.96 111.596 277.854 111.596 277.773 cv
111.596 277.554 111.503 277.406 111.319 277.328 cv
111.21 277.284 111.03 277.257 110.78 277.25 cv
110.78 277.059 li
113.063 277.059 li
113.063 277.25 li
112.826 277.283 112.652 277.347 112.54 277.442 cv
112.369 277.584 112.2 277.871 112.033 278.301 cv
109.563 284.607 li
109.395 284.607 li
106.637 278.445 li
106.405 277.923 106.219 277.597 106.079 277.469 cv
105.939 277.341 105.735 277.269 105.466 277.25 cv
105.466 277.059 li
108.438 277.059 li
cp
f
115.791 276.9 mo
116.339 276.9 li
113.924 284.662 li
113.37 284.662 li
115.791 276.9 li
cp
f
121.63 279.666 mo
121.959 279.9 122.124 280.158 122.124 280.438 cv
122.124 280.558 122.082 280.669 121.998 280.772 cv
121.915 280.876 121.786 280.929 121.611 280.929 cv
121.484 280.929 121.373 280.885 121.276 280.797 cv
121.18 280.709 121.11 280.582 121.067 280.414 cv
121.001 280.151 li
120.954 279.958 120.873 279.821 120.756 279.741 cv
120.637 279.664 120.479 279.626 120.282 279.626 cv
119.869 279.626 119.519 279.808 119.234 280.171 cv
118.949 280.534 118.806 281.018 118.806 281.621 cv
118.806 282.173 118.963 282.668 119.277 283.106 cv
119.591 283.545 120.016 283.764 120.549 283.764 cv
120.927 283.764 121.263 283.64 121.557 283.391 cv
121.724 283.248 121.913 283.021 122.124 282.711 cv
122.276 282.804 li
122.069 283.242 121.851 283.59 121.623 283.846 cv
121.183 284.335 120.675 284.58 120.097 284.58 cv
119.531 284.58 119.03 284.355 118.594 283.906 cv
118.158 283.457 117.94 282.848 117.94 282.078 cv
117.94 281.322 118.178 280.673 118.654 280.129 cv
119.129 279.586 119.73 279.314 120.457 279.314 cv
120.911 279.314 121.302 279.431 121.63 279.666 cv
cp
f
283.997 276.9 mo
284.546 276.9 li
282.13 284.662 li
281.575 284.662 li
283.997 276.9 li
cp
f
276.646 277.059 mo
276.646 277.25 li
276.366 277.254 276.177 277.272 276.075 277.306 cv
275.897 277.365 275.81 277.485 275.81 277.667 cv
275.81 277.76 275.841 277.89 275.903 278.057 cv
275.968 278.223 276.085 278.5 276.259 278.887 cv
278.005 282.789 li
279.591 278.565 li
279.661 278.378 279.714 278.22 279.749 278.09 cv
279.786 277.96 279.804 277.854 279.804 277.773 cv
279.804 277.554 279.712 277.406 279.526 277.328 cv
279.417 277.284 279.239 277.257 278.989 277.25 cv
278.989 277.059 li
281.271 277.059 li
281.271 277.25 li
281.034 277.283 280.86 277.347 280.747 277.442 cv
280.577 277.584 280.407 277.871 280.241 278.301 cv
277.771 284.607 li
277.603 284.607 li
274.845 278.445 li
274.612 277.923 274.427 277.597 274.286 277.469 cv
274.147 277.341 273.942 277.269 273.675 277.25 cv
273.675 277.059 li
276.646 277.059 li
cp
f
269.21 280.294 mo
269.095 280.49 269.011 280.738 268.96 281.038 cv
271.259 281.038 li
271.218 280.673 271.149 280.401 271.052 280.223 cv
270.874 279.901 270.575 279.741 270.159 279.741 cv
269.745 279.741 269.429 279.925 269.21 280.294 cv
cp
271.819 279.875 mo
272.204 280.231 272.397 280.735 272.397 281.388 cv
268.938 281.388 li
268.974 282.233 269.165 282.849 269.511 283.234 cv
269.854 283.62 270.263 283.813 270.735 283.813 cv
271.116 283.813 271.438 283.713 271.7 283.513 cv
271.962 283.313 272.202 283.028 272.425 282.661 cv
272.614 282.727 li
272.466 283.19 272.187 283.62 271.778 284.015 cv
271.37 284.409 270.87 284.607 270.278 284.607 cv
269.595 284.607 269.067 284.348 268.696 283.83 cv
268.323 283.312 268.138 282.715 268.138 282.04 cv
268.138 281.306 268.353 280.673 268.786 280.141 cv
269.218 279.608 269.78 279.341 270.474 279.341 cv
270.985 279.341 271.435 279.519 271.819 279.875 cv
cp
f
264.644 277.108 mo
265.062 277.228 265.302 277.289 265.364 277.289 cv
265.522 277.289 265.636 277.257 265.704 277.195 cv
265.771 277.133 265.829 277.044 265.876 276.927 cv
266.12 276.927 li
266.208 279.287 li
265.952 279.287 li
265.724 278.743 265.487 278.338 265.243 278.071 cv
264.804 277.604 264.231 277.371 263.528 277.371 cv
262.812 277.371 262.183 277.644 261.64 278.189 cv
261.097 278.734 260.825 279.633 260.825 280.885 cv
260.825 281.917 261.097 282.724 261.638 283.304 cv
262.179 283.885 262.847 284.175 263.642 284.175 cv
263.776 284.175 263.935 284.162 264.116 284.137 cv
264.298 284.11 264.47 284.07 264.634 284.016 cv
264.899 283.929 265.063 283.854 265.13 283.789 cv
265.194 283.726 265.228 283.632 265.228 283.508 cv
265.228 281.722 li
265.228 281.289 265.167 281.02 265.044 280.913 cv
264.923 280.807 264.657 280.74 264.247 280.715 cv
264.247 280.507 li
267.091 280.507 li
267.091 280.715 li
266.813 280.733 266.63 280.778 266.54 280.852 cv
266.388 280.969 266.312 281.209 266.312 281.574 cv
266.312 283.78 li
266.312 283.912 265.991 284.087 265.351 284.306 cv
264.708 284.524 264.093 284.635 263.501 284.635 cv
262.411 284.635 261.493 284.315 260.745 283.677 cv
259.919 282.972 259.507 282.026 259.507 280.841 cv
259.507 279.797 259.837 278.903 260.493 278.159 cv
261.216 277.338 262.175 276.927 263.37 276.927 cv
263.802 276.927 264.228 276.987 264.644 277.108 cv
cp
f
256.507 277.059 mo
258.86 277.059 li
258.86 277.327 li
257.868 277.327 li
257.649 277.327 257.503 277.396 257.427 277.535 cv
257.384 277.608 257.362 277.708 257.362 277.836 cv
257.362 285.379 li
257.362 285.545 257.386 285.668 257.433 285.748 cv
257.513 285.889 257.671 285.959 257.907 285.959 cv
258.86 285.959 li
258.86 286.244 li
256.507 286.244 li
256.507 277.059 li
cp
f
125.361 286.244 mo
123.008 286.244 li
123.008 285.97 li
124.004 285.97 li
124.219 285.97 124.366 285.902 124.446 285.768 cv
124.486 285.694 124.505 285.594 124.505 285.467 cv
124.505 277.923 li
124.505 277.745 124.47 277.603 124.399 277.499 cv
124.329 277.395 124.184 277.343 123.966 277.343 cv
123.008 277.343 li
123.008 277.059 li
125.361 277.059 li
125.361 286.244 li
cp
f
288.601 279.666 mo
288.929 279.9 289.093 280.158 289.093 280.438 cv
289.093 280.558 289.052 280.669 288.968 280.772 cv
288.884 280.876 288.755 280.929 288.581 280.929 cv
288.454 280.929 288.343 280.885 288.247 280.797 cv
288.149 280.709 288.081 280.582 288.036 280.414 cv
287.972 280.151 li
287.925 279.958 287.843 279.821 287.726 279.741 cv
287.606 279.664 287.448 279.626 287.253 279.626 cv
286.839 279.626 286.489 279.808 286.204 280.171 cv
285.919 280.534 285.776 281.018 285.776 281.621 cv
285.776 282.173 285.933 282.668 286.247 283.106 cv
286.562 283.545 286.985 283.764 287.519 283.764 cv
287.897 283.764 288.233 283.64 288.526 283.391 cv
288.694 283.248 288.882 283.021 289.093 282.711 cv
289.245 282.804 li
289.038 283.242 288.821 283.59 288.593 283.846 cv
288.153 284.335 287.644 284.58 287.067 284.58 cv
286.501 284.58 285.999 284.355 285.563 283.906 cv
285.128 283.457 284.909 282.848 284.909 282.078 cv
284.909 281.322 285.147 280.673 285.624 280.129 cv
286.099 279.586 286.7 279.314 287.427 279.314 cv
287.88 279.314 288.272 279.431 288.601 279.666 cv
cp
f
292.331 286.244 mo
289.978 286.244 li
289.978 285.97 li
290.974 285.97 li
291.188 285.97 291.335 285.902 291.415 285.768 cv
291.456 285.694 291.476 285.594 291.476 285.467 cv
291.476 277.923 li
291.476 277.745 291.44 277.603 291.368 277.499 cv
291.298 277.395 291.153 277.343 290.937 277.343 cv
289.978 277.343 li
289.978 277.059 li
292.331 277.059 li
292.331 286.244 li
cp
f
173.66 259.993 mo
173.661 260.001 173.662 260.02 173.662 260.049 cv
173.662 265.981 li
173.662 266.234 173.729 266.395 173.864 266.464 cv
173.999 266.533 174.25 266.574 174.618 266.587 cv
174.618 266.725 li
171.848 266.725 li
171.848 266.577 li
172.244 266.558 172.501 266.503 172.623 266.415 cv
172.744 266.326 172.804 266.134 172.804 265.838 cv
172.804 261.276 li
172.804 261.118 172.784 260.999 172.745 260.917 cv
172.706 260.834 172.621 260.793 172.49 260.793 cv
172.405 260.793 172.295 260.817 172.159 260.865 cv
172.023 260.912 171.897 260.962 171.779 261.015 cv
171.779 260.877 li
173.579 259.956 li
173.637 259.956 li
173.65 259.972 173.658 259.984 173.66 259.993 cv
cp
f
179.079 265.745 mo
179.259 265.217 179.349 264.452 179.349 263.451 cv
179.349 262.654 179.295 262.017 179.187 261.541 cv
178.984 260.655 178.605 260.212 178.049 260.212 cv
177.494 260.212 177.113 260.668 176.907 261.581 cv
176.799 262.066 176.746 262.706 176.746 263.5 cv
176.746 264.246 176.801 264.841 176.912 265.288 cv
177.121 266.121 177.514 266.538 178.089 266.538 cv
178.569 266.538 178.899 266.273 179.079 265.745 cv
cp
179.824 261.133 mo
180.154 261.773 180.319 262.509 180.319 263.34 cv
180.319 263.994 180.218 264.61 180.016 265.188 cv
179.633 266.275 178.971 266.819 178.03 266.819 cv
177.386 266.819 176.856 266.525 176.441 265.937 cv
175.997 265.31 175.775 264.457 175.775 263.38 cv
175.775 262.532 175.923 261.803 176.221 261.192 cv
176.623 260.361 177.241 259.946 178.074 259.946 cv
178.826 259.946 179.409 260.342 179.824 261.133 cv
cp
f
184.1 265.745 mo
184.279 265.217 184.369 264.452 184.369 263.451 cv
184.369 262.654 184.315 262.017 184.208 261.541 cv
184.005 260.655 183.625 260.212 183.07 260.212 cv
182.514 260.212 182.134 260.668 181.928 261.581 cv
181.82 262.066 181.766 262.706 181.766 263.5 cv
181.766 264.246 181.821 264.841 181.933 265.288 cv
182.142 266.121 182.534 266.538 183.109 266.538 cv
183.59 266.538 183.92 266.273 184.1 265.745 cv
cp
184.845 261.133 mo
185.175 261.773 185.34 262.509 185.34 263.34 cv
185.34 263.994 185.239 264.61 185.036 265.188 cv
184.653 266.275 183.992 266.819 183.05 266.819 cv
182.407 266.819 181.877 266.525 181.462 265.937 cv
181.018 265.31 180.795 264.457 180.795 263.38 cv
180.795 262.532 180.944 261.803 181.241 261.192 cv
181.644 260.361 182.261 259.946 183.095 259.946 cv
183.846 259.946 184.43 260.342 184.845 261.133 cv
cp
f
128.853 259.993 mo
128.854 260.001 128.855 260.02 128.855 260.049 cv
128.855 265.981 li
128.855 266.234 128.922 266.395 129.057 266.464 cv
129.191 266.533 129.443 266.574 129.811 266.587 cv
129.811 266.725 li
127.041 266.725 li
127.041 266.577 li
127.437 266.558 127.694 266.503 127.815 266.415 cv
127.937 266.326 127.997 266.134 127.997 265.838 cv
127.997 261.276 li
127.997 261.118 127.977 260.999 127.938 260.917 cv
127.899 260.834 127.814 260.793 127.683 260.793 cv
127.598 260.793 127.488 260.817 127.352 260.865 cv
127.216 260.912 127.09 260.962 126.972 261.015 cv
126.972 260.877 li
128.771 259.956 li
128.83 259.956 li
128.843 259.972 128.851 259.984 128.853 259.993 cv
cp
f
134.272 265.745 mo
134.452 265.217 134.542 264.452 134.542 263.451 cv
134.542 262.654 134.488 262.017 134.38 261.541 cv
134.177 260.655 133.798 260.212 133.242 260.212 cv
132.687 260.212 132.306 260.668 132.1 261.581 cv
131.992 262.066 131.938 262.706 131.938 263.5 cv
131.938 264.246 131.994 264.841 132.105 265.288 cv
132.314 266.121 132.707 266.538 133.282 266.538 cv
133.762 266.538 134.092 266.273 134.272 265.745 cv
cp
135.017 261.133 mo
135.347 261.773 135.512 262.509 135.512 263.34 cv
135.512 263.994 135.411 264.61 135.208 265.188 cv
134.826 266.275 134.164 266.819 133.223 266.819 cv
132.579 266.819 132.049 266.525 131.634 265.937 cv
131.19 265.31 130.968 264.457 130.968 263.38 cv
130.968 262.532 131.116 261.803 131.414 261.192 cv
131.816 260.361 132.434 259.946 133.267 259.946 cv
134.019 259.946 134.602 260.342 135.017 261.133 cv
cp
f
83.3018 259.993 mo
83.3032 260.001 83.3042 260.02 83.3042 260.049 cv
83.3042 265.981 li
83.3042 266.234 83.3716 266.395 83.5059 266.464 cv
83.6406 266.533 83.8921 266.574 84.2603 266.587 cv
84.2603 266.725 li
81.4902 266.725 li
81.4902 266.577 li
81.8857 266.558 82.1436 266.503 82.2646 266.415 cv
82.3857 266.326 82.4463 266.134 82.4463 265.838 cv
82.4463 261.276 li
82.4463 261.118 82.4263 260.999 82.3872 260.917 cv
82.3481 260.834 82.2632 260.793 82.1323 260.793 cv
82.0474 260.793 81.937 260.817 81.8013 260.865 cv
81.6655 260.912 81.5391 260.962 81.4214 261.015 cv
81.4214 260.877 li
83.2207 259.956 li
83.2793 259.956 li
83.2925 259.972 83.2998 259.984 83.3018 259.993 cv
cp
f
30.9858 265.745 mo
31.1655 265.217 31.2554 264.452 31.2554 263.451 cv
31.2554 262.654 31.2017 262.017 31.0938 261.541 cv
30.8911 260.655 30.5117 260.212 29.9561 260.212 cv
29.4004 260.212 29.02 260.668 28.814 261.581 cv
28.7061 262.066 28.6523 262.706 28.6523 263.5 cv
28.6523 264.246 28.7075 264.841 28.8188 265.288 cv
29.0278 266.121 29.4204 266.538 29.9956 266.538 cv
30.4761 266.538 30.8062 266.273 30.9858 265.745 cv
cp
31.731 261.133 mo
32.061 261.773 32.2261 262.509 32.2261 263.34 cv
32.2261 263.994 32.125 264.61 31.9224 265.188 cv
31.5396 266.275 30.8779 266.819 29.9365 266.819 cv
29.293 266.819 28.7632 266.525 28.3481 265.937 cv
27.9038 265.31 27.6816 264.457 27.6816 263.38 cv
27.6816 262.532 27.8301 261.803 28.1274 261.192 cv
28.5298 260.361 29.1475 259.946 29.981 259.946 cv
30.7324 259.946 31.3159 260.342 31.731 261.133 cv
cp
f
33.8535 266.678 mo
33.7456 266.568 33.6919 266.436 33.6919 266.282 cv
33.6919 266.127 33.7466 265.996 33.856 265.888 cv
33.9653 265.779 34.0972 265.725 34.2505 265.725 cv
34.4043 265.725 34.5352 265.779 34.6431 265.888 cv
34.751 265.996 34.8047 266.127 34.8047 266.282 cv
34.8047 266.436 34.7515 266.568 34.6455 266.678 cv
34.5391 266.788 34.4077 266.843 34.2505 266.843 cv
34.0938 266.843 33.9614 266.788 33.8535 266.678 cv
cp
f
38.1167 259.993 mo
38.1182 260.001 38.1191 260.02 38.1191 260.049 cv
38.1191 265.981 li
38.1191 266.234 38.1865 266.395 38.3208 266.464 cv
38.4556 266.533 38.707 266.574 39.0752 266.587 cv
39.0752 266.725 li
36.3052 266.725 li
36.3052 266.577 li
36.7007 266.558 36.9585 266.503 37.0796 266.415 cv
37.2007 266.326 37.2612 266.134 37.2612 265.838 cv
37.2612 261.276 li
37.2612 261.118 37.2412 260.999 37.2021 260.917 cv
37.1631 260.834 37.0781 260.793 36.9473 260.793 cv
36.8623 260.793 36.752 260.817 36.6162 260.865 cv
36.4805 260.912 36.354 260.962 36.2363 261.015 cv
36.2363 260.877 li
38.0356 259.956 li
38.0942 259.956 li
38.1074 259.972 38.1147 259.984 38.1167 259.993 cv
cp
f
316.456 259.993 mo
316.456 260.001 316.458 260.02 316.458 260.049 cv
316.458 265.981 li
316.458 266.234 316.524 266.395 316.659 266.464 cv
316.794 266.533 317.046 266.574 317.413 266.587 cv
317.413 266.725 li
314.644 266.725 li
314.644 266.577 li
315.04 266.558 315.298 266.503 315.419 266.415 cv
315.54 266.326 315.601 266.134 315.601 265.838 cv
315.601 261.276 li
315.601 261.118 315.581 260.999 315.542 260.917 cv
315.501 260.834 315.417 260.793 315.286 260.793 cv
315.2 260.793 315.091 260.817 314.956 260.865 cv
314.819 260.912 314.692 260.962 314.575 261.015 cv
314.575 260.877 li
316.374 259.956 li
316.433 259.956 li
316.446 259.972 316.454 259.984 316.456 259.993 cv
cp
f
321.876 265.745 mo
322.056 265.217 322.146 264.452 322.146 263.451 cv
322.146 262.654 322.091 262.017 321.983 261.541 cv
321.78 260.655 321.401 260.212 320.847 260.212 cv
320.29 260.212 319.909 260.668 319.704 261.581 cv
319.597 262.066 319.542 262.706 319.542 263.5 cv
319.542 264.246 319.597 264.841 319.708 265.288 cv
319.917 266.121 320.31 266.538 320.886 266.538 cv
321.366 266.538 321.696 266.273 321.876 265.745 cv
cp
322.62 261.133 mo
322.95 261.773 323.116 262.509 323.116 263.34 cv
323.116 263.994 323.015 264.61 322.812 265.188 cv
322.429 266.275 321.769 266.819 320.827 266.819 cv
320.183 266.819 319.653 266.525 319.237 265.937 cv
318.794 265.31 318.571 264.457 318.571 263.38 cv
318.571 262.532 318.72 261.803 319.017 261.192 cv
319.419 260.361 320.036 259.946 320.87 259.946 cv
321.622 259.946 322.206 260.342 322.62 261.133 cv
cp
f
326.896 265.745 mo
327.075 265.217 327.165 264.452 327.165 263.451 cv
327.165 262.654 327.11 262.017 327.003 261.541 cv
326.8 260.655 326.421 260.212 325.866 260.212 cv
325.31 260.212 324.929 260.668 324.724 261.581 cv
324.616 262.066 324.562 262.706 324.562 263.5 cv
324.562 264.246 324.616 264.841 324.728 265.288 cv
324.937 266.121 325.329 266.538 325.905 266.538 cv
326.386 266.538 326.716 266.273 326.896 265.745 cv
cp
327.64 261.133 mo
327.97 261.773 328.136 262.509 328.136 263.34 cv
328.136 263.994 328.034 264.61 327.831 265.188 cv
327.448 266.275 326.788 266.819 325.847 266.819 cv
325.202 266.819 324.673 266.525 324.257 265.937 cv
323.813 265.31 323.591 264.457 323.591 263.38 cv
323.591 262.532 323.739 261.803 324.036 261.192 cv
324.438 260.361 325.056 259.946 325.89 259.946 cv
326.642 259.946 327.226 260.342 327.64 261.133 cv
cp
f
271.647 259.993 mo
271.649 260.001 271.649 260.02 271.649 260.049 cv
271.649 265.981 li
271.649 266.234 271.718 266.395 271.853 266.464 cv
271.987 266.533 272.237 266.574 272.606 266.587 cv
272.606 266.725 li
269.837 266.725 li
269.837 266.577 li
270.231 266.558 270.489 266.503 270.61 266.415 cv
270.731 266.326 270.792 266.134 270.792 265.838 cv
270.792 261.276 li
270.792 261.118 270.772 260.999 270.733 260.917 cv
270.694 260.834 270.608 260.793 270.479 260.793 cv
270.394 260.793 270.282 260.817 270.147 260.865 cv
270.013 260.912 269.886 260.962 269.769 261.015 cv
269.769 260.877 li
271.567 259.956 li
271.626 259.956 li
271.64 259.972 271.646 259.984 271.647 259.993 cv
cp
f
277.067 265.745 mo
277.247 265.217 277.337 264.452 277.337 263.451 cv
277.337 262.654 277.284 262.017 277.175 261.541 cv
276.974 260.655 276.595 260.212 276.038 260.212 cv
275.483 260.212 275.103 260.668 274.896 261.581 cv
274.788 262.066 274.733 262.706 274.733 263.5 cv
274.733 264.246 274.79 264.841 274.901 265.288 cv
275.11 266.121 275.503 266.538 276.077 266.538 cv
276.558 266.538 276.888 266.273 277.067 265.745 cv
cp
277.813 261.133 mo
278.144 261.773 278.308 262.509 278.308 263.34 cv
278.308 263.994 278.206 264.61 278.005 265.188 cv
277.622 266.275 276.96 266.819 276.019 266.819 cv
275.374 266.819 274.845 266.525 274.431 265.937 cv
273.985 265.31 273.763 264.457 273.763 263.38 cv
273.763 262.532 273.913 261.803 274.21 261.192 cv
274.612 260.361 275.229 259.946 276.063 259.946 cv
276.815 259.946 277.397 260.342 277.813 261.133 cv
cp
f
226.097 259.993 mo
226.099 260.001 226.099 260.02 226.099 260.049 cv
226.099 265.981 li
226.099 266.234 226.167 266.395 226.302 266.464 cv
226.437 266.533 226.687 266.574 227.056 266.587 cv
227.056 266.725 li
224.286 266.725 li
224.286 266.577 li
224.681 266.558 224.938 266.503 225.06 266.415 cv
225.181 266.326 225.241 266.134 225.241 265.838 cv
225.241 261.276 li
225.241 261.118 225.222 260.999 225.183 260.917 cv
225.144 260.834 225.058 260.793 224.929 260.793 cv
224.843 260.793 224.731 260.817 224.597 260.865 cv
224.462 260.912 224.335 260.962 224.218 261.015 cv
224.218 260.877 li
226.017 259.956 li
226.075 259.956 li
226.089 259.972 226.095 259.984 226.097 259.993 cv
cp
f
460.366 259.993 mo
460.368 260.001 460.368 260.02 460.368 260.049 cv
460.368 265.981 li
460.368 266.234 460.437 266.395 460.571 266.464 cv
460.706 266.533 460.956 266.574 461.325 266.587 cv
461.325 266.725 li
458.556 266.725 li
458.556 266.577 li
458.95 266.558 459.208 266.503 459.329 266.415 cv
459.45 266.326 459.511 266.134 459.511 265.838 cv
459.511 261.276 li
459.511 261.118 459.491 260.999 459.452 260.917 cv
459.413 260.834 459.327 260.793 459.198 260.793 cv
459.112 260.793 459.001 260.817 458.866 260.865 cv
458.731 260.912 458.604 260.962 458.487 261.015 cv
458.487 260.877 li
460.286 259.956 li
460.345 259.956 li
460.358 259.972 460.364 259.984 460.366 259.993 cv
cp
f
465.786 265.745 mo
465.966 265.217 466.056 264.452 466.056 263.451 cv
466.056 262.654 466.003 262.017 465.894 261.541 cv
465.692 260.655 465.313 260.212 464.757 260.212 cv
464.202 260.212 463.821 260.668 463.614 261.581 cv
463.507 262.066 463.452 262.706 463.452 263.5 cv
463.452 264.246 463.509 264.841 463.62 265.288 cv
463.829 266.121 464.222 266.538 464.796 266.538 cv
465.276 266.538 465.606 266.273 465.786 265.745 cv
cp
466.532 261.133 mo
466.862 261.773 467.026 262.509 467.026 263.34 cv
467.026 263.994 466.925 264.61 466.724 265.188 cv
466.341 266.275 465.679 266.819 464.737 266.819 cv
464.093 266.819 463.563 266.525 463.149 265.937 cv
462.704 265.31 462.481 264.457 462.481 263.38 cv
462.481 262.532 462.632 261.803 462.929 261.192 cv
463.331 260.361 463.948 259.946 464.782 259.946 cv
465.534 259.946 466.116 260.342 466.532 261.133 cv
cp
f
470.806 265.745 mo
470.985 265.217 471.075 264.452 471.075 263.451 cv
471.075 262.654 471.022 262.017 470.913 261.541 cv
470.712 260.655 470.333 260.212 469.776 260.212 cv
469.222 260.212 468.841 260.668 468.634 261.581 cv
468.526 262.066 468.472 262.706 468.472 263.5 cv
468.472 264.246 468.528 264.841 468.64 265.288 cv
468.849 266.121 469.241 266.538 469.815 266.538 cv
470.296 266.538 470.626 266.273 470.806 265.745 cv
cp
471.552 261.133 mo
471.882 261.773 472.046 262.509 472.046 263.34 cv
472.046 263.994 471.944 264.61 471.743 265.188 cv
471.36 266.275 470.698 266.819 469.757 266.819 cv
469.112 266.819 468.583 266.525 468.169 265.937 cv
467.724 265.31 467.501 264.457 467.501 263.38 cv
467.501 262.532 467.651 261.803 467.948 261.192 cv
468.351 260.361 468.968 259.946 469.802 259.946 cv
470.554 259.946 471.136 260.342 471.552 261.133 cv
cp
f
415.56 259.993 mo
415.56 260.001 415.562 260.02 415.562 260.049 cv
415.562 265.981 li
415.562 266.234 415.628 266.395 415.763 266.464 cv
415.897 266.533 416.149 266.574 416.517 266.587 cv
416.517 266.725 li
413.747 266.725 li
413.747 266.577 li
414.144 266.558 414.401 266.503 414.522 266.415 cv
414.644 266.326 414.704 266.134 414.704 265.838 cv
414.704 261.276 li
414.704 261.118 414.685 260.999 414.646 260.917 cv
414.604 260.834 414.521 260.793 414.39 260.793 cv
414.304 260.793 414.194 260.817 414.06 260.865 cv
413.923 260.912 413.796 260.962 413.679 261.015 cv
413.679 260.877 li
415.478 259.956 li
415.536 259.956 li
415.55 259.972 415.558 259.984 415.56 259.993 cv
cp
f
420.979 265.745 mo
421.159 265.217 421.249 264.452 421.249 263.451 cv
421.249 262.654 421.194 262.017 421.087 261.541 cv
420.884 260.655 420.505 260.212 419.95 260.212 cv
419.394 260.212 419.013 260.668 418.808 261.581 cv
418.7 262.066 418.646 262.706 418.646 263.5 cv
418.646 264.246 418.7 264.841 418.812 265.288 cv
419.021 266.121 419.413 266.538 419.989 266.538 cv
420.47 266.538 420.8 266.273 420.979 265.745 cv
cp
421.724 261.133 mo
422.054 261.773 422.22 262.509 422.22 263.34 cv
422.22 263.994 422.118 264.61 421.915 265.188 cv
421.532 266.275 420.872 266.819 419.931 266.819 cv
419.286 266.819 418.757 266.525 418.341 265.937 cv
417.897 265.31 417.675 264.457 417.675 263.38 cv
417.675 262.532 417.823 261.803 418.12 261.192 cv
418.522 260.361 419.14 259.946 419.974 259.946 cv
420.726 259.946 421.31 260.342 421.724 261.133 cv
cp
f
370.007 259.993 mo
370.009 260.001 370.009 260.02 370.009 260.049 cv
370.009 265.981 li
370.009 266.234 370.077 266.395 370.212 266.464 cv
370.347 266.533 370.597 266.574 370.966 266.587 cv
370.966 266.725 li
368.196 266.725 li
368.196 266.577 li
368.591 266.558 368.849 266.503 368.97 266.415 cv
369.091 266.326 369.151 266.134 369.151 265.838 cv
369.151 261.276 li
369.151 261.118 369.132 260.999 369.093 260.917 cv
369.054 260.834 368.968 260.793 368.839 260.793 cv
368.753 260.793 368.642 260.817 368.507 260.865 cv
368.372 260.912 368.245 260.962 368.128 261.015 cv
368.128 260.877 li
369.927 259.956 li
369.985 259.956 li
369.999 259.972 370.005 259.984 370.007 259.993 cv
cp
f
401.036 277.059 mo
403.39 277.059 li
403.39 277.327 li
402.397 277.327 li
402.179 277.327 402.032 277.396 401.956 277.535 cv
401.913 277.608 401.892 277.708 401.892 277.836 cv
401.892 285.379 li
401.892 285.545 401.915 285.668 401.962 285.748 cv
402.042 285.889 402.2 285.959 402.437 285.959 cv
403.39 285.959 li
403.39 286.244 li
401.036 286.244 li
401.036 277.059 li
cp
f
403.987 277.059 mo
410.296 277.059 li
410.356 278.963 li
410.089 278.963 li
409.958 278.365 409.792 277.976 409.591 277.795 cv
409.39 277.614 408.964 277.524 408.319 277.524 cv
407.698 277.524 li
407.698 283.261 li
407.698 283.692 407.765 283.96 407.899 284.063 cv
408.034 284.167 408.327 284.235 408.782 284.268 cv
408.782 284.476 li
405.53 284.476 li
405.53 284.268 li
406.001 284.231 406.296 284.153 406.411 284.033 cv
406.528 283.913 406.587 283.612 406.587 283.129 cv
406.587 277.524 li
405.96 277.524 li
405.343 277.524 404.923 277.613 404.698 277.792 cv
404.476 277.971 404.308 278.361 404.194 278.963 cv
403.923 278.963 li
403.987 277.059 li
cp
f
411.876 280.294 mo
411.759 280.49 411.675 280.738 411.624 281.038 cv
413.923 281.038 li
413.884 280.673 413.815 280.401 413.716 280.223 cv
413.538 279.901 413.241 279.741 412.823 279.741 cv
412.409 279.741 412.093 279.925 411.876 280.294 cv
cp
414.485 279.875 mo
414.87 280.231 415.062 280.735 415.062 281.388 cv
411.603 281.388 li
411.64 282.233 411.829 282.849 412.175 283.234 cv
412.521 283.62 412.929 283.813 413.401 283.813 cv
413.782 283.813 414.103 283.713 414.364 283.513 cv
414.626 283.313 414.868 283.028 415.089 282.661 cv
415.28 282.727 li
415.132 283.19 414.853 283.62 414.444 284.015 cv
414.036 284.409 413.534 284.607 412.942 284.607 cv
412.261 284.607 411.733 284.348 411.36 283.83 cv
410.989 283.312 410.802 282.715 410.802 282.04 cv
410.802 281.306 411.019 280.673 411.45 280.141 cv
411.882 279.608 412.446 279.341 413.14 279.341 cv
413.651 279.341 414.101 279.519 414.485 279.875 cv
cp
f
418.685 277.059 mo
418.685 277.25 li
418.405 277.254 418.216 277.272 418.114 277.306 cv
417.937 277.365 417.849 277.485 417.849 277.667 cv
417.849 277.76 417.88 277.89 417.942 278.057 cv
418.007 278.223 418.124 278.5 418.298 278.887 cv
420.044 282.789 li
421.63 278.565 li
421.7 278.378 421.753 278.22 421.788 278.09 cv
421.825 277.96 421.843 277.854 421.843 277.773 cv
421.843 277.554 421.751 277.406 421.565 277.328 cv
421.456 277.284 421.278 277.257 421.028 277.25 cv
421.028 277.059 li
423.31 277.059 li
423.31 277.25 li
423.073 277.283 422.899 277.347 422.786 277.442 cv
422.616 277.584 422.446 277.871 422.28 278.301 cv
419.81 284.607 li
419.642 284.607 li
416.884 278.445 li
416.651 277.923 416.466 277.597 416.325 277.469 cv
416.187 277.341 415.981 277.269 415.714 277.25 cv
415.714 277.059 li
418.685 277.059 li
cp
f
426.036 276.9 mo
426.585 276.9 li
424.171 284.662 li
423.616 284.662 li
426.036 276.9 li
cp
f
431.892 279.666 mo
432.22 279.9 432.384 280.158 432.384 280.438 cv
432.384 280.558 432.343 280.669 432.259 280.772 cv
432.175 280.876 432.046 280.929 431.872 280.929 cv
431.745 280.929 431.634 280.885 431.538 280.797 cv
431.44 280.709 431.372 280.582 431.327 280.414 cv
431.263 280.151 li
431.216 279.958 431.134 279.821 431.017 279.741 cv
430.897 279.664 430.739 279.626 430.544 279.626 cv
430.13 279.626 429.78 279.808 429.495 280.171 cv
429.21 280.534 429.067 281.018 429.067 281.621 cv
429.067 282.173 429.224 282.668 429.538 283.106 cv
429.853 283.545 430.276 283.764 430.81 283.764 cv
431.188 283.764 431.524 283.64 431.817 283.391 cv
431.985 283.248 432.173 283.021 432.384 282.711 cv
432.536 282.804 li
432.329 283.242 432.112 283.59 431.884 283.846 cv
431.444 284.335 430.935 284.58 430.358 284.58 cv
429.792 284.58 429.29 284.355 428.854 283.906 cv
428.419 283.457 428.2 282.848 428.2 282.078 cv
428.2 281.322 428.438 280.673 428.915 280.129 cv
429.39 279.586 429.991 279.314 430.718 279.314 cv
431.171 279.314 431.563 279.431 431.892 279.666 cv
cp
f
435.622 286.244 mo
433.269 286.244 li
433.269 285.97 li
434.265 285.97 li
434.479 285.97 434.626 285.902 434.706 285.768 cv
434.747 285.694 434.767 285.594 434.767 285.467 cv
434.767 277.923 li
434.767 277.745 434.731 277.603 434.659 277.499 cv
434.589 277.395 434.444 277.343 434.228 277.343 cv
433.269 277.343 li
433.269 277.059 li
435.622 277.059 li
435.622 286.244 li
cp
f
52.521 203.084 mo
50.3818 210.822 li
47.9756 200.526 li
50.5508 203.489 li
52.521 203.084 li
f
.559175 lw
50.374 193.667 mo
50.374 205.625 li
@
.44734 lw
35.1602 251.036 mo
465.993 251.036 li
@
35.1602 251.036 mo
35.1602 243.504 li
@
83.0063 251.036 mo
83.0063 243.504 li
@
130.884 251.036 mo
130.884 243.504 li
@
178.761 251.036 mo
178.761 243.504 li
@
226.639 251.036 mo
226.639 243.504 li
@
274.483 251.036 mo
274.483 243.504 li
@
322.361 251.036 mo
322.361 243.504 li
@
370.239 251.036 mo
370.239 243.504 li
@
418.116 251.036 mo
418.116 243.504 li
@
465.993 251.036 mo
465.993 243.504 li
@
192.426 262.983 mo
192.426 270.516 li
192.496 270.516 li
22.3306 270.516 li
22.3306 262.983 li
@
335.223 262.983 mo
335.223 270.516 li
335.292 270.516 li
219.79 270.516 li
219.79 262.983 li
@
479.133 262.983 mo
479.133 270.516 li
479.203 270.516 li
363.702 270.516 li
363.702 262.983 li
@
406.871 181.536 mo
409.062 173.812 li
411.399 184.125 li
408.844 181.145 li
406.871 181.536 li
1 0 0 0 cmyk
f
.67101 lw
4 ml
409.131 177.906 mo
409.131 193.947 li
@
.559175 lw
384.493 148.075 mo
365.69 159.194 li
0 1 0 0 cmyk
@
370.118 159.383 mo
362.368 161.338 li
370.085 154.146 li
368.795 157.861 li
370.118 159.383 li
f
337.914 126.76 mo
338.202 126.736 338.399 126.684 338.507 126.604 cv
338.675 126.483 338.813 126.232 338.921 125.851 cv
340.424 120.396 li
340.473 120.215 340.509 120.065 340.535 119.947 cv
340.561 119.829 340.574 119.727 340.574 119.643 cv
340.574 119.45 340.501 119.315 340.355 119.239 cv
340.21 119.163 339.963 119.121 339.615 119.113 cv
339.615 118.914 li
345.722 118.914 li
345.339 120.793 li
345.087 120.775 li
345.099 120.654 345.106 120.539 345.11 120.429 cv
345.114 120.318 345.116 120.277 345.116 120.305 cv
345.125 119.899 344.981 119.634 344.688 119.507 cv
344.395 119.381 343.79 119.317 342.875 119.317 cv
342.455 119.317 342.191 119.337 342.084 119.376 cv
341.976 119.416 341.901 119.502 341.862 119.636 cv
341.064 122.509 li
342.143 122.473 342.791 122.405 343.01 122.304 cv
343.229 122.204 343.462 121.873 343.709 121.311 cv
343.937 121.365 li
343.098 124.219 li
342.857 124.165 li
342.897 123.924 342.922 123.777 342.93 123.726 cv
342.938 123.673 342.941 123.615 342.941 123.551 cv
342.941 123.29 342.849 123.12 342.664 123.042 cv
342.479 122.964 342.14 122.924 341.647 122.924 cv
340.949 122.924 li
340.185 125.676 li
340.161 125.761 340.142 125.839 340.128 125.911 cv
340.114 125.983 340.107 126.058 340.107 126.134 cv
340.107 126.262 340.141 126.359 340.209 126.423 cv
340.333 126.536 340.576 126.592 340.94 126.592 cv
342.039 126.592 342.824 126.473 343.298 126.236 cv
343.771 126 344.244 125.542 344.715 124.863 cv
344.913 124.966 li
344.146 126.959 li
337.914 126.959 li
337.914 126.76 li
cp
0 0 0 1 cmyk
f
348.279 124.158 mo
348.279 127.517 li
348.279 127.991 348.4 128.404 348.802 128.586 cv
349.103 128.717 349.354 128.717 349.625 128.596 cv
349.856 128.485 350.218 128.233 350.358 127.91 cv
350.358 124.158 li
351.222 124.158 li
351.222 128.031 li
351.222 128.293 351.302 128.586 351.452 128.737 cv
351.613 128.898 351.784 128.929 351.984 128.818 cv
352.256 128.657 352.226 128.354 352.296 128.183 cv
352.496 128.183 li
352.416 128.525 352.336 128.949 351.813 129.231 cv
351.332 129.494 350.92 129.333 350.779 129.221 cv
350.429 128.959 350.438 128.707 350.368 128.384 cv
350.277 128.515 350.137 128.737 349.665 129.08 cv
349.435 129.251 349.083 129.373 348.722 129.373 cv
348.249 129.373 347.918 128.989 347.777 128.889 cv
347.777 129.121 li
347.808 129.715 347.979 129.897 348.079 130.462 cv
348.189 131.127 347.888 131.45 347.617 131.45 cv
347.346 131.45 347.045 131.127 347.155 130.462 cv
347.256 129.897 347.416 129.715 347.416 129.121 cv
347.416 124.158 li
348.279 124.158 li
cp
f
356.947 125.022 mo
357.124 125.202 357.213 125.377 357.213 125.547 cv
357.213 125.701 357.167 125.821 357.075 125.906 cv
356.983 125.991 356.876 126.033 356.752 126.033 cv
356.631 126.033 356.529 125.996 356.447 125.92 cv
356.366 125.844 356.325 125.751 356.325 125.639 cv
356.325 125.554 356.353 125.462 356.406 125.363 cv
356.46 125.265 356.487 125.201 356.487 125.171 cv
356.487 125.112 356.453 125.062 356.387 125.021 cv
356.319 124.98 356.212 124.959 356.065 124.959 cv
355.539 124.959 355.082 125.26 354.695 125.862 cv
354.308 126.464 354.114 127.095 354.114 127.756 cv
354.114 128.128 354.192 128.419 354.35 128.629 cv
354.506 128.84 354.741 128.945 355.056 128.945 cv
355.307 128.945 355.551 128.872 355.788 128.726 cv
356.025 128.58 356.243 128.393 356.442 128.167 cv
356.478 128.127 li
356.619 128.235 li
356.391 128.528 356.17 128.753 355.957 128.911 cv
355.581 129.183 355.165 129.319 354.707 129.319 cv
354.27 129.319 353.915 129.179 353.644 128.898 cv
353.372 128.617 353.236 128.234 353.236 127.748 cv
353.236 127.002 353.539 126.316 354.144 125.688 cv
354.741 125.064 355.389 124.752 356.085 124.752 cv
356.483 124.752 356.771 124.842 356.947 125.022 cv
cp
f
.559175 lw
2.5 ml
262.987 171.805 mo
262.987 215.249 li
@
82.2383 57.4478 mo
82.2383 61.9292 li
82.2383 62.5615 82.3989 63.1138 82.9341 63.356 cv
83.3354 63.5308 83.6699 63.5308 84.0313 63.3691 cv
84.3389 63.2212 84.8208 62.8848 85.0083 62.4541 cv
85.0083 57.4478 li
86.1592 57.4478 li
86.1592 62.6157 li
86.1592 62.9653 86.2661 63.356 86.4668 63.5576 cv
86.6812 63.7729 86.9082 63.8135 87.1763 63.6655 cv
87.5376 63.4502 87.4971 63.0464 87.5908 62.8174 cv
87.8584 62.8174 li
87.7515 63.2749 87.6445 63.8403 86.9487 64.2173 cv
86.3062 64.5669 85.7578 64.3516 85.5703 64.2036 cv
85.1021 63.8535 85.1152 63.5171 85.0215 63.0864 cv
84.9014 63.2617 84.7139 63.5576 84.085 64.0151 cv
83.7769 64.2441 83.3086 64.4058 82.8271 64.4058 cv
82.1982 64.4058 81.7563 63.894 81.5688 63.7598 cv
81.5688 64.0693 li
81.6094 64.8633 81.8369 65.1055 81.9707 65.8589 cv
82.1177 66.7471 81.7163 67.1777 81.355 67.1777 cv
80.9937 67.1777 80.5923 66.7471 80.7393 65.8589 cv
80.873 65.1055 81.0874 64.8633 81.0874 64.0693 cv
81.0874 57.4478 li
82.2383 57.4478 li
cp
0 1 1 .41 cmyk
f
88.1045 55.3413 mo
93.9492 55.3413 li
93.9492 55.958 li
88.1045 55.958 li
88.1045 55.3413 li
cp
f
105.138 57.9321 mo
112.837 60.083 li
102.591 62.501 li
105.54 59.9121 li
105.138 57.9321 li
f
91.3027 60.0903 mo
107.666 60.0903 li
@
[1.11835 1.11835 ] 0 dsh
110.011 53.6465 mo
114.216 57.1108 li
117.221 60.6709 li
119.529 63.9116 li
121.426 66.9624 li
124.431 72.3013 li
126.739 76.7505 li
128.636 80.5957 li
@
244.958 140.515 mo
245.595 140.254 245.913 139.763 245.913 139.042 cv
245.913 138.347 245.628 137.874 245.058 137.62 cv
244.753 137.484 244.349 137.416 243.845 137.416 cv
243.505 137.416 243.297 137.44 243.221 137.489 cv
243.145 137.538 243.106 137.651 243.106 137.831 cv
243.106 140.785 li
243.97 140.753 244.587 140.664 244.958 140.515 cv
cp
240.856 144.675 mo
241.317 144.632 241.604 144.543 241.718 144.407 cv
241.831 144.271 241.888 143.954 241.888 143.457 cv
241.888 138.259 li
241.888 137.837 241.824 137.561 241.697 137.43 cv
241.57 137.299 241.29 137.216 240.856 137.181 cv
240.856 136.958 li
244.179 136.958 li
244.87 136.958 245.446 137.046 245.907 137.222 cv
246.782 137.553 247.22 138.164 247.22 139.053 cv
247.22 139.65 247.025 140.108 246.637 140.428 cv
246.248 140.748 245.72 140.958 245.052 141.06 cv
247.524 144.105 li
247.677 144.292 247.829 144.427 247.981 144.513 cv
248.134 144.598 248.329 144.652 248.567 144.675 cv
248.567 144.898 li
246.635 144.898 li
243.633 141.201 li
243.106 141.23 li
243.106 143.595 li
243.106 144.039 243.174 144.32 243.309 144.439 cv
243.443 144.558 243.737 144.636 244.19 144.675 cv
244.19 144.898 li
240.856 144.898 li
240.856 144.675 li
cp
0 0 0 1 cmyk
f
252.165 141.652 mo
251.716 141.8 251.345 141.964 251.052 142.144 cv
250.489 142.492 250.208 142.886 250.208 143.328 cv
250.208 143.683 250.325 143.945 250.56 144.113 cv
250.712 144.222 250.882 144.277 251.069 144.277 cv
251.327 144.277 251.574 144.205 251.811 144.06 cv
252.047 143.916 252.165 143.732 252.165 143.509 cv
252.165 141.652 li
cp
250.015 142.314 mo
250.374 142.08 251.091 141.761 252.165 141.359 cv
252.165 140.861 li
252.165 140.462 252.126 140.185 252.048 140.029 cv
251.915 139.767 251.64 139.636 251.222 139.636 cv
251.022 139.636 250.833 139.687 250.653 139.789 cv
250.474 139.894 250.384 140.039 250.384 140.222 cv
250.384 140.269 250.394 140.348 250.413 140.459 cv
250.433 140.571 250.442 140.642 250.442 140.673 cv
250.442 140.892 250.37 141.044 250.226 141.13 cv
250.144 141.181 250.046 141.207 249.933 141.207 cv
249.757 141.207 249.622 141.149 249.528 141.034 cv
249.435 140.918 249.388 140.791 249.388 140.65 cv
249.388 140.376 249.557 140.09 249.895 139.792 cv
250.232 139.493 250.728 139.343 251.38 139.343 cv
252.138 139.343 252.651 139.589 252.921 140.082 cv
253.065 140.351 253.138 140.744 253.138 141.259 cv
253.138 143.609 li
253.138 143.835 253.153 143.992 253.185 144.078 cv
253.235 144.23 253.341 144.306 253.501 144.306 cv
253.591 144.306 253.665 144.292 253.724 144.265 cv
253.782 144.238 253.884 144.171 254.028 144.066 cv
254.028 144.371 li
253.903 144.523 253.769 144.648 253.624 144.746 cv
253.405 144.894 253.183 144.968 252.956 144.968 cv
252.69 144.968 252.498 144.882 252.379 144.71 cv
252.26 144.539 252.194 144.333 252.183 144.095 cv
251.886 144.353 251.632 144.544 251.421 144.669 cv
251.065 144.88 250.728 144.986 250.407 144.986 cv
250.071 144.986 249.78 144.868 249.534 144.631 cv
249.288 144.395 249.165 144.095 249.165 143.732 cv
249.165 143.166 249.448 142.693 250.015 142.314 cv
cp
f
257.849 144.107 mo
258.036 143.927 258.13 143.757 258.13 143.597 cv
258.13 141.083 li
258.13 140.576 257.994 140.217 257.723 140.008 cv
257.451 139.799 257.187 139.695 256.929 139.695 cv
256.437 139.695 256.054 139.913 255.78 140.348 cv
255.507 140.784 255.37 141.32 255.37 141.957 cv
255.37 142.585 255.516 143.146 255.807 143.638 cv
256.098 144.13 256.532 144.376 257.11 144.376 cv
257.415 144.376 257.661 144.287 257.849 144.107 cv
cp
257.679 139.548 mo
257.835 139.63 257.985 139.744 258.13 139.888 cv
258.13 138.025 li
258.13 137.787 258.104 137.623 258.051 137.533 cv
257.998 137.443 257.872 137.398 257.673 137.398 cv
257.626 137.398 257.585 137.4 257.55 137.404 cv
257.515 137.408 257.437 137.416 257.315 137.427 cv
257.315 137.234 li
257.796 137.111 li
257.972 137.064 258.147 137.015 258.323 136.964 cv
258.499 136.914 258.653 136.865 258.786 136.818 cv
258.849 136.798 258.952 136.761 259.097 136.707 cv
259.132 136.718 li
259.12 137.333 li
259.116 137.556 259.112 137.786 259.108 138.022 cv
259.104 138.258 259.103 138.492 259.103 138.722 cv
259.091 143.509 li
259.091 143.763 259.122 143.941 259.185 144.042 cv
259.247 144.144 259.413 144.195 259.683 144.195 cv
259.726 144.195 259.769 144.194 259.812 144.192 cv
259.854 144.19 259.897 144.185 259.94 144.177 cv
259.94 144.371 li
259.917 144.378 259.634 144.476 259.091 144.664 cv
258.171 145.009 li
258.13 144.957 li
258.13 144.236 li
257.911 144.474 257.722 144.644 257.562 144.746 cv
257.276 144.921 256.946 145.009 256.571 145.009 cv
255.907 145.009 255.369 144.752 254.957 144.239 cv
254.545 143.725 254.339 143.13 254.339 142.455 cv
254.339 141.607 254.586 140.879 255.08 140.272 cv
255.574 139.665 256.179 139.361 256.894 139.361 cv
257.179 139.361 257.44 139.423 257.679 139.548 cv
cp
f
261.218 136.899 mo
261.335 136.779 261.479 136.718 261.651 136.718 cv
261.819 136.718 261.963 136.778 262.082 136.896 cv
262.201 137.015 262.261 137.16 262.261 137.331 cv
262.261 137.498 262.201 137.641 262.082 137.759 cv
261.963 137.878 261.819 137.937 261.651 137.937 cv
261.479 137.937 261.335 137.878 261.218 137.759 cv
261.101 137.641 261.042 137.498 261.042 137.331 cv
261.042 137.164 261.101 137.02 261.218 136.899 cv
cp
260.286 144.734 mo
260.704 144.695 260.968 144.624 261.077 144.52 cv
261.187 144.417 261.241 144.136 261.241 143.679 cv
261.241 140.884 li
261.241 140.63 261.224 140.455 261.188 140.357 cv
261.13 140.197 261.007 140.117 260.819 140.117 cv
260.776 140.117 260.734 140.121 260.693 140.128 cv
260.652 140.136 260.534 140.167 260.339 140.222 cv
260.339 140.041 li
260.591 139.958 li
261.274 139.736 261.751 139.568 262.021 139.455 cv
262.13 139.408 262.2 139.384 262.231 139.384 cv
262.239 139.412 262.243 139.441 262.243 139.472 cv
262.243 143.679 li
262.243 144.125 262.297 144.404 262.404 144.517 cv
262.512 144.63 262.755 144.703 263.134 144.734 cv
263.134 144.898 li
260.286 144.898 li
260.286 144.734 li
cp
f
266.825 141.652 mo
266.376 141.8 266.005 141.964 265.712 142.144 cv
265.149 142.492 264.868 142.886 264.868 143.328 cv
264.868 143.683 264.985 143.945 265.22 144.113 cv
265.372 144.222 265.542 144.277 265.729 144.277 cv
265.987 144.277 266.234 144.205 266.471 144.06 cv
266.707 143.916 266.825 143.732 266.825 143.509 cv
266.825 141.652 li
cp
264.675 142.314 mo
265.034 142.08 265.751 141.761 266.825 141.359 cv
266.825 140.861 li
266.825 140.462 266.786 140.185 266.708 140.029 cv
266.575 139.767 266.3 139.636 265.882 139.636 cv
265.683 139.636 265.493 139.687 265.313 139.789 cv
265.134 139.894 265.044 140.039 265.044 140.222 cv
265.044 140.269 265.054 140.348 265.073 140.459 cv
265.093 140.571 265.103 140.642 265.103 140.673 cv
265.103 140.892 265.03 141.044 264.886 141.13 cv
264.804 141.181 264.706 141.207 264.593 141.207 cv
264.417 141.207 264.282 141.149 264.188 141.034 cv
264.095 140.918 264.048 140.791 264.048 140.65 cv
264.048 140.376 264.217 140.09 264.555 139.792 cv
264.893 139.493 265.388 139.343 266.04 139.343 cv
266.798 139.343 267.312 139.589 267.581 140.082 cv
267.726 140.351 267.798 140.744 267.798 141.259 cv
267.798 143.609 li
267.798 143.835 267.813 143.992 267.845 144.078 cv
267.896 144.23 268.001 144.306 268.161 144.306 cv
268.251 144.306 268.325 144.292 268.384 144.265 cv
268.442 144.238 268.544 144.171 268.688 144.066 cv
268.688 144.371 li
268.563 144.523 268.429 144.648 268.284 144.746 cv
268.065 144.894 267.843 144.968 267.616 144.968 cv
267.351 144.968 267.158 144.882 267.039 144.71 cv
266.92 144.539 266.854 144.333 266.843 144.095 cv
266.546 144.353 266.292 144.544 266.081 144.669 cv
265.726 144.88 265.388 144.986 265.067 144.986 cv
264.731 144.986 264.44 144.868 264.194 144.631 cv
263.948 144.395 263.825 144.095 263.825 143.732 cv
263.825 143.166 264.108 142.693 264.675 142.314 cv
cp
f
271.765 139.496 mo
271.765 139.917 li
270.569 139.917 li
270.558 143.292 li
270.558 143.589 270.583 143.814 270.634 143.966 cv
270.728 144.236 270.911 144.371 271.185 144.371 cv
271.325 144.371 271.447 144.337 271.551 144.271 cv
271.654 144.205 271.772 144.099 271.905 143.955 cv
272.058 144.083 li
271.929 144.259 li
271.726 144.533 271.511 144.726 271.284 144.839 cv
271.058 144.953 270.839 145.009 270.628 145.009 cv
270.167 145.009 269.854 144.804 269.69 144.394 cv
269.601 144.171 269.556 143.863 269.556 143.468 cv
269.556 139.917 li
268.917 139.917 li
268.897 139.906 268.883 139.894 268.873 139.882 cv
268.863 139.871 268.858 139.855 268.858 139.835 cv
268.858 139.796 268.867 139.766 268.885 139.745 cv
268.902 139.723 268.958 139.673 269.052 139.595 cv
269.321 139.373 269.516 139.192 269.635 139.053 cv
269.754 138.915 270.034 138.548 270.476 137.955 cv
270.526 137.955 270.557 137.958 270.566 137.966 cv
270.576 137.974 270.581 138.003 270.581 138.054 cv
270.581 139.496 li
271.765 139.496 li
cp
f
273.212 136.899 mo
273.329 136.779 273.474 136.718 273.646 136.718 cv
273.813 136.718 273.957 136.778 274.076 136.896 cv
274.195 137.015 274.255 137.16 274.255 137.331 cv
274.255 137.498 274.195 137.641 274.076 137.759 cv
273.957 137.878 273.813 137.937 273.646 137.937 cv
273.474 137.937 273.329 137.878 273.212 137.759 cv
273.095 137.641 273.036 137.498 273.036 137.331 cv
273.036 137.164 273.095 137.02 273.212 136.899 cv
cp
272.28 144.734 mo
272.698 144.695 272.962 144.624 273.071 144.52 cv
273.181 144.417 273.235 144.136 273.235 143.679 cv
273.235 140.884 li
273.235 140.63 273.218 140.455 273.183 140.357 cv
273.124 140.197 273.001 140.117 272.813 140.117 cv
272.771 140.117 272.729 140.121 272.688 140.128 cv
272.646 140.136 272.528 140.167 272.333 140.222 cv
272.333 140.041 li
272.585 139.958 li
273.269 139.736 273.745 139.568 274.015 139.455 cv
274.124 139.408 274.194 139.384 274.226 139.384 cv
274.233 139.412 274.237 139.441 274.237 139.472 cv
274.237 143.679 li
274.237 144.125 274.291 144.404 274.398 144.517 cv
274.506 144.63 274.749 144.703 275.128 144.734 cv
275.128 144.898 li
272.28 144.898 li
272.28 144.734 li
cp
f
277.958 139.455 mo
277.958 139.636 li
277.755 139.66 277.611 139.691 277.527 139.73 cv
277.443 139.769 277.401 139.855 277.401 139.988 cv
277.401 140.05 277.41 140.11 277.428 140.167 cv
277.445 140.223 277.476 140.306 277.519 140.416 cv
278.749 143.359 li
279.792 140.761 li
279.843 140.632 279.891 140.498 279.936 140.357 cv
279.98 140.216 280.003 140.109 280.003 140.035 cv
280.003 139.882 279.931 139.773 279.786 139.707 cv
279.7 139.671 279.583 139.648 279.435 139.636 cv
279.435 139.455 li
281.099 139.455 li
281.099 139.636 li
280.907 139.652 280.77 139.715 280.686 139.827 cv
280.602 139.938 280.479 140.195 280.319 140.597 cv
278.626 144.816 li
278.595 144.89 278.569 144.941 278.55 144.968 cv
278.53 144.996 278.503 145.009 278.468 145.009 cv
278.429 145.009 278.396 144.987 278.368 144.942 cv
278.341 144.897 278.312 144.841 278.28 144.775 cv
276.487 140.486 li
276.343 140.138 276.188 139.902 276.024 139.777 cv
275.927 139.707 275.784 139.66 275.597 139.636 cv
275.597 139.455 li
277.958 139.455 li
cp
f
282.769 140.421 mo
282.644 140.632 282.554 140.898 282.499 141.218 cv
284.972 141.218 li
284.929 140.828 284.854 140.537 284.749 140.345 cv
284.558 140.001 284.237 139.83 283.788 139.83 cv
283.343 139.83 283.003 140.027 282.769 140.421 cv
cp
285.575 139.973 mo
285.989 140.354 286.196 140.894 286.196 141.593 cv
282.476 141.593 li
282.515 142.498 282.72 143.156 283.091 143.569 cv
283.462 143.982 283.901 144.189 284.409 144.189 cv
284.819 144.189 285.165 144.082 285.446 143.868 cv
285.728 143.653 285.987 143.349 286.226 142.956 cv
286.431 143.025 li
286.271 143.522 285.971 143.982 285.531 144.405 cv
285.092 144.827 284.554 145.039 283.917 145.039 cv
283.183 145.039 282.615 144.761 282.215 144.207 cv
281.814 143.652 281.614 143.013 281.614 142.291 cv
281.614 141.505 281.847 140.828 282.312 140.257 cv
282.776 139.687 283.382 139.402 284.128 139.402 cv
284.679 139.402 285.161 139.592 285.575 139.973 cv
cp
f
249.221 152.421 mo
249.096 152.632 249.006 152.898 248.951 153.218 cv
251.424 153.218 li
251.381 152.828 251.307 152.537 251.201 152.345 cv
251.01 152.001 250.689 151.83 250.24 151.83 cv
249.795 151.83 249.455 152.027 249.221 152.421 cv
cp
252.027 151.973 mo
252.441 152.354 252.648 152.894 252.648 153.593 cv
248.928 153.593 li
248.967 154.498 249.172 155.156 249.543 155.569 cv
249.914 155.982 250.354 156.189 250.861 156.189 cv
251.271 156.189 251.617 156.082 251.898 155.868 cv
252.18 155.653 252.439 155.349 252.678 154.956 cv
252.883 155.025 li
252.723 155.522 252.423 155.982 251.983 156.405 cv
251.544 156.827 251.006 157.039 250.369 157.039 cv
249.635 157.039 249.067 156.761 248.667 156.207 cv
248.267 155.652 248.066 155.013 248.066 154.291 cv
248.066 153.505 248.299 152.828 248.764 152.257 cv
249.229 151.687 249.834 151.402 250.58 151.402 cv
251.131 151.402 251.613 151.592 252.027 151.973 cv
cp
f
253.393 156.734 mo
253.807 156.714 254.079 156.637 254.21 156.502 cv
254.341 156.368 254.406 156.083 254.406 155.65 cv
254.406 151.888 li
253.404 151.888 li
253.404 151.496 li
254.406 151.496 li
254.406 150.878 254.49 150.357 254.658 149.931 cv
254.979 149.115 255.568 148.707 256.426 148.707 cv
256.77 148.707 257.078 148.775 257.35 148.912 cv
257.622 149.048 257.758 149.232 257.758 149.462 cv
257.758 149.591 257.711 149.707 257.618 149.808 cv
257.524 149.91 257.412 149.96 257.279 149.96 cv
257.167 149.96 257.069 149.926 256.988 149.858 cv
256.906 149.79 256.81 149.669 256.696 149.498 cv
256.598 149.345 li
256.543 149.263 256.479 149.194 256.405 149.137 cv
256.331 149.081 256.229 149.052 256.097 149.052 cv
255.801 149.052 255.601 149.199 255.496 149.492 cv
255.438 149.648 255.408 149.853 255.408 150.107 cv
255.408 151.496 li
256.867 151.496 li
256.867 151.888 li
255.408 151.888 li
255.408 155.65 li
255.408 156.091 255.468 156.374 255.587 156.497 cv
255.706 156.62 256.018 156.699 256.521 156.734 cv
256.521 156.898 li
253.393 156.898 li
253.393 156.734 li
cp
f
257.178 156.734 mo
257.592 156.714 257.864 156.637 257.995 156.502 cv
258.126 156.368 258.191 156.083 258.191 155.65 cv
258.191 151.888 li
257.189 151.888 li
257.189 151.496 li
258.191 151.496 li
258.191 150.878 258.275 150.357 258.443 149.931 cv
258.765 149.115 259.354 148.707 260.211 148.707 cv
260.555 148.707 260.863 148.775 261.135 148.912 cv
261.407 149.048 261.543 149.232 261.543 149.462 cv
261.543 149.591 261.496 149.707 261.403 149.808 cv
261.31 149.91 261.197 149.96 261.064 149.96 cv
260.952 149.96 260.854 149.926 260.773 149.858 cv
260.691 149.79 260.595 149.669 260.481 149.498 cv
260.383 149.345 li
260.328 149.263 260.264 149.194 260.19 149.137 cv
260.116 149.081 260.014 149.052 259.882 149.052 cv
259.586 149.052 259.386 149.199 259.281 149.492 cv
259.223 149.648 259.193 149.853 259.193 150.107 cv
259.193 151.496 li
260.652 151.496 li
260.652 151.888 li
259.193 151.888 li
259.193 155.65 li
259.193 156.091 259.253 156.374 259.372 156.497 cv
259.491 156.62 259.803 156.699 260.307 156.734 cv
260.307 156.898 li
257.178 156.898 li
257.178 156.734 li
cp
f
262.328 152.421 mo
262.203 152.632 262.113 152.898 262.059 153.218 cv
264.531 153.218 li
264.488 152.828 264.414 152.537 264.309 152.345 cv
264.117 152.001 263.797 151.83 263.348 151.83 cv
262.902 151.83 262.563 152.027 262.328 152.421 cv
cp
265.135 151.973 mo
265.549 152.354 265.756 152.894 265.756 153.593 cv
262.035 153.593 li
262.074 154.498 262.279 155.156 262.65 155.569 cv
263.021 155.982 263.461 156.189 263.969 156.189 cv
264.379 156.189 264.725 156.082 265.006 155.868 cv
265.287 155.653 265.547 155.349 265.785 154.956 cv
265.99 155.025 li
265.83 155.522 265.53 155.982 265.091 156.405 cv
264.651 156.827 264.113 157.039 263.477 157.039 cv
262.742 157.039 262.175 156.761 261.774 156.207 cv
261.374 155.652 261.174 155.013 261.174 154.291 cv
261.174 153.505 261.406 152.828 261.871 152.257 cv
262.336 151.687 262.941 151.402 263.688 151.402 cv
264.238 151.402 264.721 151.592 265.135 151.973 cv
cp
f
270.511 151.749 mo
270.864 152 271.041 152.276 271.041 152.576 cv
271.041 152.704 270.996 152.824 270.906 152.935 cv
270.816 153.045 270.678 153.101 270.49 153.101 cv
270.354 153.101 270.233 153.054 270.13 152.96 cv
270.026 152.867 269.951 152.73 269.904 152.55 cv
269.834 152.269 li
269.783 152.062 269.695 151.916 269.57 151.83 cv
269.441 151.748 269.271 151.707 269.061 151.707 cv
268.615 151.707 268.239 151.901 267.933 152.291 cv
267.626 152.68 267.473 153.197 267.473 153.842 cv
267.473 154.433 267.642 154.963 267.979 155.432 cv
268.317 155.901 268.773 156.136 269.348 156.136 cv
269.754 156.136 270.115 156.003 270.432 155.737 cv
270.611 155.584 270.814 155.342 271.041 155.009 cv
271.205 155.109 li
270.982 155.578 270.748 155.95 270.502 156.223 cv
270.029 156.748 269.482 157.009 268.861 157.009 cv
268.252 157.009 267.713 156.769 267.244 156.289 cv
266.775 155.808 266.541 155.156 266.541 154.332 cv
266.541 153.523 266.797 152.828 267.309 152.246 cv
267.82 151.664 268.467 151.373 269.248 151.373 cv
269.736 151.373 270.157 151.498 270.511 151.749 cv
cp
f
274.645 151.496 mo
274.645 151.917 li
273.449 151.917 li
273.438 155.292 li
273.438 155.589 273.463 155.814 273.514 155.966 cv
273.607 156.236 273.791 156.371 274.064 156.371 cv
274.205 156.371 274.327 156.337 274.431 156.271 cv
274.534 156.205 274.652 156.099 274.785 155.955 cv
274.938 156.083 li
274.809 156.259 li
274.605 156.533 274.391 156.726 274.164 156.839 cv
273.938 156.953 273.719 157.009 273.508 157.009 cv
273.047 157.009 272.734 156.804 272.57 156.394 cv
272.48 156.171 272.436 155.863 272.436 155.468 cv
272.436 151.917 li
271.797 151.917 li
271.777 151.906 271.763 151.894 271.753 151.882 cv
271.743 151.871 271.738 151.855 271.738 151.835 cv
271.738 151.796 271.747 151.766 271.765 151.745 cv
271.782 151.723 271.838 151.673 271.932 151.595 cv
272.201 151.373 272.396 151.192 272.515 151.053 cv
272.634 150.915 272.914 150.548 273.355 149.955 cv
273.406 149.955 273.437 149.958 273.446 149.966 cv
273.456 149.974 273.461 150.003 273.461 150.054 cv
273.461 151.496 li
274.645 151.496 li
cp
f
275.553 155.052 mo
275.746 155.052 li
275.836 155.498 275.957 155.839 276.108 156.078 cv
276.381 156.515 276.78 156.734 277.307 156.734 cv
277.6 156.734 277.83 156.653 278 156.491 cv
278.169 156.329 278.254 156.119 278.254 155.861 cv
278.254 155.697 278.205 155.539 278.107 155.386 cv
278.01 155.234 277.838 155.085 277.592 154.941 cv
276.936 154.566 li
276.455 154.308 276.102 154.048 275.875 153.787 cv
275.648 153.525 275.535 153.216 275.535 152.861 cv
275.535 152.423 275.691 152.064 276.004 151.783 cv
276.316 151.501 276.709 151.361 277.182 151.361 cv
277.389 151.361 277.616 151.4 277.864 151.478 cv
278.112 151.556 278.252 151.595 278.283 151.595 cv
278.354 151.595 278.404 151.585 278.436 151.566 cv
278.467 151.546 278.494 151.515 278.518 151.472 cv
278.658 151.472 li
278.699 153.107 li
278.518 153.107 li
278.439 152.728 278.334 152.433 278.201 152.222 cv
277.959 151.832 277.609 151.636 277.152 151.636 cv
276.879 151.636 276.664 151.72 276.508 151.888 cv
276.352 152.056 276.273 152.253 276.273 152.48 cv
276.273 152.839 276.543 153.16 277.082 153.441 cv
277.855 153.857 li
278.688 154.31 279.104 154.837 279.104 155.439 cv
279.104 155.9 278.931 156.277 278.586 156.57 cv
278.24 156.863 277.789 157.009 277.231 157.009 cv
276.998 157.009 276.732 156.97 276.437 156.892 cv
276.14 156.814 275.965 156.775 275.91 156.775 cv
275.863 156.775 275.822 156.792 275.787 156.825 cv
275.752 156.858 275.725 156.898 275.705 156.945 cv
275.553 156.945 li
275.553 155.052 li
cp
f
176.513 155.902 mo
177.009 155.852 177.327 155.739 177.468 155.566 cv
177.608 155.392 177.679 154.989 177.679 154.356 cv
177.679 149.485 li
177.679 149.052 177.61 148.77 177.474 148.64 cv
177.337 148.509 177.026 148.432 176.542 148.408 cv
176.542 148.186 li
178.908 148.186 li
181.664 154.163 li
184.352 148.186 li
186.737 148.186 li
186.737 148.408 li
186.292 148.439 186.005 148.521 185.876 148.651 cv
185.747 148.782 185.683 149.06 185.683 149.485 cv
185.683 154.819 li
185.683 155.256 185.747 155.537 185.876 155.66 cv
186.005 155.782 186.292 155.863 186.737 155.902 cv
186.737 156.125 li
183.38 156.125 li
183.38 155.902 li
183.864 155.863 184.166 155.776 184.285 155.642 cv
184.404 155.507 184.464 155.186 184.464 154.679 cv
184.464 149.292 li
181.391 156.125 li
181.227 156.125 li
178.206 149.573 li
178.206 154.356 li
178.206 155.013 178.302 155.44 178.493 155.639 cv
178.618 155.768 178.897 155.855 179.331 155.902 cv
179.331 156.125 li
176.513 156.125 li
176.513 155.902 li
cp
f
188.214 148.126 mo
188.331 148.006 188.476 147.945 188.647 147.945 cv
188.815 147.945 188.959 148.005 189.078 148.123 cv
189.197 148.242 189.257 148.387 189.257 148.558 cv
189.257 148.725 189.197 148.868 189.078 148.986 cv
188.959 149.105 188.815 149.164 188.647 149.164 cv
188.476 149.164 188.331 149.105 188.214 148.986 cv
188.097 148.868 188.038 148.725 188.038 148.558 cv
188.038 148.391 188.097 148.247 188.214 148.126 cv
cp
187.282 155.961 mo
187.7 155.922 187.964 155.851 188.073 155.747 cv
188.183 155.644 188.237 155.363 188.237 154.906 cv
188.237 152.111 li
188.237 151.857 188.22 151.682 188.185 151.584 cv
188.126 151.424 188.003 151.344 187.815 151.344 cv
187.772 151.344 187.73 151.348 187.689 151.355 cv
187.648 151.363 187.53 151.395 187.335 151.449 cv
187.335 151.268 li
187.587 151.186 li
188.271 150.963 188.747 150.795 189.017 150.682 cv
189.126 150.635 189.196 150.611 189.228 150.611 cv
189.235 150.639 189.239 150.668 189.239 150.699 cv
189.239 154.906 li
189.239 155.352 189.293 155.631 189.4 155.744 cv
189.508 155.857 189.751 155.93 190.13 155.961 cv
190.13 156.125 li
187.282 156.125 li
187.282 155.961 li
cp
f
190.599 155.961 mo
190.876 155.926 191.07 155.856 191.182 155.753 cv
191.293 155.649 191.349 155.418 191.349 155.059 cv
191.349 152.082 li
191.349 151.834 191.325 151.66 191.278 151.559 cv
191.204 151.412 191.052 151.338 190.821 151.338 cv
190.786 151.338 190.75 151.34 190.713 151.344 cv
190.676 151.348 190.63 151.354 190.575 151.361 cv
190.575 151.156 li
190.735 151.109 191.114 150.988 191.712 150.793 cv
192.263 150.611 li
192.29 150.611 192.307 150.621 192.313 150.641 cv
192.318 150.66 192.321 150.688 192.321 150.723 cv
192.321 151.584 li
192.68 151.248 192.961 151.018 193.164 150.893 cv
193.468 150.701 193.783 150.605 194.111 150.605 cv
194.376 150.605 194.618 150.682 194.836 150.834 cv
195.257 151.131 195.468 151.66 195.468 152.422 cv
195.468 155.158 li
195.468 155.439 195.524 155.643 195.636 155.768 cv
195.749 155.893 195.937 155.957 196.2 155.961 cv
196.2 156.125 li
193.698 156.125 li
193.698 155.961 li
193.983 155.922 194.183 155.843 194.296 155.724 cv
194.409 155.604 194.466 155.346 194.466 154.947 cv
194.466 152.445 li
194.466 152.109 194.404 151.831 194.279 151.61 cv
194.155 151.39 193.926 151.279 193.592 151.279 cv
193.363 151.279 193.129 151.357 192.893 151.514 cv
192.761 151.604 192.59 151.752 192.38 151.959 cv
192.38 155.24 li
192.38 155.521 192.442 155.71 192.567 155.806 cv
192.692 155.901 192.89 155.953 193.159 155.961 cv
193.159 156.125 li
190.599 156.125 li
190.599 155.961 li
cp
f
197.548 148.126 mo
197.665 148.006 197.81 147.945 197.981 147.945 cv
198.149 147.945 198.293 148.005 198.412 148.123 cv
198.531 148.242 198.591 148.387 198.591 148.558 cv
198.591 148.725 198.531 148.868 198.412 148.986 cv
198.293 149.105 198.149 149.164 197.981 149.164 cv
197.81 149.164 197.665 149.105 197.548 148.986 cv
197.431 148.868 197.372 148.725 197.372 148.558 cv
197.372 148.391 197.431 148.247 197.548 148.126 cv
cp
196.616 155.961 mo
197.034 155.922 197.298 155.851 197.407 155.747 cv
197.517 155.644 197.571 155.363 197.571 154.906 cv
197.571 152.111 li
197.571 151.857 197.554 151.682 197.519 151.584 cv
197.46 151.424 197.337 151.344 197.149 151.344 cv
197.106 151.344 197.064 151.348 197.023 151.355 cv
196.982 151.363 196.864 151.395 196.669 151.449 cv
196.669 151.268 li
196.921 151.186 li
197.604 150.963 198.081 150.795 198.351 150.682 cv
198.46 150.635 198.53 150.611 198.562 150.611 cv
198.569 150.639 198.573 150.668 198.573 150.699 cv
198.573 154.906 li
198.573 155.352 198.627 155.631 198.734 155.744 cv
198.842 155.857 199.085 155.93 199.464 155.961 cv
199.464 156.125 li
196.616 156.125 li
196.616 155.961 li
cp
f
199.909 155.973 mo
200.214 155.945 200.417 155.895 200.519 155.82 cv
200.675 155.707 200.753 155.48 200.753 155.141 cv
200.753 152.111 li
200.753 151.822 200.715 151.633 200.639 151.543 cv
200.563 151.453 200.437 151.408 200.261 151.408 cv
200.179 151.408 200.117 151.412 200.076 151.42 cv
200.035 151.428 199.987 151.441 199.933 151.461 cv
199.933 151.256 li
200.354 151.115 li
200.507 151.064 200.757 150.973 201.104 150.84 cv
201.452 150.707 201.636 150.641 201.655 150.641 cv
201.675 150.641 201.687 150.65 201.69 150.67 cv
201.694 150.689 201.696 150.727 201.696 150.781 cv
201.696 151.572 li
202.083 151.221 202.417 150.978 202.698 150.843 cv
202.979 150.708 203.269 150.641 203.565 150.641 cv
203.968 150.641 204.288 150.777 204.526 151.051 cv
204.651 151.199 204.755 151.4 204.837 151.654 cv
205.126 151.361 205.378 151.145 205.593 151.004 cv
205.964 150.762 206.343 150.641 206.729 150.641 cv
207.358 150.641 207.778 150.896 207.989 151.408 cv
208.11 151.697 208.171 152.154 208.171 152.779 cv
208.171 155.211 li
208.171 155.488 208.232 155.677 208.355 155.776 cv
208.479 155.876 208.7 155.941 209.021 155.973 cv
209.021 156.125 li
206.378 156.125 li
206.378 155.961 li
206.718 155.93 206.941 155.861 207.049 155.756 cv
207.156 155.65 207.21 155.436 207.21 155.111 cv
207.21 152.586 li
207.21 152.207 207.169 151.928 207.087 151.748 cv
206.942 151.428 206.659 151.268 206.237 151.268 cv
205.983 151.268 205.731 151.352 205.481 151.52 cv
205.337 151.617 205.159 151.773 204.948 151.988 cv
204.948 154.988 li
204.948 155.305 205.004 155.545 205.115 155.709 cv
205.227 155.873 205.462 155.961 205.821 155.973 cv
205.821 156.125 li
203.132 156.125 li
203.132 155.973 li
203.503 155.926 203.739 155.836 203.841 155.703 cv
203.942 155.57 203.993 155.242 203.993 154.719 cv
203.993 153.082 li
203.993 152.481 203.954 152.068 203.876 151.842 cv
203.747 151.459 203.474 151.268 203.056 151.268 cv
202.817 151.268 202.583 151.333 202.353 151.464 cv
202.122 151.595 201.919 151.766 201.743 151.977 cv
201.743 155.182 li
201.743 155.479 201.795 155.684 201.898 155.797 cv
202.002 155.91 202.228 155.969 202.575 155.973 cv
202.575 156.125 li
199.909 156.125 li
199.909 155.973 li
cp
f
210.907 150.699 mo
210.907 154.449 li
210.907 154.715 210.944 154.928 211.019 155.088 cv
211.163 155.385 211.429 155.533 211.815 155.533 cv
212.081 155.533 212.341 155.445 212.595 155.27 cv
212.739 155.172 212.886 155.037 213.034 154.865 cv
213.034 151.654 li
213.034 151.354 212.976 151.156 212.858 151.063 cv
212.741 150.969 212.507 150.912 212.155 150.893 cv
212.155 150.699 li
214.048 150.699 li
214.048 154.824 li
214.048 155.09 214.096 155.272 214.191 155.372 cv
214.287 155.472 214.489 155.516 214.798 155.504 cv
214.798 155.668 li
214.583 155.727 214.425 155.771 214.323 155.8 cv
214.222 155.829 214.052 155.883 213.813 155.961 cv
213.712 155.996 213.489 156.08 213.146 156.213 cv
213.126 156.213 213.114 156.204 213.11 156.187 cv
213.106 156.169 213.104 156.148 213.104 156.125 cv
213.104 155.182 li
212.839 155.498 212.597 155.732 212.378 155.885 cv
212.046 156.119 211.694 156.236 211.323 156.236 cv
210.983 156.236 210.663 156.115 210.362 155.873 cv
210.058 155.634 209.905 155.233 209.905 154.67 cv
209.905 151.625 li
209.905 151.315 209.839 151.107 209.706 151.003 cv
209.62 150.937 209.437 150.891 209.155 150.863 cv
209.155 150.699 li
210.907 150.699 li
cp
f
215.243 155.973 mo
215.548 155.945 215.751 155.895 215.853 155.82 cv
216.009 155.707 216.087 155.48 216.087 155.141 cv
216.087 152.111 li
216.087 151.822 216.049 151.633 215.973 151.543 cv
215.896 151.453 215.771 151.408 215.595 151.408 cv
215.513 151.408 215.451 151.412 215.41 151.42 cv
215.369 151.428 215.321 151.441 215.267 151.461 cv
215.267 151.256 li
215.688 151.115 li
215.841 151.064 216.091 150.973 216.438 150.84 cv
216.786 150.707 216.97 150.641 216.989 150.641 cv
217.009 150.641 217.021 150.65 217.024 150.67 cv
217.028 150.689 217.03 150.727 217.03 150.781 cv
217.03 151.572 li
217.417 151.221 217.751 150.978 218.032 150.843 cv
218.313 150.708 218.603 150.641 218.899 150.641 cv
219.302 150.641 219.622 150.777 219.86 151.051 cv
219.985 151.199 220.089 151.4 220.171 151.654 cv
220.46 151.361 220.712 151.145 220.927 151.004 cv
221.298 150.762 221.677 150.641 222.063 150.641 cv
222.692 150.641 223.112 150.896 223.323 151.408 cv
223.444 151.697 223.505 152.154 223.505 152.779 cv
223.505 155.211 li
223.505 155.488 223.566 155.677 223.689 155.776 cv
223.813 155.876 224.034 155.941 224.354 155.973 cv
224.354 156.125 li
221.712 156.125 li
221.712 155.961 li
222.052 155.93 222.275 155.861 222.383 155.756 cv
222.49 155.65 222.544 155.436 222.544 155.111 cv
222.544 152.586 li
222.544 152.207 222.503 151.928 222.421 151.748 cv
222.276 151.428 221.993 151.268 221.571 151.268 cv
221.317 151.268 221.065 151.352 220.815 151.52 cv
220.671 151.617 220.493 151.773 220.282 151.988 cv
220.282 154.988 li
220.282 155.305 220.338 155.545 220.449 155.709 cv
220.561 155.873 220.796 155.961 221.155 155.973 cv
221.155 156.125 li
218.466 156.125 li
218.466 155.973 li
218.837 155.926 219.073 155.836 219.175 155.703 cv
219.276 155.57 219.327 155.242 219.327 154.719 cv
219.327 153.082 li
219.327 152.481 219.288 152.068 219.21 151.842 cv
219.081 151.459 218.808 151.268 218.39 151.268 cv
218.151 151.268 217.917 151.333 217.687 151.464 cv
217.456 151.595 217.253 151.766 217.077 151.977 cv
217.077 155.182 li
217.077 155.479 217.129 155.684 217.232 155.797 cv
217.336 155.91 217.562 155.969 217.909 155.973 cv
217.909 156.125 li
215.243 156.125 li
215.243 155.973 li
cp
f
179.159 162.039 mo
179.268 161.927 179.402 161.87 179.562 161.87 cv
179.718 161.87 179.852 161.926 179.962 162.037 cv
180.073 162.147 180.128 162.283 180.128 162.442 cv
180.128 162.599 180.073 162.732 179.962 162.843 cv
179.852 162.954 179.718 163.009 179.562 163.009 cv
179.402 163.009 179.268 162.954 179.159 162.843 cv
179.05 162.732 178.995 162.599 178.995 162.442 cv
178.995 162.286 179.05 162.152 179.159 162.039 cv
cp
178.292 169.359 mo
178.681 169.322 178.926 169.256 179.028 169.159 cv
179.129 169.063 179.181 168.801 179.181 168.374 cv
179.181 165.762 li
179.181 165.525 179.164 165.361 179.131 165.27 cv
179.077 165.12 178.962 165.045 178.788 165.045 cv
178.748 165.045 178.709 165.049 178.671 165.056 cv
178.633 165.063 178.523 165.093 178.342 165.144 cv
178.342 164.974 li
178.576 164.897 li
179.211 164.689 179.654 164.533 179.905 164.427 cv
180.007 164.383 180.072 164.361 180.101 164.361 cv
180.108 164.387 180.112 164.414 180.112 164.443 cv
180.112 168.374 li
180.112 168.79 180.162 169.051 180.262 169.156 cv
180.362 169.262 180.588 169.33 180.94 169.359 cv
180.94 169.512 li
178.292 169.512 li
178.292 169.359 li
cp
f
183.017 164.991 mo
182.653 165.323 182.471 165.896 182.471 166.709 cv
182.471 167.359 182.617 167.965 182.91 168.527 cv
183.203 169.089 183.609 169.37 184.13 169.37 cv
184.537 169.37 184.851 169.182 185.071 168.806 cv
185.292 168.43 185.401 167.938 185.401 167.328 cv
185.401 166.697 185.261 166.102 184.981 165.543 cv
184.701 164.985 184.295 164.706 183.764 164.706 cv
183.477 164.706 183.228 164.801 183.017 164.991 cv
cp
182.146 165.13 mo
182.606 164.628 183.197 164.377 183.92 164.377 cv
184.639 164.377 185.234 164.615 185.707 165.089 cv
186.178 165.563 186.415 166.195 186.415 166.983 cv
186.415 167.709 186.186 168.341 185.728 168.877 cv
185.271 169.414 184.679 169.682 183.953 169.682 cv
183.255 169.682 182.665 169.425 182.182 168.91 cv
181.699 168.396 181.458 167.75 181.458 166.972 cv
181.458 166.246 181.687 165.632 182.146 165.13 cv
cp
f
186.954 169.359 mo
187.211 169.326 187.392 169.261 187.496 169.165 cv
187.599 169.068 187.651 168.852 187.651 168.516 cv
187.651 165.735 li
187.651 165.503 187.629 165.34 187.585 165.246 cv
187.516 165.108 187.375 165.04 187.161 165.04 cv
187.128 165.04 187.094 165.042 187.06 165.045 cv
187.025 165.049 186.982 165.054 186.932 165.062 cv
186.932 164.87 li
187.081 164.826 187.433 164.713 187.988 164.531 cv
188.5 164.361 li
188.526 164.361 188.542 164.37 188.547 164.388 cv
188.552 164.407 188.555 164.432 188.555 164.465 cv
188.555 165.27 li
188.889 164.956 189.149 164.741 189.338 164.624 cv
189.621 164.445 189.914 164.355 190.219 164.355 cv
190.465 164.355 190.69 164.427 190.893 164.569 cv
191.284 164.846 191.48 165.341 191.48 166.053 cv
191.48 168.609 li
191.48 168.872 191.532 169.062 191.637 169.178 cv
191.741 169.295 191.916 169.355 192.161 169.359 cv
192.161 169.512 li
189.835 169.512 li
189.835 169.359 li
190.1 169.322 190.285 169.249 190.391 169.137 cv
190.496 169.026 190.549 168.784 190.549 168.412 cv
190.549 166.074 li
190.549 165.761 190.491 165.5 190.375 165.294 cv
190.26 165.088 190.047 164.985 189.736 164.985 cv
189.523 164.985 189.307 165.058 189.086 165.204 cv
188.963 165.288 188.805 165.427 188.609 165.62 cv
188.609 168.686 li
188.609 168.948 188.667 169.125 188.784 169.214 cv
188.9 169.303 189.083 169.352 189.334 169.359 cv
189.334 169.512 li
186.954 169.512 li
186.954 169.359 li
cp
f
193.414 162.039 mo
193.523 161.927 193.657 161.87 193.817 161.87 cv
193.973 161.87 194.107 161.926 194.218 162.037 cv
194.328 162.147 194.384 162.283 194.384 162.442 cv
194.384 162.599 194.328 162.732 194.218 162.843 cv
194.107 162.954 193.973 163.009 193.817 163.009 cv
193.657 163.009 193.523 162.954 193.414 162.843 cv
193.305 162.732 193.25 162.599 193.25 162.442 cv
193.25 162.286 193.305 162.152 193.414 162.039 cv
cp
192.548 169.359 mo
192.937 169.322 193.182 169.256 193.283 169.159 cv
193.385 169.063 193.436 168.801 193.436 168.374 cv
193.436 165.762 li
193.436 165.525 193.419 165.361 193.387 165.27 cv
193.333 165.12 193.218 165.045 193.043 165.045 cv
193.003 165.045 192.965 165.049 192.927 165.056 cv
192.888 165.063 192.778 165.093 192.597 165.144 cv
192.597 164.974 li
192.831 164.897 li
193.467 164.689 193.91 164.533 194.16 164.427 cv
194.262 164.383 194.327 164.361 194.356 164.361 cv
194.364 164.387 194.367 164.414 194.367 164.443 cv
194.367 168.374 li
194.367 168.79 194.417 169.051 194.517 169.156 cv
194.617 169.262 194.843 169.33 195.195 169.359 cv
195.195 169.512 li
192.548 169.512 li
192.548 169.359 li
cp
f
199.945 164.481 mo
199.945 164.613 li
196.922 169.167 li
198.464 169.167 li
198.998 169.167 199.335 169.099 199.477 168.962 cv
199.619 168.825 199.758 168.49 199.896 167.958 cv
200.087 167.996 li
199.935 169.512 li
195.713 169.512 li
195.713 169.386 li
198.692 164.815 li
197.233 164.815 li
196.84 164.815 196.584 164.883 196.465 165.018 cv
196.345 165.153 196.261 165.416 196.214 165.806 cv
196.023 165.806 li
196.04 164.481 li
199.945 164.481 li
cp
f
203.579 166.479 mo
203.161 166.618 202.816 166.771 202.543 166.939 cv
202.021 167.264 201.759 167.633 201.759 168.045 cv
201.759 168.377 201.868 168.622 202.086 168.779 cv
202.228 168.881 202.385 168.932 202.56 168.932 cv
202.799 168.932 203.029 168.864 203.249 168.729 cv
203.468 168.594 203.579 168.423 203.579 168.215 cv
203.579 166.479 li
cp
201.579 167.098 mo
201.913 166.879 202.58 166.582 203.579 166.206 cv
203.579 165.74 li
203.579 165.368 203.542 165.109 203.469 164.963 cv
203.346 164.719 203.09 164.596 202.701 164.596 cv
202.516 164.596 202.34 164.644 202.173 164.739 cv
202.006 164.837 201.922 164.972 201.922 165.144 cv
201.922 165.188 201.932 165.262 201.95 165.366 cv
201.968 165.47 201.977 165.536 201.977 165.565 cv
201.977 165.77 201.91 165.912 201.775 165.992 cv
201.699 166.04 201.608 166.063 201.503 166.063 cv
201.339 166.063 201.214 166.01 201.127 165.902 cv
201.04 165.794 200.997 165.675 200.997 165.543 cv
200.997 165.288 201.153 165.021 201.468 164.741 cv
201.782 164.462 202.242 164.323 202.849 164.323 cv
203.553 164.323 204.03 164.553 204.281 165.012 cv
204.416 165.264 204.482 165.631 204.482 166.113 cv
204.482 168.308 li
204.482 168.52 204.497 168.666 204.526 168.746 cv
204.573 168.888 204.671 168.959 204.82 168.959 cv
204.904 168.959 204.973 168.947 205.027 168.921 cv
205.082 168.896 205.176 168.833 205.311 168.735 cv
205.311 169.02 li
205.194 169.162 205.069 169.279 204.935 169.37 cv
204.731 169.509 204.524 169.578 204.314 169.578 cv
204.067 169.578 203.888 169.498 203.777 169.337 cv
203.667 169.176 203.605 168.985 203.595 168.762 cv
203.319 169.003 203.083 169.182 202.887 169.299 cv
202.556 169.496 202.242 169.594 201.944 169.594 cv
201.632 169.594 201.361 169.484 201.133 169.263 cv
200.904 169.042 200.79 168.762 200.79 168.423 cv
200.79 167.894 201.053 167.452 201.579 167.098 cv
cp
f
208.17 164.465 mo
208.17 164.859 li
207.059 164.859 li
207.048 168.012 li
207.048 168.29 207.072 168.5 207.119 168.642 cv
207.207 168.894 207.377 169.02 207.631 169.02 cv
207.762 169.02 207.875 168.989 207.972 168.926 cv
208.068 168.864 208.178 168.766 208.301 168.631 cv
208.443 168.751 li
208.323 168.916 li
208.134 169.171 207.935 169.352 207.724 169.458 cv
207.513 169.563 207.31 169.616 207.114 169.616 cv
206.685 169.616 206.395 169.425 206.242 169.042 cv
206.159 168.833 206.117 168.545 206.117 168.176 cv
206.117 164.859 li
205.523 164.859 li
205.505 164.848 205.491 164.837 205.482 164.826 cv
205.473 164.815 205.469 164.801 205.469 164.783 cv
205.469 164.746 205.477 164.718 205.493 164.698 cv
205.51 164.678 205.562 164.631 205.648 164.558 cv
205.899 164.35 206.08 164.181 206.19 164.052 cv
206.301 163.922 206.562 163.58 206.972 163.025 cv
207.019 163.025 207.047 163.029 207.057 163.036 cv
207.065 163.043 207.07 163.071 207.07 163.118 cv
207.07 164.465 li
208.17 164.465 li
cp
f
209.516 162.039 mo
209.625 161.927 209.759 161.87 209.919 161.87 cv
210.075 161.87 210.209 161.926 210.32 162.037 cv
210.43 162.147 210.486 162.283 210.486 162.442 cv
210.486 162.599 210.43 162.732 210.32 162.843 cv
210.209 162.954 210.075 163.009 209.919 163.009 cv
209.759 163.009 209.625 162.954 209.516 162.843 cv
209.407 162.732 209.353 162.599 209.353 162.442 cv
209.353 162.286 209.407 162.152 209.516 162.039 cv
cp
208.65 169.359 mo
209.039 169.322 209.284 169.256 209.385 169.159 cv
209.487 169.063 209.538 168.801 209.538 168.374 cv
209.538 165.762 li
209.538 165.525 209.521 165.361 209.489 165.27 cv
209.435 165.12 209.32 165.045 209.146 165.045 cv
209.105 165.045 209.067 165.049 209.029 165.056 cv
208.99 165.063 208.88 165.093 208.699 165.144 cv
208.699 164.974 li
208.933 164.897 li
209.569 164.689 210.012 164.533 210.262 164.427 cv
210.364 164.383 210.429 164.361 210.458 164.361 cv
210.466 164.387 210.469 164.414 210.469 164.443 cv
210.469 168.374 li
210.469 168.79 210.519 169.051 210.619 169.156 cv
210.719 169.262 210.945 169.33 211.297 169.359 cv
211.297 169.512 li
208.65 169.512 li
208.65 169.359 li
cp
f
213.374 164.991 mo
213.01 165.323 212.828 165.896 212.828 166.709 cv
212.828 167.359 212.975 167.965 213.268 168.527 cv
213.561 169.089 213.967 169.37 214.487 169.37 cv
214.895 169.37 215.208 169.182 215.429 168.806 cv
215.649 168.43 215.759 167.938 215.759 167.328 cv
215.759 166.697 215.619 166.102 215.338 165.543 cv
215.059 164.985 214.653 164.706 214.122 164.706 cv
213.834 164.706 213.585 164.801 213.374 164.991 cv
cp
212.504 165.13 mo
212.963 164.628 213.555 164.377 214.277 164.377 cv
214.996 164.377 215.592 164.615 216.064 165.089 cv
216.536 165.563 216.772 166.195 216.772 166.983 cv
216.772 167.709 216.543 168.341 216.085 168.877 cv
215.628 169.414 215.036 169.682 214.31 169.682 cv
213.613 169.682 213.022 169.425 212.54 168.91 cv
212.057 168.396 211.815 167.75 211.815 166.972 cv
211.815 166.246 212.044 165.632 212.504 165.13 cv
cp
f
217.311 169.359 mo
217.569 169.326 217.75 169.261 217.853 169.165 cv
217.957 169.068 218.008 168.852 218.008 168.516 cv
218.008 165.735 li
218.008 165.503 217.986 165.34 217.943 165.246 cv
217.874 165.108 217.732 165.04 217.518 165.04 cv
217.485 165.04 217.452 165.042 217.417 165.045 cv
217.383 165.049 217.34 165.054 217.289 165.062 cv
217.289 164.87 li
217.438 164.826 217.79 164.713 218.346 164.531 cv
218.858 164.361 li
218.883 164.361 218.899 164.37 218.904 164.388 cv
218.91 164.407 218.913 164.432 218.913 164.465 cv
218.913 165.27 li
219.246 164.956 219.507 164.741 219.695 164.624 cv
219.978 164.445 220.271 164.355 220.576 164.355 cv
220.823 164.355 221.048 164.427 221.251 164.569 cv
221.642 164.846 221.837 165.341 221.837 166.053 cv
221.837 168.609 li
221.837 168.872 221.89 169.062 221.994 169.178 cv
222.099 169.295 222.273 169.355 222.519 169.359 cv
222.519 169.512 li
220.192 169.512 li
220.192 169.359 li
220.458 169.322 220.643 169.249 220.748 169.137 cv
220.854 169.026 220.906 168.784 220.906 168.412 cv
220.906 166.074 li
220.906 165.761 220.849 165.5 220.733 165.294 cv
220.617 165.088 220.404 164.985 220.094 164.985 cv
219.88 164.985 219.664 165.058 219.443 165.204 cv
219.321 165.288 219.162 165.427 218.967 165.62 cv
218.967 168.686 li
218.967 168.948 219.025 169.125 219.141 169.214 cv
219.257 169.303 219.441 169.352 219.691 169.359 cv
219.691 169.512 li
217.311 169.512 li
217.311 169.359 li
cp
f
384.958 139.382 mo
385.595 139.121 385.913 138.629 385.913 137.908 cv
385.913 137.214 385.628 136.74 385.058 136.487 cv
384.753 136.351 384.349 136.282 383.845 136.282 cv
383.505 136.282 383.297 136.307 383.221 136.355 cv
383.145 136.404 383.106 136.518 383.106 136.697 cv
383.106 139.651 li
383.97 139.62 384.587 139.53 384.958 139.382 cv
cp
380.856 143.542 mo
381.317 143.499 381.604 143.41 381.718 143.274 cv
381.831 143.138 381.888 142.821 381.888 142.323 cv
381.888 137.126 li
381.888 136.704 381.824 136.428 381.697 136.297 cv
381.57 136.166 381.29 136.083 380.856 136.048 cv
380.856 135.825 li
384.179 135.825 li
384.87 135.825 385.446 135.913 385.907 136.088 cv
386.782 136.42 387.22 137.03 387.22 137.92 cv
387.22 138.517 387.025 138.975 386.637 139.295 cv
386.248 139.615 385.72 139.825 385.052 139.927 cv
387.524 142.972 li
387.677 143.158 387.829 143.294 387.981 143.379 cv
388.134 143.464 388.329 143.519 388.567 143.542 cv
388.567 143.765 li
386.635 143.765 li
383.633 140.067 li
383.106 140.097 li
383.106 142.462 li
383.106 142.906 383.174 143.187 383.309 143.306 cv
383.443 143.424 383.737 143.503 384.19 143.542 cv
384.19 143.765 li
380.856 143.765 li
380.856 143.542 li
cp
0 1 0 0 cmyk
f
392.165 140.519 mo
391.716 140.667 391.345 140.831 391.052 141.011 cv
390.489 141.358 390.208 141.753 390.208 142.194 cv
390.208 142.55 390.325 142.812 390.56 142.979 cv
390.712 143.089 390.882 143.144 391.069 143.144 cv
391.327 143.144 391.574 143.071 391.811 142.927 cv
392.047 142.782 392.165 142.599 392.165 142.376 cv
392.165 140.519 li
cp
390.015 141.181 mo
390.374 140.946 391.091 140.628 392.165 140.226 cv
392.165 139.728 li
392.165 139.329 392.126 139.052 392.048 138.896 cv
391.915 138.634 391.64 138.503 391.222 138.503 cv
391.022 138.503 390.833 138.554 390.653 138.655 cv
390.474 138.761 390.384 138.905 390.384 139.089 cv
390.384 139.136 390.394 139.215 390.413 139.326 cv
390.433 139.438 390.442 139.509 390.442 139.54 cv
390.442 139.759 390.37 139.911 390.226 139.997 cv
390.144 140.048 390.046 140.073 389.933 140.073 cv
389.757 140.073 389.622 140.016 389.528 139.9 cv
389.435 139.785 389.388 139.657 389.388 139.517 cv
389.388 139.243 389.557 138.957 389.895 138.658 cv
390.232 138.359 390.728 138.21 391.38 138.21 cv
392.138 138.21 392.651 138.456 392.921 138.948 cv
393.065 139.218 393.138 139.61 393.138 140.126 cv
393.138 142.476 li
393.138 142.702 393.153 142.858 393.185 142.944 cv
393.235 143.097 393.341 143.173 393.501 143.173 cv
393.591 143.173 393.665 143.159 393.724 143.132 cv
393.782 143.104 393.884 143.038 394.028 142.933 cv
394.028 143.237 li
393.903 143.39 393.769 143.515 393.624 143.612 cv
393.405 143.761 393.183 143.835 392.956 143.835 cv
392.69 143.835 392.498 143.749 392.379 143.577 cv
392.26 143.405 392.194 143.2 392.183 142.962 cv
391.886 143.22 391.632 143.411 391.421 143.536 cv
391.065 143.747 390.728 143.853 390.407 143.853 cv
390.071 143.853 389.78 143.734 389.534 143.498 cv
389.288 143.262 389.165 142.962 389.165 142.599 cv
389.165 142.032 389.448 141.56 390.015 141.181 cv
cp
f
397.849 142.974 mo
398.036 142.794 398.13 142.624 398.13 142.464 cv
398.13 139.95 li
398.13 139.442 397.994 139.084 397.723 138.875 cv
397.451 138.666 397.187 138.562 396.929 138.562 cv
396.437 138.562 396.054 138.779 395.78 139.215 cv
395.507 139.65 395.37 140.187 395.37 140.823 cv
395.37 141.452 395.516 142.013 395.807 142.505 cv
396.098 142.997 396.532 143.243 397.11 143.243 cv
397.415 143.243 397.661 143.153 397.849 142.974 cv
cp
397.679 138.415 mo
397.835 138.497 397.985 138.61 398.13 138.755 cv
398.13 136.892 li
398.13 136.653 398.104 136.489 398.051 136.399 cv
397.998 136.31 397.872 136.265 397.673 136.265 cv
397.626 136.265 397.585 136.267 397.55 136.271 cv
397.515 136.274 397.437 136.282 397.315 136.294 cv
397.315 136.101 li
397.796 135.978 li
397.972 135.931 398.147 135.882 398.323 135.831 cv
398.499 135.78 398.653 135.731 398.786 135.685 cv
398.849 135.665 398.952 135.628 399.097 135.573 cv
399.132 135.585 li
399.12 136.2 li
399.116 136.423 399.112 136.652 399.108 136.889 cv
399.104 137.125 399.103 137.358 399.103 137.589 cv
399.091 142.376 li
399.091 142.63 399.122 142.808 399.185 142.909 cv
399.247 143.011 399.413 143.062 399.683 143.062 cv
399.726 143.062 399.769 143.061 399.812 143.059 cv
399.854 143.057 399.897 143.052 399.94 143.044 cv
399.94 143.237 li
399.917 143.245 399.634 143.343 399.091 143.53 cv
398.171 143.876 li
398.13 143.823 li
398.13 143.103 li
397.911 143.341 397.722 143.511 397.562 143.612 cv
397.276 143.788 396.946 143.876 396.571 143.876 cv
395.907 143.876 395.369 143.619 394.957 143.105 cv
394.545 142.592 394.339 141.997 394.339 141.321 cv
394.339 140.474 394.586 139.746 395.08 139.139 cv
395.574 138.531 396.179 138.228 396.894 138.228 cv
397.179 138.228 397.44 138.29 397.679 138.415 cv
cp
f
401.218 135.766 mo
401.335 135.646 401.479 135.585 401.651 135.585 cv
401.819 135.585 401.963 135.645 402.082 135.763 cv
402.201 135.881 402.261 136.026 402.261 136.197 cv
402.261 136.364 402.201 136.507 402.082 136.626 cv
401.963 136.745 401.819 136.804 401.651 136.804 cv
401.479 136.804 401.335 136.745 401.218 136.626 cv
401.101 136.507 401.042 136.364 401.042 136.197 cv
401.042 136.03 401.101 135.886 401.218 135.766 cv
cp
400.286 143.601 mo
400.704 143.562 400.968 143.49 401.077 143.387 cv
401.187 143.283 401.241 143.003 401.241 142.546 cv
401.241 139.751 li
401.241 139.497 401.224 139.321 401.188 139.224 cv
401.13 139.063 401.007 138.983 400.819 138.983 cv
400.776 138.983 400.734 138.987 400.693 138.995 cv
400.652 139.003 400.534 139.034 400.339 139.089 cv
400.339 138.907 li
400.591 138.825 li
401.274 138.603 401.751 138.435 402.021 138.321 cv
402.13 138.274 402.2 138.251 402.231 138.251 cv
402.239 138.278 402.243 138.308 402.243 138.339 cv
402.243 142.546 li
402.243 142.991 402.297 143.271 402.404 143.384 cv
402.512 143.497 402.755 143.569 403.134 143.601 cv
403.134 143.765 li
400.286 143.765 li
400.286 143.601 li
cp
f
406.825 140.519 mo
406.376 140.667 406.005 140.831 405.712 141.011 cv
405.149 141.358 404.868 141.753 404.868 142.194 cv
404.868 142.55 404.985 142.812 405.22 142.979 cv
405.372 143.089 405.542 143.144 405.729 143.144 cv
405.987 143.144 406.234 143.071 406.471 142.927 cv
406.707 142.782 406.825 142.599 406.825 142.376 cv
406.825 140.519 li
cp
404.675 141.181 mo
405.034 140.946 405.751 140.628 406.825 140.226 cv
406.825 139.728 li
406.825 139.329 406.786 139.052 406.708 138.896 cv
406.575 138.634 406.3 138.503 405.882 138.503 cv
405.683 138.503 405.493 138.554 405.313 138.655 cv
405.134 138.761 405.044 138.905 405.044 139.089 cv
405.044 139.136 405.054 139.215 405.073 139.326 cv
405.093 139.438 405.103 139.509 405.103 139.54 cv
405.103 139.759 405.03 139.911 404.886 139.997 cv
404.804 140.048 404.706 140.073 404.593 140.073 cv
404.417 140.073 404.282 140.016 404.188 139.9 cv
404.095 139.785 404.048 139.657 404.048 139.517 cv
404.048 139.243 404.217 138.957 404.555 138.658 cv
404.893 138.359 405.388 138.21 406.04 138.21 cv
406.798 138.21 407.312 138.456 407.581 138.948 cv
407.726 139.218 407.798 139.61 407.798 140.126 cv
407.798 142.476 li
407.798 142.702 407.813 142.858 407.845 142.944 cv
407.896 143.097 408.001 143.173 408.161 143.173 cv
408.251 143.173 408.325 143.159 408.384 143.132 cv
408.442 143.104 408.544 143.038 408.688 142.933 cv
408.688 143.237 li
408.563 143.39 408.429 143.515 408.284 143.612 cv
408.065 143.761 407.843 143.835 407.616 143.835 cv
407.351 143.835 407.158 143.749 407.039 143.577 cv
406.92 143.405 406.854 143.2 406.843 142.962 cv
406.546 143.22 406.292 143.411 406.081 143.536 cv
405.726 143.747 405.388 143.853 405.067 143.853 cv
404.731 143.853 404.44 143.734 404.194 143.498 cv
403.948 143.262 403.825 142.962 403.825 142.599 cv
403.825 142.032 404.108 141.56 404.675 141.181 cv
cp
f
411.765 138.362 mo
411.765 138.784 li
410.569 138.784 li
410.558 142.159 li
410.558 142.456 410.583 142.681 410.634 142.833 cv
410.728 143.103 410.911 143.237 411.185 143.237 cv
411.325 143.237 411.447 143.204 411.551 143.138 cv
411.654 143.071 411.772 142.966 411.905 142.821 cv
412.058 142.95 li
411.929 143.126 li
411.726 143.399 411.511 143.593 411.284 143.706 cv
411.058 143.819 410.839 143.876 410.628 143.876 cv
410.167 143.876 409.854 143.671 409.69 143.261 cv
409.601 143.038 409.556 142.729 409.556 142.335 cv
409.556 138.784 li
408.917 138.784 li
408.897 138.772 408.883 138.761 408.873 138.749 cv
408.863 138.737 408.858 138.722 408.858 138.702 cv
408.858 138.663 408.867 138.633 408.885 138.611 cv
408.902 138.59 408.958 138.54 409.052 138.462 cv
409.321 138.239 409.516 138.059 409.635 137.92 cv
409.754 137.781 410.034 137.415 410.476 136.821 cv
410.526 136.821 410.557 136.825 410.566 136.833 cv
410.576 136.841 410.581 136.87 410.581 136.921 cv
410.581 138.362 li
411.765 138.362 li
cp
f
413.212 135.766 mo
413.329 135.646 413.474 135.585 413.646 135.585 cv
413.813 135.585 413.957 135.645 414.076 135.763 cv
414.195 135.881 414.255 136.026 414.255 136.197 cv
414.255 136.364 414.195 136.507 414.076 136.626 cv
413.957 136.745 413.813 136.804 413.646 136.804 cv
413.474 136.804 413.329 136.745 413.212 136.626 cv
413.095 136.507 413.036 136.364 413.036 136.197 cv
413.036 136.03 413.095 135.886 413.212 135.766 cv
cp
412.28 143.601 mo
412.698 143.562 412.962 143.49 413.071 143.387 cv
413.181 143.283 413.235 143.003 413.235 142.546 cv
413.235 139.751 li
413.235 139.497 413.218 139.321 413.183 139.224 cv
413.124 139.063 413.001 138.983 412.813 138.983 cv
412.771 138.983 412.729 138.987 412.688 138.995 cv
412.646 139.003 412.528 139.034 412.333 139.089 cv
412.333 138.907 li
412.585 138.825 li
413.269 138.603 413.745 138.435 414.015 138.321 cv
414.124 138.274 414.194 138.251 414.226 138.251 cv
414.233 138.278 414.237 138.308 414.237 138.339 cv
414.237 142.546 li
414.237 142.991 414.291 143.271 414.398 143.384 cv
414.506 143.497 414.749 143.569 415.128 143.601 cv
415.128 143.765 li
412.28 143.765 li
412.28 143.601 li
cp
f
417.958 138.321 mo
417.958 138.503 li
417.755 138.526 417.611 138.558 417.527 138.597 cv
417.443 138.636 417.401 138.722 417.401 138.854 cv
417.401 138.917 417.41 138.977 417.428 139.033 cv
417.445 139.09 417.476 139.173 417.519 139.282 cv
418.749 142.226 li
419.792 139.628 li
419.843 139.499 419.891 139.364 419.936 139.224 cv
419.98 139.083 420.003 138.976 420.003 138.901 cv
420.003 138.749 419.931 138.64 419.786 138.573 cv
419.7 138.538 419.583 138.515 419.435 138.503 cv
419.435 138.321 li
421.099 138.321 li
421.099 138.503 li
420.907 138.519 420.77 138.582 420.686 138.693 cv
420.602 138.805 420.479 139.062 420.319 139.464 cv
418.626 143.683 li
418.595 143.757 418.569 143.808 418.55 143.835 cv
418.53 143.862 418.503 143.876 418.468 143.876 cv
418.429 143.876 418.396 143.854 418.368 143.809 cv
418.341 143.764 418.312 143.708 418.28 143.642 cv
416.487 139.353 li
416.343 139.005 416.188 138.769 416.024 138.644 cv
415.927 138.573 415.784 138.526 415.597 138.503 cv
415.597 138.321 li
417.958 138.321 li
cp
f
422.769 139.288 mo
422.644 139.499 422.554 139.765 422.499 140.085 cv
424.972 140.085 li
424.929 139.694 424.854 139.403 424.749 139.212 cv
424.558 138.868 424.237 138.696 423.788 138.696 cv
423.343 138.696 423.003 138.894 422.769 139.288 cv
cp
425.575 138.84 mo
425.989 139.221 426.196 139.761 426.196 140.46 cv
422.476 140.46 li
422.515 141.364 422.72 142.023 423.091 142.436 cv
423.462 142.849 423.901 143.056 424.409 143.056 cv
424.819 143.056 425.165 142.949 425.446 142.734 cv
425.728 142.52 425.987 142.216 426.226 141.822 cv
426.431 141.892 li
426.271 142.389 425.971 142.849 425.531 143.271 cv
425.092 143.694 424.554 143.905 423.917 143.905 cv
423.183 143.905 422.615 143.628 422.215 143.073 cv
421.814 142.519 421.614 141.88 421.614 141.157 cv
421.614 140.372 421.847 139.694 422.312 139.124 cv
422.776 138.554 423.382 138.269 424.128 138.269 cv
424.679 138.269 425.161 138.459 425.575 138.84 cv
cp
f
389.625 155.601 mo
389.988 155.565 390.234 155.492 390.363 155.381 cv
390.492 155.27 390.557 155.052 390.557 154.728 cv
390.557 149.003 li
390.557 148.745 390.535 148.567 390.492 148.47 cv
390.414 148.306 390.256 148.224 390.018 148.224 cv
389.963 148.224 389.903 148.229 389.839 148.241 cv
389.774 148.253 389.693 148.271 389.596 148.294 cv
389.596 148.101 li
390.123 147.96 390.758 147.772 391.5 147.538 cv
391.527 147.538 391.544 147.55 391.55 147.573 cv
391.556 147.597 391.559 147.647 391.559 147.726 cv
391.559 154.751 li
391.559 155.091 391.617 155.311 391.734 155.41 cv
391.852 155.51 392.094 155.573 392.461 155.601 cv
392.461 155.765 li
389.625 155.765 li
389.625 155.601 li
cp
f
394.694 150.925 mo
394.303 151.28 394.107 151.894 394.107 152.765 cv
394.107 153.46 394.265 154.108 394.58 154.71 cv
394.895 155.312 395.332 155.612 395.892 155.612 cv
396.33 155.612 396.668 155.411 396.904 155.009 cv
397.142 154.606 397.26 154.079 397.26 153.427 cv
397.26 152.751 397.109 152.114 396.808 151.517 cv
396.507 150.919 396.07 150.62 395.499 150.62 cv
395.189 150.62 394.922 150.722 394.694 150.925 cv
cp
393.759 151.074 mo
394.253 150.537 394.889 150.269 395.666 150.269 cv
396.439 150.269 397.08 150.522 397.588 151.03 cv
398.096 151.538 398.35 152.214 398.35 153.058 cv
398.35 153.835 398.104 154.511 397.611 155.085 cv
397.119 155.659 396.482 155.946 395.701 155.946 cv
394.951 155.946 394.316 155.671 393.797 155.12 cv
393.277 154.569 393.018 153.878 393.018 153.046 cv
393.018 152.269 393.265 151.611 393.759 151.074 cv
cp
f
399.34 153.919 mo
399.533 153.919 li
399.623 154.364 399.744 154.706 399.896 154.944 cv
400.168 155.382 400.567 155.601 401.094 155.601 cv
401.387 155.601 401.617 155.52 401.787 155.357 cv
401.956 155.195 402.041 154.985 402.041 154.728 cv
402.041 154.563 401.992 154.405 401.895 154.253 cv
401.797 154.101 401.625 153.952 401.379 153.808 cv
400.723 153.433 li
400.242 153.175 399.889 152.915 399.662 152.653 cv
399.436 152.392 399.322 152.083 399.322 151.728 cv
399.322 151.29 399.479 150.931 399.791 150.649 cv
400.104 150.368 400.496 150.228 400.969 150.228 cv
401.176 150.228 401.403 150.267 401.651 150.345 cv
401.899 150.423 402.039 150.462 402.07 150.462 cv
402.141 150.462 402.191 150.452 402.223 150.433 cv
402.254 150.413 402.281 150.382 402.305 150.339 cv
402.445 150.339 li
402.486 151.974 li
402.305 151.974 li
402.227 151.595 402.121 151.3 401.988 151.089 cv
401.746 150.698 401.396 150.503 400.939 150.503 cv
400.666 150.503 400.451 150.587 400.295 150.755 cv
400.139 150.923 400.061 151.12 400.061 151.347 cv
400.061 151.706 400.33 152.026 400.869 152.308 cv
401.643 152.724 li
402.475 153.177 402.891 153.704 402.891 154.306 cv
402.891 154.767 402.718 155.144 402.373 155.437 cv
402.027 155.729 401.576 155.876 401.019 155.876 cv
400.785 155.876 400.52 155.837 400.224 155.759 cv
399.927 155.681 399.752 155.642 399.697 155.642 cv
399.65 155.642 399.609 155.658 399.574 155.691 cv
399.539 155.725 399.512 155.765 399.492 155.812 cv
399.34 155.812 li
399.34 153.919 li
cp
f
404.01 153.919 mo
404.203 153.919 li
404.293 154.364 404.414 154.706 404.565 154.944 cv
404.838 155.382 405.237 155.601 405.764 155.601 cv
406.057 155.601 406.287 155.52 406.457 155.357 cv
406.626 155.195 406.711 154.985 406.711 154.728 cv
406.711 154.563 406.662 154.405 406.564 154.253 cv
406.467 154.101 406.295 153.952 406.049 153.808 cv
405.393 153.433 li
404.912 153.175 404.559 152.915 404.332 152.653 cv
404.105 152.392 403.992 152.083 403.992 151.728 cv
403.992 151.29 404.148 150.931 404.461 150.649 cv
404.773 150.368 405.166 150.228 405.639 150.228 cv
405.846 150.228 406.073 150.267 406.321 150.345 cv
406.569 150.423 406.709 150.462 406.74 150.462 cv
406.811 150.462 406.861 150.452 406.893 150.433 cv
406.924 150.413 406.951 150.382 406.975 150.339 cv
407.115 150.339 li
407.156 151.974 li
406.975 151.974 li
406.896 151.595 406.791 151.3 406.658 151.089 cv
406.416 150.698 406.066 150.503 405.609 150.503 cv
405.336 150.503 405.121 150.587 404.965 150.755 cv
404.809 150.923 404.73 151.12 404.73 151.347 cv
404.73 151.706 405 152.026 405.539 152.308 cv
406.313 152.724 li
407.145 153.177 407.561 153.704 407.561 154.306 cv
407.561 154.767 407.388 155.144 407.043 155.437 cv
406.697 155.729 406.246 155.876 405.688 155.876 cv
405.455 155.876 405.189 155.837 404.894 155.759 cv
404.597 155.681 404.422 155.642 404.367 155.642 cv
404.32 155.642 404.279 155.658 404.244 155.691 cv
404.209 155.725 404.182 155.765 404.162 155.812 cv
404.01 155.812 li
404.01 153.919 li
cp
f
409.441 151.288 mo
409.316 151.499 409.227 151.765 409.172 152.085 cv
411.645 152.085 li
411.602 151.694 411.527 151.403 411.422 151.212 cv
411.23 150.868 410.91 150.696 410.461 150.696 cv
410.016 150.696 409.676 150.894 409.441 151.288 cv
cp
412.248 150.84 mo
412.662 151.221 412.869 151.761 412.869 152.46 cv
409.148 152.46 li
409.188 153.364 409.393 154.023 409.764 154.436 cv
410.135 154.849 410.574 155.056 411.082 155.056 cv
411.492 155.056 411.838 154.949 412.119 154.734 cv
412.4 154.52 412.66 154.216 412.898 153.822 cv
413.104 153.892 li
412.943 154.389 412.644 154.849 412.204 155.271 cv
411.765 155.694 411.227 155.905 410.59 155.905 cv
409.855 155.905 409.288 155.628 408.888 155.073 cv
408.487 154.519 408.287 153.88 408.287 153.157 cv
408.287 152.372 408.52 151.694 408.984 151.124 cv
409.449 150.554 410.055 150.269 410.801 150.269 cv
411.352 150.269 411.834 150.459 412.248 150.84 cv
cp
f
414.006 153.919 mo
414.199 153.919 li
414.289 154.364 414.41 154.706 414.562 154.944 cv
414.834 155.382 415.233 155.601 415.76 155.601 cv
416.053 155.601 416.283 155.52 416.453 155.357 cv
416.622 155.195 416.707 154.985 416.707 154.728 cv
416.707 154.563 416.658 154.405 416.561 154.253 cv
416.463 154.101 416.291 153.952 416.045 153.808 cv
415.389 153.433 li
414.908 153.175 414.555 152.915 414.328 152.653 cv
414.102 152.392 413.988 152.083 413.988 151.728 cv
413.988 151.29 414.145 150.931 414.457 150.649 cv
414.77 150.368 415.162 150.228 415.635 150.228 cv
415.842 150.228 416.069 150.267 416.317 150.345 cv
416.565 150.423 416.705 150.462 416.736 150.462 cv
416.807 150.462 416.857 150.452 416.889 150.433 cv
416.92 150.413 416.947 150.382 416.971 150.339 cv
417.111 150.339 li
417.152 151.974 li
416.971 151.974 li
416.893 151.595 416.787 151.3 416.654 151.089 cv
416.412 150.698 416.063 150.503 415.605 150.503 cv
415.332 150.503 415.117 150.587 414.961 150.755 cv
414.805 150.923 414.727 151.12 414.727 151.347 cv
414.727 151.706 414.996 152.026 415.535 152.308 cv
416.309 152.724 li
417.141 153.177 417.557 153.704 417.557 154.306 cv
417.557 154.767 417.384 155.144 417.039 155.437 cv
416.693 155.729 416.242 155.876 415.685 155.876 cv
415.451 155.876 415.186 155.837 414.89 155.759 cv
414.593 155.681 414.418 155.642 414.363 155.642 cv
414.316 155.642 414.275 155.658 414.24 155.691 cv
414.205 155.725 414.178 155.765 414.158 155.812 cv
414.006 155.812 li
414.006 153.919 li
cp
f
68.3979 86.6826 mo
67.0229 83.3779 li
65.6416 86.6826 li
68.3979 86.6826 li
cp
63.23 89.7646 mo
63.23 89.542 li
63.5386 89.5073 63.77 89.3911 63.9243 89.1938 cv
64.0786 88.9961 64.3433 88.4561 64.7178 87.5737 cv
67.2178 81.6846 li
67.4565 81.6846 li
70.4468 88.4873 li
70.646 88.938 70.8047 89.2168 70.9243 89.3237 cv
71.0435 89.4302 71.2437 89.5029 71.5249 89.542 cv
71.5249 89.7646 li
68.4731 89.7646 li
68.4731 89.542 li
68.8237 89.5107 69.0498 89.4731 69.1514 89.4282 cv
69.2529 89.3838 69.3037 89.2739 69.3037 89.0986 cv
69.3037 89.0405 69.2842 88.9375 69.2451 88.79 cv
69.2061 88.6421 69.1514 88.4863 69.0811 88.3232 cv
68.6006 87.1689 li
65.438 87.1689 li
65.1265 87.9541 64.9404 88.4331 64.8799 88.606 cv
64.8193 88.7793 64.7891 88.916 64.7891 89.0171 cv
64.7891 89.2192 64.8711 89.3594 65.0347 89.437 cv
65.1362 89.4839 65.3271 89.5186 65.6079 89.542 cv
65.6079 89.7646 li
63.23 89.7646 li
cp
0 0 0 1 cmyk
f
71.936 89.6006 mo
72.2134 89.5654 72.4077 89.4961 72.519 89.3926 cv
72.6304 89.2891 72.686 89.0576 72.686 88.6982 cv
72.686 85.7217 li
72.686 85.4736 72.6626 85.2993 72.6157 85.1987 cv
72.5415 85.0513 72.3892 84.9775 72.1587 84.9775 cv
72.1235 84.9775 72.0874 84.9795 72.0503 84.9834 cv
72.0132 84.9873 71.9673 84.9932 71.9126 85.001 cv
71.9126 84.7959 li
72.0728 84.749 72.4517 84.6279 73.0493 84.4326 cv
73.6001 84.251 li
73.6274 84.251 73.644 84.2607 73.6499 84.2803 cv
73.6558 84.2998 73.6587 84.3271 73.6587 84.3623 cv
73.6587 85.2236 li
74.0176 84.8877 74.2983 84.6572 74.501 84.5322 cv
74.8052 84.3408 75.1206 84.2451 75.4482 84.2451 cv
75.7134 84.2451 75.9551 84.3213 76.1733 84.4736 cv
76.5947 84.7705 76.8052 85.2998 76.8052 86.0615 cv
76.8052 88.7979 li
76.8052 89.0791 76.8613 89.2822 76.9736 89.4072 cv
77.0859 89.5322 77.2739 89.5967 77.5376 89.6006 cv
77.5376 89.7646 li
75.0356 89.7646 li
75.0356 89.6006 li
75.3208 89.5615 75.52 89.4824 75.6333 89.3633 cv
75.7466 89.2441 75.8032 88.9854 75.8032 88.5869 cv
75.8032 86.085 li
75.8032 85.749 75.7412 85.4707 75.6167 85.25 cv
75.4922 85.0293 75.2632 84.9189 74.9292 84.9189 cv
74.7002 84.9189 74.4668 84.9971 74.23 85.1533 cv
74.0981 85.2432 73.9272 85.3916 73.7173 85.5986 cv
73.7173 88.8799 li
73.7173 89.1611 73.7798 89.3496 73.9048 89.4453 cv
74.0298 89.541 74.2271 89.5928 74.4966 89.6006 cv
74.4966 89.7646 li
71.936 89.7646 li
71.936 89.6006 li
cp
f
81.5161 88.9736 mo
81.7036 88.7939 81.7974 88.624 81.7974 88.4639 cv
81.7974 85.9502 li
81.7974 85.4424 81.6616 85.084 81.3901 84.875 cv
81.1187 84.666 80.854 84.5615 80.5962 84.5615 cv
80.104 84.5615 79.7212 84.7793 79.4478 85.2148 cv
79.1743 85.6504 79.0376 86.1865 79.0376 86.8232 cv
79.0376 87.4521 79.1831 88.0127 79.4741 88.5049 cv
79.7651 88.9971 80.1997 89.2432 80.7778 89.2432 cv
81.0825 89.2432 81.3286 89.1533 81.5161 88.9736 cv
cp
81.3462 84.415 mo
81.5024 84.4971 81.6528 84.6104 81.7974 84.7549 cv
81.7974 82.8916 li
81.7974 82.6533 81.771 82.4893 81.7183 82.3994 cv
81.6655 82.3096 81.5396 82.2646 81.3403 82.2646 cv
81.2935 82.2646 81.2524 82.2666 81.2173 82.2705 cv
81.1821 82.2744 81.104 82.2822 80.9829 82.2939 cv
80.9829 82.1006 li
81.4634 81.9775 li
81.6392 81.9307 81.8149 81.8818 81.9907 81.8311 cv
82.1665 81.7803 82.3208 81.7314 82.4536 81.6846 cv
82.5161 81.665 82.6196 81.6279 82.7642 81.5732 cv
82.7993 81.585 li
82.7876 82.2002 li
82.7837 82.4229 82.7798 82.6523 82.7759 82.8887 cv
82.772 83.125 82.77 83.3584 82.77 83.5889 cv
82.7583 88.376 li
82.7583 88.6299 82.7896 88.8076 82.8521 88.9092 cv
82.9146 89.0107 83.0806 89.0615 83.3501 89.0615 cv
83.3931 89.0615 83.436 89.0605 83.479 89.0586 cv
83.522 89.0566 83.5649 89.0518 83.6079 89.0439 cv
83.6079 89.2373 li
83.5845 89.2451 83.3013 89.3428 82.7583 89.5303 cv
81.8384 89.876 li
81.7974 89.8232 li
81.7974 89.1025 li
81.5786 89.3408 81.3892 89.5107 81.229 89.6123 cv
80.9438 89.7881 80.6138 89.876 80.2388 89.876 cv
79.5747 89.876 79.0366 89.6191 78.6245 89.1055 cv
78.2124 88.5918 78.0063 87.9971 78.0063 87.3213 cv
78.0063 86.4736 78.2534 85.7461 78.7476 85.1387 cv
79.2417 84.5313 79.8462 84.2275 80.561 84.2275 cv
80.8462 84.2275 81.1079 84.29 81.3462 84.415 cv
cp
f
85.1079 85.2881 mo
84.9829 85.499 84.8931 85.7646 84.8384 86.085 cv
87.311 86.085 li
87.2681 85.6943 87.1938 85.4033 87.0884 85.2119 cv
86.897 84.8682 86.5767 84.6963 86.1274 84.6963 cv
85.6821 84.6963 85.3423 84.8936 85.1079 85.2881 cv
cp
87.9146 84.8398 mo
88.3286 85.2207 88.5356 85.7607 88.5356 86.46 cv
84.8149 86.46 li
84.854 87.3643 85.0591 88.0229 85.4302 88.436 cv
85.8013 88.8491 86.2407 89.0557 86.7485 89.0557 cv
87.1587 89.0557 87.5044 88.9487 87.7856 88.7344 cv
88.0669 88.52 88.3267 88.2158 88.5649 87.8223 cv
88.77 87.8921 li
88.6099 88.3892 88.3101 88.8491 87.8706 89.2715 cv
87.4312 89.6938 86.8931 89.9053 86.2563 89.9053 cv
85.522 89.9053 84.9546 89.6279 84.5542 89.0732 cv
84.1538 88.5186 83.9536 87.8799 83.9536 87.1572 cv
83.9536 86.3721 84.186 85.6943 84.6509 85.124 cv
85.1157 84.5537 85.7212 84.2686 86.4673 84.2686 cv
87.0181 84.2686 87.5005 84.459 87.9146 84.8398 cv
cp
f
89.0981 89.5713 mo
89.4575 89.54 89.6958 89.4766 89.813 89.3809 cv
89.9302 89.2852 89.9888 89.0811 89.9888 88.7686 cv
89.9888 86.126 li
89.9888 85.7393 89.9526 85.4629 89.8804 85.2969 cv
89.8081 85.1309 89.6763 85.0479 89.4849 85.0479 cv
89.4458 85.0479 89.394 85.0527 89.3296 85.0625 cv
89.2651 85.0723 89.1978 85.085 89.1274 85.1006 cv
89.1274 84.9072 li
89.3491 84.8291 89.5771 84.749 89.811 84.667 cv
90.0444 84.585 90.2061 84.5264 90.2954 84.4912 cv
90.4902 84.417 90.6909 84.333 90.897 84.2393 cv
90.9243 84.2393 90.9409 84.249 90.9468 84.2686 cv
90.9526 84.2881 90.9556 84.3291 90.9556 84.3916 cv
90.9556 85.3525 li
91.2061 85.0049 91.4482 84.7334 91.6812 84.5381 cv
91.9141 84.3428 92.1563 84.2451 92.4067 84.2451 cv
92.6064 84.2451 92.769 84.3047 92.8945 84.4238 cv
93.02 84.543 93.0825 84.6924 93.0825 84.8721 cv
93.0825 85.0322 93.0347 85.167 92.939 85.2764 cv
92.8433 85.3857 92.7231 85.4404 92.5786 85.4404 cv
92.4302 85.4404 92.2808 85.3721 92.1304 85.2354 cv
91.98 85.0986 91.8618 85.0303 91.7759 85.0303 cv
91.6392 85.0303 91.4712 85.1406 91.272 85.3613 cv
91.0728 85.582 90.9731 85.8096 90.9731 86.0439 cv
90.9731 88.6865 li
90.9731 89.0225 91.0513 89.2559 91.2075 89.3867 cv
91.3638 89.5176 91.6235 89.5791 91.9868 89.5713 cv
91.9868 89.7646 li
89.0981 89.7646 li
89.0981 89.5713 li
cp
f
93.6685 87.9189 mo
93.8618 87.9189 li
93.9517 88.3643 94.0723 88.7061 94.2241 88.9443 cv
94.4971 89.3818 94.8965 89.6006 95.4224 89.6006 cv
95.7148 89.6006 95.9458 89.5195 96.1152 89.3574 cv
96.2847 89.1953 96.3696 88.9854 96.3696 88.7275 cv
96.3696 88.5635 96.3208 88.4053 96.2231 88.2529 cv
96.1255 88.1006 95.9536 87.9521 95.7075 87.8076 cv
95.0518 87.4326 li
94.5713 87.1748 94.2178 86.915 93.9907 86.6533 cv
93.7642 86.3916 93.6509 86.083 93.6509 85.7275 cv
93.6509 85.29 93.8071 84.9307 94.1196 84.6494 cv
94.4321 84.3682 94.8247 84.2275 95.2974 84.2275 cv
95.5044 84.2275 95.7319 84.2666 95.98 84.3447 cv
96.228 84.4229 96.3677 84.4619 96.3989 84.4619 cv
96.4692 84.4619 96.52 84.4521 96.5513 84.4326 cv
96.5825 84.4131 96.6099 84.3818 96.6333 84.3389 cv
96.7739 84.3389 li
96.8149 85.9736 li
96.6333 85.9736 li
96.5552 85.5947 96.4497 85.2998 96.3169 85.0889 cv
96.0747 84.6982 95.7251 84.5029 95.2681 84.5029 cv
94.9946 84.5029 94.7798 84.5869 94.6235 84.7549 cv
94.4673 84.9229 94.3892 85.1201 94.3892 85.3467 cv
94.3892 85.7061 94.6587 86.0264 95.1978 86.3076 cv
95.9712 86.7236 li
96.8032 87.1768 97.2192 87.7041 97.2192 88.3057 cv
97.2192 88.7666 97.0469 89.1436 96.7017 89.4365 cv
96.3564 89.7295 95.9048 89.876 95.3477 89.876 cv
95.1133 89.876 94.8481 89.8369 94.5518 89.7588 cv
94.2554 89.6807 94.0801 89.6416 94.0254 89.6416 cv
93.9785 89.6416 93.9375 89.6582 93.9028 89.6914 cv
93.8677 89.7246 93.8403 89.7646 93.8208 89.8115 cv
93.6685 89.8115 li
93.6685 87.9189 li
cp
f
99.6929 84.9248 mo
99.3018 85.2803 99.106 85.8936 99.106 86.7646 cv
99.106 87.46 99.2632 88.1084 99.5786 88.71 cv
99.8936 89.3115 100.331 89.6123 100.891 89.6123 cv
101.329 89.6123 101.667 89.4111 101.903 89.0088 cv
102.14 88.6064 102.258 88.0791 102.258 87.4268 cv
102.258 86.751 102.107 86.1143 101.806 85.5166 cv
101.505 84.9189 101.068 84.6201 100.497 84.6201 cv
100.188 84.6201 99.9199 84.7217 99.6929 84.9248 cv
cp
98.7573 85.0742 mo
99.2515 84.5371 99.8872 84.2686 100.665 84.2686 cv
101.438 84.2686 102.079 84.5225 102.586 85.0303 cv
103.094 85.5381 103.348 86.2139 103.348 87.0576 cv
103.348 87.835 103.102 88.5107 102.61 89.085 cv
102.118 89.6592 101.481 89.9463 100.7 89.9463 cv
99.9497 89.9463 99.3149 89.6709 98.7954 89.1201 cv
98.2759 88.5693 98.0161 87.8779 98.0161 87.0459 cv
98.0161 86.2686 98.2632 85.6113 98.7573 85.0742 cv
cp
f
103.928 89.6006 mo
104.206 89.5654 104.4 89.4961 104.511 89.3926 cv
104.623 89.2891 104.678 89.0576 104.678 88.6982 cv
104.678 85.7217 li
104.678 85.4736 104.655 85.2993 104.608 85.1987 cv
104.534 85.0513 104.381 84.9775 104.151 84.9775 cv
104.116 84.9775 104.08 84.9795 104.042 84.9834 cv
104.005 84.9873 103.959 84.9932 103.905 85.001 cv
103.905 84.7959 li
104.065 84.749 104.444 84.6279 105.042 84.4326 cv
105.592 84.251 li
105.62 84.251 105.636 84.2607 105.642 84.2803 cv
105.648 84.2998 105.651 84.3271 105.651 84.3623 cv
105.651 85.2236 li
106.01 84.8877 106.291 84.6572 106.493 84.5322 cv
106.797 84.3408 107.113 84.2451 107.44 84.2451 cv
107.706 84.2451 107.947 84.3213 108.166 84.4736 cv
108.587 84.7705 108.797 85.2998 108.797 86.0615 cv
108.797 88.7979 li
108.797 89.0791 108.854 89.2822 108.966 89.4072 cv
109.078 89.5322 109.266 89.5967 109.53 89.6006 cv
109.53 89.7646 li
107.028 89.7646 li
107.028 89.6006 li
107.313 89.5615 107.512 89.4824 107.625 89.3633 cv
107.739 89.2441 107.795 88.9854 107.795 88.5869 cv
107.795 86.085 li
107.795 85.749 107.733 85.4707 107.609 85.25 cv
107.484 85.0293 107.255 84.9189 106.921 84.9189 cv
106.692 84.9189 106.459 84.9971 106.222 85.1533 cv
106.09 85.2432 105.919 85.3916 105.709 85.5986 cv
105.709 88.8799 li
105.709 89.1611 105.772 89.3496 105.897 89.4453 cv
106.022 89.541 106.219 89.5928 106.489 89.6006 cv
106.489 89.7646 li
103.928 89.7646 li
103.928 89.6006 li
cp
f
110.18 86.6826 mo
113.145 86.6826 li
113.145 87.4326 li
110.18 87.4326 li
110.18 86.6826 li
cp
f
71.1392 101.63 mo
76.4009 94.2822 li
73.6353 94.2822 li
72.9399 94.2822 72.4458 94.4561 72.1528 94.8037 cv
71.9771 95.0107 71.8384 95.3682 71.7368 95.876 cv
71.4263 95.876 li
71.6665 93.8252 li
78.0005 93.8252 li
78.0005 93.96 li
72.7388 101.308 li
75.8525 101.308 li
76.5586 101.308 77.0737 101.142 77.3975 100.81 cv
77.5986 100.599 77.7798 100.214 77.9419 99.6553 cv
78.2231 99.6553 li
77.9243 101.765 li
71.1392 101.765 li
71.1392 101.63 li
cp
f
79.5532 93.7656 mo
79.6704 93.6455 79.8149 93.585 79.9868 93.585 cv
80.1548 93.585 80.2983 93.6445 80.4175 93.7627 cv
80.5366 93.8813 80.5962 94.0264 80.5962 94.1973 cv
80.5962 94.3643 80.5366 94.5073 80.4175 94.626 cv
80.2983 94.7446 80.1548 94.8037 79.9868 94.8037 cv
79.8149 94.8037 79.6704 94.7446 79.5532 94.626 cv
79.436 94.5073 79.3774 94.3643 79.3774 94.1973 cv
79.3774 94.0303 79.436 93.8862 79.5532 93.7656 cv
cp
78.6216 101.601 mo
79.0396 101.562 79.3032 101.49 79.4126 101.387 cv
79.522 101.283 79.5767 101.003 79.5767 100.546 cv
79.5767 97.751 li
79.5767 97.4971 79.5591 97.3213 79.5239 97.2236 cv
79.4653 97.0635 79.3423 96.9834 79.1548 96.9834 cv
79.1118 96.9834 79.0698 96.9873 79.0288 96.9951 cv
78.9878 97.0029 78.8696 97.0342 78.6743 97.0889 cv
78.6743 96.9072 li
78.9263 96.8252 li
79.6099 96.6025 80.0864 96.4346 80.356 96.3213 cv
80.4653 96.2744 80.5356 96.251 80.5669 96.251 cv
80.5747 96.2783 80.5786 96.3076 80.5786 96.3389 cv
80.5786 100.546 li
80.5786 100.991 80.6323 101.271 80.7397 101.384 cv
80.8472 101.497 81.0903 101.569 81.4692 101.601 cv
81.4692 101.765 li
78.6216 101.765 li
78.6216 101.601 li
cp
f
83.1099 97.2881 mo
82.9849 97.499 82.895 97.7646 82.8403 98.085 cv
85.313 98.085 li
85.27 97.6943 85.1958 97.4033 85.0903 97.2119 cv
84.8989 96.8682 84.5786 96.6963 84.1294 96.6963 cv
83.6841 96.6963 83.3442 96.8936 83.1099 97.2881 cv
cp
85.9165 96.8398 mo
86.3306 97.2207 86.5376 97.7607 86.5376 98.46 cv
82.8169 98.46 li
82.856 99.3643 83.061 100.023 83.4321 100.436 cv
83.8032 100.849 84.2427 101.056 84.7505 101.056 cv
85.1606 101.056 85.5063 100.949 85.7876 100.734 cv
86.0688 100.52 86.3286 100.216 86.5669 99.8223 cv
86.772 99.8921 li
86.6118 100.389 86.312 100.849 85.8726 101.271 cv
85.4331 101.694 84.895 101.905 84.2583 101.905 cv
83.5239 101.905 82.9565 101.628 82.5562 101.073 cv
82.1558 100.519 81.9556 99.8799 81.9556 99.1572 cv
81.9556 98.3721 82.188 97.6943 82.6528 97.124 cv
83.1177 96.5537 83.7231 96.2686 84.4692 96.2686 cv
85.02 96.2686 85.5024 96.459 85.9165 96.8398 cv
cp
f
90.6392 99.5029 mo
90.8735 99.3154 90.9907 98.9893 90.9907 98.5244 cv
90.9907 98.1533 90.896 97.7354 90.7065 97.2705 cv
90.5171 96.8057 90.2017 96.5732 89.7603 96.5732 cv
89.3774 96.5732 89.1138 96.7549 88.9692 97.1182 cv
88.895 97.3096 88.8579 97.5459 88.8579 97.8271 cv
88.8579 98.3037 88.9731 98.7314 89.2036 99.1104 cv
89.4341 99.4893 89.7329 99.6787 90.1001 99.6787 cv
90.3149 99.6787 90.4946 99.6201 90.6392 99.5029 cv
cp
88.7788 103.528 mo
89.1479 103.653 89.5708 103.716 90.0474 103.716 cv
90.6958 103.716 91.2231 103.604 91.6294 103.379 cv
92.0356 103.154 92.2388 102.878 92.2388 102.55 cv
92.2388 102.288 92.0742 102.114 91.7456 102.028 cv
91.542 101.978 91.1563 101.948 90.5889 101.94 cv
90.4443 101.937 90.2915 101.932 90.1309 101.926 cv
89.9702 101.92 89.8237 101.913 89.6909 101.905 cv
89.6045 101.901 89.4653 101.886 89.2739 101.858 cv
89.082 101.831 88.939 101.808 88.8452 101.788 cv
88.7983 101.788 88.6841 101.911 88.5029 102.157 cv
88.3179 102.407 88.2251 102.638 88.2251 102.849 cv
88.2251 103.177 88.4097 103.403 88.7788 103.528 cv
cp
88.1577 99.1689 mo
87.9604 98.8682 87.8618 98.5303 87.8618 98.1553 cv
87.8618 97.6982 88.0435 97.2646 88.4067 96.8545 cv
88.77 96.4443 89.2837 96.2393 89.9478 96.2393 cv
90.2329 96.2393 90.5474 96.3066 90.8911 96.4414 cv
91.2349 96.5762 91.5649 96.6436 91.8813 96.6436 cv
91.9634 96.6436 92.0874 96.6406 92.2534 96.6348 cv
92.4194 96.6289 92.5396 96.626 92.6138 96.626 cv
92.6841 96.626 li
92.6841 97.1006 li
91.6704 97.1006 li
91.7407 97.2646 91.7954 97.4072 91.8345 97.5283 cv
91.9009 97.7549 91.9341 97.9697 91.9341 98.1729 cv
91.9341 98.6182 91.7495 99.0273 91.3804 99.4004 cv
91.0112 99.7734 90.5142 99.96 89.8892 99.96 cv
89.7915 99.96 89.6157 99.9424 89.3618 99.9072 cv
89.2485 99.9072 89.0981 100.003 88.9106 100.194 cv
88.7231 100.386 88.6294 100.542 88.6294 100.663 cv
88.6294 100.788 88.7661 100.88 89.04 100.938 cv
89.2202 100.978 89.4194 100.997 89.6387 100.997 cv
90.644 100.997 91.3267 101.054 91.6865 101.167 cv
92.2773 101.351 92.5728 101.745 92.5728 102.351 cv
92.5728 102.968 92.228 103.46 91.5386 103.827 cv
90.8491 104.194 90.1528 104.378 89.4497 104.378 cv
88.8091 104.378 88.3013 104.248 87.9263 103.988 cv
87.5513 103.729 87.3638 103.456 87.3638 103.171 cv
87.3638 103.03 87.4131 102.893 87.5127 102.758 cv
87.6118 102.623 87.8071 102.423 88.0991 102.157 cv
88.4844 101.812 li
88.5542 101.741 li
88.376 101.671 88.2422 101.603 88.1528 101.536 cv
87.998 101.415 87.9204 101.276 87.9204 101.12 cv
87.9204 100.976 87.9878 100.816 88.1226 100.643 cv
88.2573 100.469 88.5454 100.187 88.9868 99.7959 cv
88.6313 99.6787 88.355 99.4697 88.1577 99.1689 cv
cp
f
93.2935 101.601 mo
93.6567 101.565 93.9028 101.492 94.0317 101.381 cv
94.1606 101.27 94.2251 101.052 94.2251 100.728 cv
94.2251 95.0029 li
94.2251 94.7451 94.2036 94.5674 94.1606 94.4697 cv
94.0825 94.3057 93.9243 94.2236 93.686 94.2236 cv
93.6313 94.2236 93.5718 94.2295 93.5073 94.2412 cv
93.4429 94.2529 93.3618 94.2705 93.2642 94.2939 cv
93.2642 94.1006 li
93.7915 93.96 94.4263 93.7725 95.1685 93.5381 cv
95.1958 93.5381 95.2124 93.5498 95.2183 93.5732 cv
95.2241 93.5967 95.2271 93.6475 95.2271 93.7256 cv
95.2271 100.751 li
95.2271 101.091 95.2856 101.311 95.4028 101.41 cv
95.52 101.51 95.7622 101.573 96.1294 101.601 cv
96.1294 101.765 li
93.2935 101.765 li
93.2935 101.601 li
cp
f
97.77 97.2881 mo
97.645 97.499 97.5552 97.7646 97.5005 98.085 cv
99.9731 98.085 li
99.9302 97.6943 99.856 97.4033 99.7505 97.2119 cv
99.5591 96.8682 99.2388 96.6963 98.7896 96.6963 cv
98.3442 96.6963 98.0044 96.8936 97.77 97.2881 cv
cp
100.577 96.8398 mo
100.991 97.2207 101.198 97.7607 101.198 98.46 cv
97.4771 98.46 li
97.5161 99.3643 97.7212 100.023 98.0923 100.436 cv
98.4634 100.849 98.9028 101.056 99.4106 101.056 cv
99.8208 101.056 100.167 100.949 100.448 100.734 cv
100.729 100.52 100.989 100.216 101.227 99.8223 cv
101.432 99.8921 li
101.272 100.389 100.972 100.849 100.533 101.271 cv
100.093 101.694 99.5552 101.905 98.9185 101.905 cv
98.1841 101.905 97.6167 101.628 97.2163 101.073 cv
96.8159 100.519 96.6157 99.8799 96.6157 99.1572 cv
96.6157 98.3721 96.8481 97.6943 97.313 97.124 cv
97.7778 96.5537 98.3833 96.2686 99.1294 96.2686 cv
99.6802 96.2686 100.163 96.459 100.577 96.8398 cv
cp
f
101.76 101.571 mo
102.12 101.54 102.358 101.477 102.475 101.381 cv
102.592 101.285 102.651 101.081 102.651 100.769 cv
102.651 98.126 li
102.651 97.7393 102.615 97.4629 102.542 97.2969 cv
102.47 97.1309 102.338 97.0479 102.147 97.0479 cv
102.108 97.0479 102.056 97.0527 101.992 97.0625 cv
101.927 97.0723 101.86 97.085 101.79 97.1006 cv
101.79 96.9072 li
102.011 96.8291 102.239 96.749 102.473 96.667 cv
102.707 96.585 102.868 96.5264 102.958 96.4912 cv
103.152 96.417 103.353 96.333 103.559 96.2393 cv
103.586 96.2393 103.603 96.249 103.609 96.2686 cv
103.615 96.2881 103.618 96.3291 103.618 96.3916 cv
103.618 97.3525 li
103.868 97.0049 104.11 96.7334 104.343 96.5381 cv
104.576 96.3428 104.818 96.2451 105.069 96.2451 cv
105.269 96.2451 105.431 96.3047 105.557 96.4238 cv
105.682 96.543 105.745 96.6924 105.745 96.8721 cv
105.745 97.0322 105.697 97.167 105.601 97.2764 cv
105.505 97.3857 105.385 97.4404 105.241 97.4404 cv
105.092 97.4404 104.943 97.3721 104.792 97.2354 cv
104.642 97.0986 104.524 97.0303 104.438 97.0303 cv
104.301 97.0303 104.133 97.1406 103.934 97.3613 cv
103.735 97.582 103.635 97.8096 103.635 98.0439 cv
103.635 100.687 li
103.635 101.022 103.713 101.256 103.87 101.387 cv
104.026 101.518 104.286 101.579 104.649 101.571 cv
104.649 101.765 li
101.76 101.765 li
101.76 101.571 li
cp
f
48.6279 141.548 mo
48.5815 141.106 48.5029 140.82 48.3921 140.689 cv
48.2813 140.559 48.0005 140.493 47.5498 140.493 cv
42.2119 140.493 li
41.7861 140.493 41.5078 140.558 41.377 140.687 cv
41.2461 140.815 41.165 141.103 41.1338 141.548 cv
40.9111 141.548 li
40.9111 138.161 li
41.1338 138.161 li
41.1572 138.603 41.2295 138.898 41.3506 139.049 cv
41.4717 139.199 41.7314 139.274 42.1299 139.274 cv
47.8955 139.274 li
48.0283 139.274 48.1328 139.252 48.209 139.207 cv
48.2852 139.162 48.333 139.063 48.3525 138.911 cv
48.3643 138.821 48.3721 138.726 48.376 138.626 cv
48.3799 138.526 48.3818 138.34 48.3818 138.066 cv
48.3818 136.998 48.2939 136.276 48.1182 135.901 cv
47.9424 135.526 47.4932 135.162 46.7705 134.81 cv
46.7705 134.505 li
48.8506 135.092 li
48.8506 141.548 li
48.6279 141.548 li
cp
f
48.6865 134.118 mo
48.6475 133.7 48.5762 133.437 48.4727 133.327 cv
48.3691 133.218 48.0889 133.163 47.6318 133.163 cv
44.8369 133.163 li
44.583 133.163 44.4072 133.181 44.3096 133.216 cv
44.1494 133.274 44.0693 133.397 44.0693 133.585 cv
44.0693 133.628 44.0732 133.67 44.0811 133.711 cv
44.0889 133.752 44.1201 133.87 44.1748 134.065 cv
43.9932 134.065 li
43.9111 133.813 li
43.6885 133.13 43.5205 132.653 43.4072 132.384 cv
43.3604 132.274 43.3369 132.204 43.3369 132.173 cv
43.3643 132.165 43.3936 132.161 43.4248 132.161 cv
47.6318 132.161 li
48.0771 132.161 48.3564 132.107 48.4697 132 cv
48.583 131.893 48.6553 131.649 48.6865 131.271 cv
48.8506 131.271 li
48.8506 134.118 li
48.6865 134.118 li
cp
40.8516 133.187 mo
40.7314 133.069 40.6709 132.925 40.6709 132.753 cv
40.6709 132.585 40.7305 132.441 40.8486 132.322 cv
40.9673 132.203 41.1123 132.144 41.2832 132.144 cv
41.4502 132.144 41.5933 132.203 41.7119 132.322 cv
41.8306 132.441 41.8896 132.585 41.8896 132.753 cv
41.8896 132.925 41.8306 133.069 41.7119 133.187 cv
41.5933 133.304 41.4502 133.362 41.2832 133.362 cv
41.1162 133.362 40.9722 133.304 40.8516 133.187 cv
cp
f
48.6865 130.802 mo
48.6514 130.524 48.582 130.33 48.4785 130.219 cv
48.375 130.107 48.1436 130.052 47.7842 130.052 cv
44.8076 130.052 li
44.5596 130.052 44.3853 130.075 44.2847 130.122 cv
44.1372 130.196 44.0635 130.349 44.0635 130.579 cv
44.0635 130.614 44.0654 130.65 44.0693 130.688 cv
44.0732 130.725 44.0791 130.771 44.0869 130.825 cv
43.8818 130.825 li
43.835 130.665 43.7139 130.286 43.5186 129.688 cv
43.3369 129.138 li
43.3369 129.11 43.3467 129.094 43.3662 129.088 cv
43.3857 129.082 43.4131 129.079 43.4482 129.079 cv
44.3096 129.079 li
43.9736 128.72 43.7432 128.439 43.6182 128.237 cv
43.4268 127.933 43.3311 127.617 43.3311 127.29 cv
43.3311 127.024 43.4072 126.783 43.5596 126.564 cv
43.8564 126.143 44.3857 125.933 45.1475 125.933 cv
47.8838 125.933 li
48.165 125.933 48.3682 125.876 48.4932 125.764 cv
48.6182 125.652 48.6826 125.464 48.6865 125.2 cv
48.8506 125.2 li
48.8506 127.702 li
48.6865 127.702 li
48.6475 127.417 48.5684 127.218 48.4492 127.104 cv
48.3301 126.991 48.0713 126.935 47.6729 126.935 cv
45.1709 126.935 li
44.835 126.935 44.5566 126.997 44.3359 127.121 cv
44.1152 127.246 44.0049 127.475 44.0049 127.809 cv
44.0049 128.038 44.083 128.271 44.2393 128.508 cv
44.3291 128.64 44.4775 128.811 44.6846 129.021 cv
47.9658 129.021 li
48.2471 129.021 48.4355 128.958 48.5313 128.833 cv
48.627 128.708 48.6787 128.511 48.6865 128.241 cv
48.8506 128.241 li
48.8506 130.802 li
48.6865 130.802 li
cp
f
48.0596 121.222 mo
47.8799 121.034 47.71 120.94 47.5498 120.94 cv
45.0361 120.94 li
44.5283 120.94 44.1699 121.076 43.9609 121.348 cv
43.752 121.619 43.6475 121.884 43.6475 122.142 cv
43.6475 122.634 43.8652 123.017 44.3008 123.29 cv
44.7363 123.563 45.2725 123.7 45.9092 123.7 cv
46.5381 123.7 47.0986 123.555 47.5908 123.264 cv
48.083 122.973 48.3291 122.538 48.3291 121.96 cv
48.3291 121.655 48.2393 121.409 48.0596 121.222 cv
cp
43.501 121.392 mo
43.583 121.235 43.6963 121.085 43.8408 120.94 cv
41.9775 120.94 li
41.7393 120.94 41.5752 120.967 41.4854 121.02 cv
41.3955 121.072 41.3506 121.198 41.3506 121.397 cv
41.3506 121.444 41.3525 121.485 41.3564 121.521 cv
41.3604 121.556 41.3682 121.634 41.3799 121.755 cv
41.1865 121.755 li
41.0635 121.274 li
41.0166 121.099 40.9678 120.923 40.917 120.747 cv
40.8662 120.571 40.8174 120.417 40.7705 120.284 cv
40.751 120.222 40.7139 120.118 40.6592 119.974 cv
40.6709 119.938 li
41.2861 119.95 li
41.5088 119.954 41.7383 119.958 41.9746 119.962 cv
42.2109 119.966 42.4443 119.968 42.6748 119.968 cv
47.4619 119.979 li
47.7158 119.979 47.8936 119.948 47.9951 119.886 cv
48.0967 119.823 48.1475 119.657 48.1475 119.388 cv
48.1475 119.345 48.1465 119.302 48.1445 119.259 cv
48.1426 119.216 48.1377 119.173 48.1299 119.13 cv
48.3232 119.13 li
48.3311 119.153 48.4287 119.437 48.6162 119.979 cv
48.9619 120.899 li
48.9092 120.94 li
48.1885 120.94 li
48.4268 121.159 48.5967 121.349 48.6982 121.509 cv
48.874 121.794 48.9619 122.124 48.9619 122.499 cv
48.9619 123.163 48.7051 123.701 48.1914 124.113 cv
47.6777 124.525 47.083 124.731 46.4072 124.731 cv
45.5596 124.731 44.832 124.484 44.2246 123.99 cv
43.6172 123.496 43.3135 122.892 43.3135 122.177 cv
43.3135 121.892 43.376 121.63 43.501 121.392 cv
cp
f
48.6865 118.913 mo
48.6436 118.593 48.5645 118.383 48.4492 118.283 cv
48.334 118.184 48.0615 118.134 47.6318 118.134 cv
42.0068 118.134 li
41.7881 118.134 41.627 118.162 41.5234 118.219 cv
41.4199 118.275 41.3682 118.413 41.3682 118.632 cv
41.3682 118.675 41.3711 118.717 41.377 118.758 cv
41.3828 118.799 41.3896 118.845 41.3975 118.896 cv
41.1865 118.896 li
41.1357 118.724 41.0742 118.512 41.002 118.26 cv
40.9297 118.008 40.8779 117.833 40.8467 117.735 cv
40.6709 117.173 li
40.7119 117.161 li
44.3096 117.161 li
44.0283 116.915 43.8213 116.696 43.6885 116.505 cv
43.4541 116.161 43.3369 115.79 43.3369 115.392 cv
43.3369 114.759 43.6025 114.327 44.1338 114.097 cv
44.415 113.972 44.7842 113.909 45.2412 113.909 cv
47.6318 113.909 li
48.0459 113.909 48.3154 113.861 48.4404 113.766 cv
48.5654 113.67 48.6475 113.474 48.6865 113.177 cv
48.8506 113.177 li
48.8506 115.714 li
48.6865 115.714 li
48.6396 115.374 48.5596 115.155 48.4463 115.058 cv
48.333 114.96 48.0615 114.911 47.6318 114.911 cv
45.2588 114.911 li
44.8799 114.911 44.5732 114.975 44.3389 115.102 cv
44.1045 115.229 43.9873 115.468 43.9873 115.819 cv
43.9873 116.124 44.0967 116.419 44.3154 116.704 cv
44.5342 116.989 44.6768 117.132 44.7432 117.132 cv
47.6318 117.132 li
48.0693 117.132 48.3428 117.081 48.4521 116.979 cv
48.5615 116.878 48.6396 116.661 48.6865 116.329 cv
48.8506 116.329 li
48.8506 118.913 li
48.6865 118.913 li
cp
f
45.6045 109.579 mo
45.7529 110.028 45.917 110.399 46.0967 110.692 cv
46.4443 111.255 46.8389 111.536 47.2803 111.536 cv
47.6357 111.536 47.8975 111.419 48.0654 111.185 cv
48.1748 111.032 48.2295 110.862 48.2295 110.675 cv
48.2295 110.417 48.1572 110.17 48.0127 109.934 cv
47.8682 109.697 47.6846 109.579 47.4619 109.579 cv
45.6045 109.579 li
cp
46.2666 111.729 mo
46.0322 111.37 45.7139 110.653 45.3115 109.579 cv
44.8135 109.579 li
44.415 109.579 44.1377 109.618 43.9814 109.696 cv
43.7197 109.829 43.5889 110.104 43.5889 110.522 cv
43.5889 110.722 43.6396 110.911 43.7412 111.091 cv
43.8467 111.271 43.9912 111.36 44.1748 111.36 cv
44.2217 111.36 44.3008 111.351 44.4121 111.331 cv
44.5234 111.312 44.5947 111.302 44.626 111.302 cv
44.8447 111.302 44.9971 111.374 45.083 111.519 cv
45.1338 111.601 45.1592 111.698 45.1592 111.812 cv
45.1592 111.987 45.1016 112.122 44.9863 112.216 cv
44.8711 112.31 44.7432 112.356 44.6025 112.356 cv
44.3291 112.356 44.043 112.188 43.7441 111.85 cv
43.4453 111.512 43.2959 111.017 43.2959 110.364 cv
43.2959 109.606 43.542 109.093 44.0342 108.823 cv
44.3037 108.679 44.6963 108.606 45.2119 108.606 cv
47.5615 108.606 li
47.7881 108.606 47.9443 108.591 48.0303 108.56 cv
48.1826 108.509 48.2588 108.403 48.2588 108.243 cv
48.2588 108.153 48.2451 108.079 48.2178 108.021 cv
48.1904 107.962 48.124 107.86 48.0186 107.716 cv
48.3232 107.716 li
48.4756 107.841 48.6006 107.976 48.6982 108.12 cv
48.8467 108.339 48.9209 108.562 48.9209 108.788 cv
48.9209 109.054 48.835 109.246 48.6631 109.365 cv
48.4912 109.484 48.2861 109.55 48.0479 109.562 cv
48.3057 109.858 48.4971 110.112 48.6221 110.323 cv
48.833 110.679 48.9385 111.017 48.9385 111.337 cv
48.9385 111.673 48.8203 111.964 48.584 112.21 cv
48.3477 112.456 48.0479 112.579 47.6846 112.579 cv
47.1182 112.579 46.6455 112.296 46.2666 111.729 cv
cp
f
48.6572 107.64 mo
48.626 107.28 48.5625 107.042 48.4668 106.925 cv
48.3711 106.808 48.167 106.749 47.8545 106.749 cv
45.2119 106.749 li
44.8252 106.749 44.5488 106.785 44.3828 106.857 cv
44.2168 106.93 44.1338 107.062 44.1338 107.253 cv
44.1338 107.292 44.1387 107.344 44.1484 107.408 cv
44.1582 107.473 44.1709 107.54 44.1865 107.61 cv
43.9932 107.61 li
43.915 107.389 43.835 107.161 43.7529 106.927 cv
43.6709 106.693 43.6123 106.532 43.5771 106.442 cv
43.5029 106.248 43.4189 106.047 43.3252 105.841 cv
43.3252 105.813 43.335 105.797 43.3545 105.791 cv
43.374 105.785 43.415 105.782 43.4775 105.782 cv
44.4385 105.782 li
44.0908 105.532 43.8193 105.29 43.624 105.057 cv
43.4287 104.824 43.3311 104.582 43.3311 104.331 cv
43.3311 104.131 43.3906 103.969 43.5098 103.843 cv
43.6289 103.718 43.7783 103.655 43.958 103.655 cv
44.1182 103.655 44.2529 103.703 44.3623 103.799 cv
44.4717 103.895 44.5264 104.015 44.5264 104.159 cv
44.5264 104.308 44.458 104.457 44.3213 104.607 cv
44.1846 104.758 44.1162 104.876 44.1162 104.962 cv
44.1162 105.099 44.2266 105.267 44.4473 105.466 cv
44.668 105.665 44.8955 105.765 45.1299 105.765 cv
47.7725 105.765 li
48.1084 105.765 48.3418 105.687 48.4727 105.53 cv
48.6035 105.374 48.665 105.114 48.6572 104.751 cv
48.8506 104.751 li
48.8506 107.64 li
48.6572 107.64 li
cp
f
48.0596 99.8994 mo
47.8799 99.7119 47.71 99.6182 47.5498 99.6182 cv
45.0361 99.6182 li
44.5283 99.6182 44.1699 99.7539 43.9609 100.025 cv
43.752 100.297 43.6475 100.562 43.6475 100.819 cv
43.6475 101.312 43.8652 101.694 44.3008 101.968 cv
44.7363 102.241 45.2725 102.378 45.9092 102.378 cv
46.5381 102.378 47.0986 102.232 47.5908 101.941 cv
48.083 101.65 48.3291 101.216 48.3291 100.638 cv
48.3291 100.333 48.2393 100.087 48.0596 99.8994 cv
cp
43.501 100.069 mo
43.583 99.9131 43.6963 99.7627 43.8408 99.6182 cv
41.9775 99.6182 li
41.7393 99.6182 41.5752 99.6445 41.4854 99.6973 cv
41.3955 99.75 41.3506 99.876 41.3506 100.075 cv
41.3506 100.122 41.3525 100.163 41.3564 100.198 cv
41.3604 100.233 41.3682 100.312 41.3799 100.433 cv
41.1865 100.433 li
41.0635 99.9521 li
41.0166 99.7764 40.9678 99.6006 40.917 99.4248 cv
40.8662 99.249 40.8174 99.0947 40.7705 98.9619 cv
40.751 98.8994 40.7139 98.7959 40.6592 98.6514 cv
40.6709 98.6162 li
41.2861 98.6279 li
41.5088 98.6318 41.7383 98.6357 41.9746 98.6396 cv
42.2109 98.6436 42.4443 98.6455 42.6748 98.6455 cv
47.4619 98.6572 li
47.7158 98.6572 47.8936 98.626 47.9951 98.5635 cv
48.0967 98.501 48.1475 98.335 48.1475 98.0654 cv
48.1475 98.0225 48.1465 97.9795 48.1445 97.9365 cv
48.1426 97.8936 48.1377 97.8506 48.1299 97.8076 cv
48.3232 97.8076 li
48.3311 97.8311 48.4287 98.1143 48.6162 98.6572 cv
48.9619 99.5771 li
48.9092 99.6182 li
48.1885 99.6182 li
48.4268 99.8369 48.5967 100.026 48.6982 100.187 cv
48.874 100.472 48.9619 100.802 48.9619 101.177 cv
48.9619 101.841 48.7051 102.379 48.1914 102.791 cv
47.6777 103.203 47.083 103.409 46.4072 103.409 cv
45.5596 103.409 44.832 103.162 44.2246 102.668 cv
43.6172 102.174 43.3135 101.569 43.3135 100.854 cv
43.3135 100.569 43.376 100.308 43.501 100.069 cv
cp
f
45.7686 97.2275 mo
45.7686 94.2627 li
46.5186 94.2627 li
46.5186 97.2275 li
45.7686 97.2275 li
cp
f
58.4365 134.47 mo
58.9756 134.267 59.4053 134.029 59.7256 133.756 cv
60.2842 133.28 60.5635 132.689 60.5635 131.983 cv
60.5635 131.601 60.4424 131.271 60.2002 130.992 cv
59.958 130.713 59.6201 130.573 59.1865 130.573 cv
58.7959 130.573 58.4561 130.713 58.167 130.994 cv
57.9834 131.178 57.708 131.563 57.3408 132.152 cv
56.7021 133.176 li
56.5068 133.484 56.3096 133.729 56.1104 133.913 cv
55.7314 134.253 55.3135 134.423 54.8564 134.423 cv
54.251 134.423 53.7471 134.222 53.3447 133.819 cv
52.9424 133.417 52.7412 132.884 52.7412 132.22 cv
52.7412 131.946 52.8086 131.617 52.9434 131.232 cv
53.0781 130.848 53.1455 130.628 53.1455 130.573 cv
53.1455 130.425 53.1104 130.322 53.04 130.266 cv
52.9697 130.209 52.8701 130.165 52.7412 130.134 cv
52.7412 129.888 li
55.2959 129.624 li
55.2959 129.911 li
54.5264 130.106 53.9893 130.42 53.6846 130.852 cv
53.3799 131.283 53.2275 131.71 53.2275 132.132 cv
53.2275 132.46 53.3242 132.746 53.5176 132.99 cv
53.7109 133.234 53.9795 133.356 54.3232 133.356 cv
54.6318 133.356 54.8955 133.263 55.1143 133.076 cv
55.3369 132.889 55.5693 132.598 55.8115 132.204 cv
56.4619 131.15 li
56.8682 130.49 57.2412 130.025 57.5811 129.754 cv
57.9248 129.488 58.3311 129.354 58.7998 129.354 cv
59.4287 129.354 59.9541 129.592 60.376 130.066 cv
60.7979 130.541 61.0088 131.147 61.0088 131.886 cv
61.0088 132.257 60.9385 132.645 60.7979 133.049 cv
60.6572 133.453 60.5869 133.685 60.5869 133.743 cv
60.5869 133.884 60.6299 133.979 60.7158 134.027 cv
60.8018 134.076 60.8936 134.108 60.9912 134.124 cv
60.9912 134.388 li
58.4365 134.745 li
58.4365 134.47 li
cp
f
55.7017 124.324 mo
55.9531 123.971 56.2285 123.794 56.5283 123.794 cv
56.6567 123.794 56.7764 123.839 56.8872 123.929 cv
56.998 124.019 57.0537 124.157 57.0537 124.345 cv
57.0537 124.481 57.0068 124.602 56.9131 124.705 cv
56.8193 124.809 56.6826 124.884 56.5029 124.931 cv
56.2217 125.001 li
56.0146 125.052 55.8682 125.14 55.7822 125.265 cv
55.7002 125.394 55.6592 125.563 55.6592 125.774 cv
55.6592 126.22 55.854 126.596 56.2432 126.902 cv
56.6323 127.209 57.1494 127.362 57.7949 127.362 cv
58.3857 127.362 58.9155 127.193 59.3848 126.855 cv
59.854 126.518 60.0889 126.062 60.0889 125.487 cv
60.0889 125.081 59.9561 124.72 59.6895 124.403 cv
59.5371 124.224 59.2944 124.021 58.9619 123.794 cv
59.0615 123.63 li
59.5308 123.853 59.9023 124.087 60.1758 124.333 cv
60.7002 124.806 60.9619 125.353 60.9619 125.974 cv
60.9619 126.583 60.7217 127.122 60.2412 127.591 cv
59.7607 128.06 59.1084 128.294 58.2842 128.294 cv
57.4756 128.294 56.7803 128.038 56.1982 127.526 cv
55.6162 127.015 55.3252 126.368 55.3252 125.587 cv
55.3252 125.099 55.4507 124.678 55.7017 124.324 cv
cp
f
60.6865 123.138 mo
60.6436 122.817 60.5645 122.607 60.4492 122.508 cv
60.334 122.408 60.0615 122.358 59.6318 122.358 cv
54.0068 122.358 li
53.7881 122.358 53.627 122.387 53.5234 122.443 cv
53.4199 122.5 53.3682 122.638 53.3682 122.856 cv
53.3682 122.899 53.3711 122.941 53.377 122.982 cv
53.3828 123.023 53.3896 123.069 53.3975 123.12 cv
53.1865 123.12 li
53.1357 122.948 53.0742 122.736 53.002 122.484 cv
52.9297 122.232 52.8779 122.058 52.8467 121.96 cv
52.6709 121.397 li
52.7119 121.386 li
56.3096 121.386 li
56.0283 121.14 55.8213 120.921 55.6885 120.729 cv
55.4541 120.386 55.3369 120.015 55.3369 119.616 cv
55.3369 118.983 55.6025 118.552 56.1338 118.321 cv
56.415 118.196 56.7842 118.134 57.2412 118.134 cv
59.6318 118.134 li
60.0459 118.134 60.3154 118.086 60.4404 117.99 cv
60.5654 117.895 60.6475 117.698 60.6865 117.401 cv
60.8506 117.401 li
60.8506 119.938 li
60.6865 119.938 li
60.6396 119.599 60.5596 119.38 60.4463 119.282 cv
60.333 119.185 60.0615 119.136 59.6318 119.136 cv
57.2588 119.136 li
56.8799 119.136 56.5732 119.199 56.3389 119.326 cv
56.1045 119.453 55.9873 119.692 55.9873 120.044 cv
55.9873 120.349 56.0967 120.644 56.3154 120.929 cv
56.5342 121.214 56.6768 121.356 56.7432 121.356 cv
59.6318 121.356 li
60.0693 121.356 60.3428 121.306 60.4521 121.204 cv
60.5615 121.103 60.6396 120.886 60.6865 120.554 cv
60.8506 120.554 li
60.8506 123.138 li
60.6865 123.138 li
cp
f
57.6045 113.804 mo
57.7529 114.253 57.917 114.624 58.0967 114.917 cv
58.4443 115.479 58.8389 115.761 59.2803 115.761 cv
59.6357 115.761 59.8975 115.644 60.0654 115.409 cv
60.1748 115.257 60.2295 115.087 60.2295 114.899 cv
60.2295 114.642 60.1572 114.395 60.0127 114.158 cv
59.8682 113.922 59.6846 113.804 59.4619 113.804 cv
57.6045 113.804 li
cp
58.2666 115.954 mo
58.0322 115.595 57.7139 114.878 57.3115 113.804 cv
56.8135 113.804 li
56.415 113.804 56.1377 113.843 55.9814 113.921 cv
55.7197 114.054 55.5889 114.329 55.5889 114.747 cv
55.5889 114.946 55.6396 115.136 55.7412 115.315 cv
55.8467 115.495 55.9912 115.585 56.1748 115.585 cv
56.2217 115.585 56.3008 115.575 56.4121 115.556 cv
56.5234 115.536 56.5947 115.526 56.626 115.526 cv
56.8447 115.526 56.9971 115.599 57.083 115.743 cv
57.1338 115.825 57.1592 115.923 57.1592 116.036 cv
57.1592 116.212 57.1016 116.347 56.9863 116.44 cv
56.8711 116.534 56.7432 116.581 56.6025 116.581 cv
56.3291 116.581 56.043 116.412 55.7441 116.074 cv
55.4453 115.736 55.2959 115.241 55.2959 114.589 cv
55.2959 113.831 55.542 113.317 56.0342 113.048 cv
56.3037 112.903 56.6963 112.831 57.2119 112.831 cv
59.5615 112.831 li
59.7881 112.831 59.9443 112.815 60.0303 112.784 cv
60.1826 112.733 60.2588 112.628 60.2588 112.468 cv
60.2588 112.378 60.2451 112.304 60.2178 112.245 cv
60.1904 112.187 60.124 112.085 60.0186 111.94 cv
60.3232 111.94 li
60.4756 112.065 60.6006 112.2 60.6982 112.345 cv
60.8467 112.563 60.9209 112.786 60.9209 113.013 cv
60.9209 113.278 60.835 113.471 60.6631 113.59 cv
60.4912 113.709 60.2861 113.774 60.0479 113.786 cv
60.3057 114.083 60.4971 114.337 60.6221 114.548 cv
60.833 114.903 60.9385 115.241 60.9385 115.562 cv
60.9385 115.897 60.8203 116.188 60.584 116.435 cv
60.3477 116.681 60.0479 116.804 59.6846 116.804 cv
59.1182 116.804 58.6455 116.521 58.2666 115.954 cv
cp
f
60.6572 111.864 mo
60.626 111.505 60.5625 111.267 60.4668 111.149 cv
60.3711 111.032 60.167 110.974 59.8545 110.974 cv
57.2119 110.974 li
56.8252 110.974 56.5488 111.01 56.3828 111.082 cv
56.2168 111.154 56.1338 111.286 56.1338 111.478 cv
56.1338 111.517 56.1387 111.568 56.1484 111.633 cv
56.1582 111.697 56.1709 111.765 56.1865 111.835 cv
55.9932 111.835 li
55.915 111.613 55.835 111.385 55.7529 111.151 cv
55.6709 110.918 55.6123 110.756 55.5771 110.667 cv
55.5029 110.472 55.4189 110.271 55.3252 110.065 cv
55.3252 110.038 55.335 110.021 55.3545 110.016 cv
55.374 110.01 55.415 110.007 55.4775 110.007 cv
56.4385 110.007 li
56.0908 109.756 55.8193 109.514 55.624 109.281 cv
55.4287 109.048 55.3311 108.806 55.3311 108.556 cv
55.3311 108.356 55.3906 108.193 55.5098 108.068 cv
55.6289 107.942 55.7783 107.88 55.958 107.88 cv
56.1182 107.88 56.2529 107.928 56.3623 108.023 cv
56.4717 108.119 56.5264 108.239 56.5264 108.384 cv
56.5264 108.532 56.458 108.682 56.3213 108.832 cv
56.1846 108.982 56.1162 109.101 56.1162 109.187 cv
56.1162 109.323 56.2266 109.491 56.4473 109.69 cv
56.668 109.89 56.8955 109.989 57.1299 109.989 cv
59.7725 109.989 li
60.1084 109.989 60.3418 109.911 60.4727 109.755 cv
60.6035 109.599 60.665 109.339 60.6572 108.976 cv
60.8506 108.976 li
60.8506 111.864 li
60.6572 111.864 li
cp
f
60.6865 107.687 mo
60.667 107.272 60.5898 107 60.4551 106.869 cv
60.3203 106.738 60.0361 106.673 59.6025 106.673 cv
55.8408 106.673 li
55.8408 107.675 li
55.4482 107.675 li
55.4482 106.673 li
54.8311 106.673 54.3096 106.589 53.8838 106.42 cv
53.0674 106.1 52.6592 105.511 52.6592 104.654 cv
52.6592 104.31 52.7275 104.001 52.8643 103.729 cv
53.001 103.458 53.1846 103.321 53.415 103.321 cv
53.5439 103.321 53.6592 103.368 53.7607 103.461 cv
53.8623 103.555 53.9131 103.667 53.9131 103.799 cv
53.9131 103.912 53.8789 104.009 53.8105 104.091 cv
53.7422 104.172 53.6221 104.27 53.4502 104.382 cv
53.2979 104.481 li
53.2158 104.536 53.1465 104.6 53.0898 104.674 cv
53.0332 104.748 53.0049 104.851 53.0049 104.983 cv
53.0049 105.278 53.1514 105.479 53.4443 105.583 cv
53.6006 105.642 53.8057 105.671 54.0596 105.671 cv
55.4482 105.671 li
55.4482 104.212 li
55.8408 104.212 li
55.8408 105.671 li
59.6025 105.671 li
60.0439 105.671 60.3262 105.611 60.4492 105.492 cv
60.5723 105.373 60.6514 105.062 60.6865 104.558 cv
60.8506 104.558 li
60.8506 107.687 li
60.6865 107.687 li
cp
f
60.6865 103.901 mo
60.667 103.487 60.5898 103.215 60.4551 103.084 cv
60.3203 102.953 60.0361 102.888 59.6025 102.888 cv
55.8408 102.888 li
55.8408 103.89 li
55.4482 103.89 li
55.4482 102.888 li
54.8311 102.888 54.3096 102.804 53.8838 102.635 cv
53.0674 102.314 52.6592 101.726 52.6592 100.869 cv
52.6592 100.524 52.7275 100.216 52.8643 99.9443 cv
53.001 99.6724 53.1846 99.5361 53.415 99.5361 cv
53.5439 99.5361 53.6592 99.583 53.7607 99.6763 cv
53.8623 99.7695 53.9131 99.8823 53.9131 100.014 cv
53.9131 100.127 53.8789 100.224 53.8105 100.306 cv
53.7422 100.387 53.6221 100.484 53.4502 100.597 cv
53.2979 100.696 li
53.2158 100.751 53.1465 100.815 53.0898 100.889 cv
53.0332 100.962 53.0049 101.065 53.0049 101.198 cv
53.0049 101.493 53.1514 101.693 53.4443 101.798 cv
53.6006 101.856 53.8057 101.886 54.0596 101.886 cv
55.4482 101.886 li
55.4482 100.427 li
55.8408 100.427 li
55.8408 101.886 li
59.6025 101.886 li
60.0439 101.886 60.3262 101.826 60.4492 101.707 cv
60.5723 101.588 60.6514 101.276 60.6865 100.772 cv
60.8506 100.772 li
60.8506 103.901 li
60.6865 103.901 li
cp
f
40.1948 176.209 mo
40.6909 176.158 41.0093 176.046 41.1499 175.873 cv
41.2905 175.699 41.3608 175.296 41.3608 174.663 cv
41.3608 169.376 li
41.1968 169.183 li
41.021 168.977 40.8716 168.849 40.7485 168.8 cv
40.6255 168.751 40.4409 168.723 40.1948 168.715 cv
40.1948 168.492 li
42.2422 168.492 li
46.8745 174.233 li
46.8745 170.246 li
46.8745 169.59 46.7769 169.163 46.5815 168.965 cv
46.4526 168.837 46.1675 168.754 45.7261 168.715 cv
45.7261 168.492 li
48.5444 168.492 li
48.5444 168.715 li
48.0874 168.762 47.7827 168.873 47.6304 169.049 cv
47.478 169.225 47.4019 169.627 47.4019 170.256 cv
47.4019 176.572 li
47.1968 176.572 li
41.8882 169.992 li
41.8882 174.664 li
41.8882 175.319 41.9839 175.747 42.1753 175.946 cv
42.3003 176.074 42.5796 176.162 43.0132 176.209 cv
43.0132 176.432 li
40.1948 176.432 li
40.1948 176.209 li
cp
f
50.5835 171.006 mo
50.5835 174.756 li
50.5835 175.021 50.6206 175.234 50.6948 175.395 cv
50.8394 175.691 51.105 175.84 51.4917 175.84 cv
51.7573 175.84 52.0171 175.752 52.271 175.576 cv
52.4155 175.479 52.562 175.344 52.7104 175.172 cv
52.7104 171.961 li
52.7104 171.66 52.6519 171.463 52.5347 171.369 cv
52.4175 171.275 52.1831 171.219 51.8315 171.199 cv
51.8315 171.006 li
53.7241 171.006 li
53.7241 175.131 li
53.7241 175.396 53.772 175.579 53.8677 175.679 cv
53.9634 175.778 54.1655 175.822 54.4741 175.811 cv
54.4741 175.975 li
54.2593 176.033 54.1011 176.077 53.9995 176.106 cv
53.8979 176.136 53.728 176.189 53.4897 176.268 cv
53.3882 176.303 53.1655 176.387 52.8218 176.52 cv
52.8022 176.52 52.7905 176.511 52.7866 176.493 cv
52.7827 176.476 52.7808 176.455 52.7808 176.432 cv
52.7808 175.488 li
52.5151 175.805 52.2729 176.039 52.0542 176.191 cv
51.7222 176.426 51.3706 176.543 50.9995 176.543 cv
50.6597 176.543 50.3394 176.422 50.0386 176.179 cv
49.7339 175.94 49.5815 175.54 49.5815 174.977 cv
49.5815 171.932 li
49.5815 171.622 49.5151 171.414 49.3823 171.31 cv
49.2964 171.244 49.1128 171.197 48.8315 171.17 cv
48.8315 171.006 li
50.5835 171.006 li
cp
f
58.9712 171.283 mo
59.3247 171.534 59.5015 171.81 59.5015 172.109 cv
59.5015 172.238 59.4565 172.357 59.3667 172.468 cv
59.2769 172.579 59.1382 172.635 58.9507 172.635 cv
58.814 172.635 58.6938 172.588 58.5903 172.494 cv
58.4868 172.4 58.4116 172.264 58.3647 172.084 cv
58.2944 171.803 li
58.2437 171.596 58.1558 171.449 58.0308 171.363 cv
57.9019 171.281 57.7319 171.24 57.521 171.24 cv
57.0757 171.24 56.6997 171.435 56.3931 171.824 cv
56.0864 172.213 55.9331 172.73 55.9331 173.376 cv
55.9331 173.967 56.1021 174.497 56.4399 174.966 cv
56.7778 175.435 57.2339 175.67 57.8081 175.67 cv
58.2144 175.67 58.5757 175.537 58.8921 175.271 cv
59.0718 175.118 59.2749 174.875 59.5015 174.543 cv
59.6655 174.643 li
59.4429 175.112 59.2085 175.483 58.9624 175.757 cv
58.4897 176.281 57.9429 176.543 57.3218 176.543 cv
56.7124 176.543 56.1733 176.303 55.7046 175.822 cv
55.2358 175.342 55.0015 174.689 55.0015 173.865 cv
55.0015 173.057 55.2573 172.361 55.769 171.779 cv
56.2808 171.197 56.9272 170.906 57.7085 170.906 cv
58.1968 170.906 58.6177 171.032 58.9712 171.283 cv
cp
f
60.2983 176.268 mo
60.6616 176.232 60.9077 176.159 61.0366 176.048 cv
61.1655 175.937 61.23 175.719 61.23 175.395 cv
61.23 169.67 li
61.23 169.412 61.2085 169.234 61.1655 169.137 cv
61.0874 168.973 60.9292 168.891 60.6909 168.891 cv
60.6362 168.891 60.5767 168.896 60.5122 168.908 cv
60.4478 168.92 60.3667 168.938 60.269 168.961 cv
60.269 168.768 li
60.7964 168.627 61.4312 168.439 62.1733 168.205 cv
62.2007 168.205 62.2173 168.217 62.2231 168.24 cv
62.229 168.264 62.2319 168.314 62.2319 168.393 cv
62.2319 175.418 li
62.2319 175.758 62.2905 175.978 62.4077 176.077 cv
62.5249 176.177 62.7671 176.24 63.1343 176.268 cv
63.1343 176.432 li
60.2983 176.432 li
60.2983 176.268 li
cp
f
64.7749 171.955 mo
64.6499 172.166 64.5601 172.432 64.5054 172.752 cv
66.978 172.752 li
66.9351 172.361 66.8608 172.07 66.7554 171.879 cv
66.564 171.535 66.2437 171.363 65.7944 171.363 cv
65.3491 171.363 65.0093 171.561 64.7749 171.955 cv
cp
67.5815 171.507 mo
67.9956 171.888 68.2026 172.428 68.2026 173.127 cv
64.4819 173.127 li
64.521 174.031 64.7261 174.69 65.0972 175.103 cv
65.4683 175.516 65.9077 175.723 66.4155 175.723 cv
66.8257 175.723 67.1714 175.616 67.4526 175.401 cv
67.7339 175.187 67.9937 174.883 68.2319 174.489 cv
68.437 174.559 li
68.2769 175.056 67.9771 175.516 67.5376 175.938 cv
67.0981 176.361 66.5601 176.572 65.9233 176.572 cv
65.189 176.572 64.6216 176.295 64.2212 175.74 cv
63.8208 175.186 63.6206 174.547 63.6206 173.824 cv
63.6206 173.039 63.853 172.361 64.3179 171.791 cv
64.7827 171.221 65.3882 170.936 66.1343 170.936 cv
66.6851 170.936 67.1675 171.126 67.5815 171.507 cv
cp
f
72.1519 173.186 mo
71.7026 173.334 71.3315 173.498 71.0386 173.678 cv
70.4761 174.025 70.1948 174.42 70.1948 174.861 cv
70.1948 175.217 70.312 175.479 70.5464 175.646 cv
70.6987 175.756 70.8687 175.811 71.0562 175.811 cv
71.314 175.811 71.561 175.738 71.7974 175.594 cv
72.0337 175.449 72.1519 175.266 72.1519 175.043 cv
72.1519 173.186 li
cp
70.0015 173.848 mo
70.3608 173.613 71.0776 173.295 72.1519 172.893 cv
72.1519 172.395 li
72.1519 171.996 72.1128 171.719 72.0347 171.563 cv
71.9019 171.301 71.6265 171.17 71.2085 171.17 cv
71.0093 171.17 70.8198 171.221 70.6401 171.322 cv
70.4604 171.428 70.3706 171.572 70.3706 171.756 cv
70.3706 171.803 70.3804 171.882 70.3999 171.993 cv
70.4194 172.104 70.4292 172.176 70.4292 172.207 cv
70.4292 172.426 70.3569 172.578 70.2124 172.664 cv
70.1304 172.715 70.0327 172.74 69.9194 172.74 cv
69.7437 172.74 69.6089 172.683 69.5151 172.567 cv
69.4214 172.452 69.3745 172.324 69.3745 172.184 cv
69.3745 171.91 69.5435 171.624 69.8813 171.325 cv
70.2192 171.026 70.7144 170.877 71.3667 170.877 cv
72.1245 170.877 72.6382 171.123 72.9077 171.615 cv
73.0522 171.885 73.1245 172.277 73.1245 172.793 cv
73.1245 175.143 li
73.1245 175.369 73.1401 175.525 73.1714 175.611 cv
73.2222 175.764 73.3276 175.84 73.4878 175.84 cv
73.5776 175.84 73.6519 175.826 73.7104 175.799 cv
73.769 175.771 73.8706 175.705 74.0151 175.6 cv
74.0151 175.904 li
73.8901 176.057 73.7554 176.182 73.6108 176.279 cv
73.3921 176.428 73.1694 176.502 72.9429 176.502 cv
72.6772 176.502 72.4849 176.416 72.3657 176.244 cv
72.2466 176.072 72.1812 175.867 72.1694 175.629 cv
71.8726 175.887 71.6187 176.078 71.4077 176.203 cv
71.0522 176.414 70.7144 176.52 70.394 176.52 cv
70.0581 176.52 69.7671 176.401 69.521 176.165 cv
69.2749 175.929 69.1519 175.629 69.1519 175.266 cv
69.1519 174.699 69.4351 174.227 70.0015 173.848 cv
cp
f
74.0913 176.238 mo
74.4507 176.207 74.689 176.144 74.8062 176.048 cv
74.9233 175.952 74.9819 175.748 74.9819 175.436 cv
74.9819 172.793 li
74.9819 172.406 74.9458 172.13 74.8735 171.964 cv
74.8013 171.798 74.6694 171.715 74.478 171.715 cv
74.439 171.715 74.3872 171.72 74.3228 171.729 cv
74.2583 171.739 74.1909 171.752 74.1206 171.768 cv
74.1206 171.574 li
74.3423 171.496 74.5703 171.416 74.8042 171.334 cv
75.0376 171.252 75.1992 171.193 75.2886 171.158 cv
75.4834 171.084 75.6841 171 75.8901 170.906 cv
75.9175 170.906 75.9341 170.916 75.9399 170.936 cv
75.9458 170.955 75.9487 170.996 75.9487 171.059 cv
75.9487 172.02 li
76.1992 171.672 76.4414 171.4 76.6743 171.205 cv
76.9072 171.01 77.1494 170.912 77.3999 170.912 cv
77.5996 170.912 77.7622 170.972 77.8877 171.091 cv
78.0132 171.21 78.0757 171.359 78.0757 171.539 cv
78.0757 171.699 78.0278 171.834 77.9321 171.943 cv
77.8364 172.053 77.7163 172.107 77.5718 172.107 cv
77.4233 172.107 77.2739 172.039 77.1235 171.902 cv
76.9731 171.766 76.855 171.697 76.769 171.697 cv
76.6323 171.697 76.4644 171.808 76.2651 172.028 cv
76.0659 172.249 75.9663 172.477 75.9663 172.711 cv
75.9663 175.354 li
75.9663 175.689 76.0444 175.923 76.2007 176.054 cv
76.3569 176.185 76.6167 176.246 76.98 176.238 cv
76.98 176.432 li
74.0913 176.432 li
74.0913 176.238 li
cp
f
44.9585 188.268 mo
45.3218 188.232 45.5679 188.159 45.6968 188.048 cv
45.8257 187.937 45.8901 187.719 45.8901 187.395 cv
45.8901 181.67 li
45.8901 181.412 45.8687 181.234 45.8257 181.137 cv
45.7476 180.973 45.5894 180.891 45.3511 180.891 cv
45.2964 180.891 45.2368 180.896 45.1724 180.908 cv
45.1079 180.92 45.0269 180.938 44.9292 180.961 cv
44.9292 180.768 li
45.4565 180.627 46.0913 180.439 46.8335 180.205 cv
46.8608 180.205 46.8774 180.217 46.8833 180.24 cv
46.8892 180.264 46.8921 180.314 46.8921 180.393 cv
46.8921 187.418 li
46.8921 187.758 46.9507 187.978 47.0679 188.077 cv
47.1851 188.177 47.4272 188.24 47.7944 188.268 cv
47.7944 188.432 li
44.9585 188.432 li
44.9585 188.268 li
cp
f
50.0278 183.592 mo
49.6367 183.947 49.4409 184.561 49.4409 185.432 cv
49.4409 186.127 49.5981 186.775 49.9136 187.377 cv
50.2285 187.979 50.666 188.279 51.2256 188.279 cv
51.6636 188.279 52.0015 188.078 52.2383 187.676 cv
52.4751 187.273 52.5933 186.746 52.5933 186.094 cv
52.5933 185.418 52.4424 184.781 52.1411 184.184 cv
51.8398 183.586 51.4033 183.287 50.832 183.287 cv
50.5229 183.287 50.2549 183.389 50.0278 183.592 cv
cp
49.0923 183.741 mo
49.5864 183.204 50.2222 182.936 50.9995 182.936 cv
51.7729 182.936 52.4136 183.189 52.9214 183.697 cv
53.4292 184.205 53.6831 184.881 53.6831 185.725 cv
53.6831 186.502 53.437 187.178 52.9448 187.752 cv
52.4526 188.326 51.8159 188.613 51.0347 188.613 cv
50.2847 188.613 49.6499 188.338 49.1304 187.787 cv
48.6108 187.236 48.3511 186.545 48.3511 185.713 cv
48.3511 184.936 48.5981 184.278 49.0923 183.741 cv
cp
f
54.6733 186.586 mo
54.8667 186.586 li
54.9565 187.031 55.0771 187.373 55.229 187.611 cv
55.502 188.049 55.9014 188.268 56.4272 188.268 cv
56.7197 188.268 56.9507 188.187 57.1201 188.024 cv
57.2896 187.862 57.3745 187.652 57.3745 187.395 cv
57.3745 187.23 57.3257 187.072 57.228 186.92 cv
57.1304 186.768 56.9585 186.619 56.7124 186.475 cv
56.0566 186.1 li
55.5762 185.842 55.2227 185.582 54.9956 185.32 cv
54.769 185.059 54.6558 184.75 54.6558 184.395 cv
54.6558 183.957 54.812 183.598 55.1245 183.316 cv
55.437 183.035 55.8296 182.895 56.3022 182.895 cv
56.5093 182.895 56.7368 182.934 56.9849 183.012 cv
57.2329 183.09 57.3726 183.129 57.4038 183.129 cv
57.4741 183.129 57.5249 183.119 57.5562 183.1 cv
57.5874 183.08 57.6147 183.049 57.6382 183.006 cv
57.7788 183.006 li
57.8198 184.641 li
57.6382 184.641 li
57.5601 184.262 57.4546 183.967 57.3218 183.756 cv
57.0796 183.365 56.73 183.17 56.2729 183.17 cv
55.9995 183.17 55.7847 183.254 55.6284 183.422 cv
55.4722 183.59 55.394 183.787 55.394 184.014 cv
55.394 184.373 55.6636 184.693 56.2026 184.975 cv
56.9761 185.391 li
57.8081 185.844 58.2241 186.371 58.2241 186.973 cv
58.2241 187.434 58.0518 187.811 57.7065 188.104 cv
57.3613 188.396 56.9097 188.543 56.3525 188.543 cv
56.1182 188.543 55.853 188.504 55.5566 188.426 cv
55.2603 188.348 55.085 188.309 55.0303 188.309 cv
54.9834 188.309 54.9424 188.325 54.9077 188.358 cv
54.8726 188.392 54.8452 188.432 54.8257 188.479 cv
54.6733 188.479 li
54.6733 186.586 li
cp
f
59.3433 186.586 mo
59.5366 186.586 li
59.6265 187.031 59.7471 187.373 59.8989 187.611 cv
60.1719 188.049 60.5713 188.268 61.0972 188.268 cv
61.3896 188.268 61.6206 188.187 61.79 188.024 cv
61.9595 187.862 62.0444 187.652 62.0444 187.395 cv
62.0444 187.23 61.9956 187.072 61.8979 186.92 cv
61.8003 186.768 61.6284 186.619 61.3823 186.475 cv
60.7266 186.1 li
60.2461 185.842 59.8926 185.582 59.6655 185.32 cv
59.439 185.059 59.3257 184.75 59.3257 184.395 cv
59.3257 183.957 59.4819 183.598 59.7944 183.316 cv
60.1069 183.035 60.4995 182.895 60.9722 182.895 cv
61.1792 182.895 61.4067 182.934 61.6548 183.012 cv
61.9028 183.09 62.0425 183.129 62.0737 183.129 cv
62.144 183.129 62.1948 183.119 62.2261 183.1 cv
62.2573 183.08 62.2847 183.049 62.3081 183.006 cv
62.4487 183.006 li
62.4897 184.641 li
62.3081 184.641 li
62.23 184.262 62.1245 183.967 61.9917 183.756 cv
61.7495 183.365 61.3999 183.17 60.9429 183.17 cv
60.6694 183.17 60.4546 183.254 60.2983 183.422 cv
60.1421 183.59 60.064 183.787 60.064 184.014 cv
60.064 184.373 60.3335 184.693 60.8726 184.975 cv
61.646 185.391 li
62.478 185.844 62.894 186.371 62.894 186.973 cv
62.894 187.434 62.7217 187.811 62.3765 188.104 cv
62.0313 188.396 61.5796 188.543 61.0225 188.543 cv
60.7881 188.543 60.5229 188.504 60.2266 188.426 cv
59.9302 188.348 59.7549 188.309 59.7002 188.309 cv
59.6533 188.309 59.6123 188.325 59.5776 188.358 cv
59.5425 188.392 59.5151 188.432 59.4956 188.479 cv
59.3433 188.479 li
59.3433 186.586 li
cp
f
64.7749 183.955 mo
64.6499 184.166 64.5601 184.432 64.5054 184.752 cv
66.978 184.752 li
66.9351 184.361 66.8608 184.07 66.7554 183.879 cv
66.564 183.535 66.2437 183.363 65.7944 183.363 cv
65.3491 183.363 65.0093 183.561 64.7749 183.955 cv
cp
67.5815 183.507 mo
67.9956 183.888 68.2026 184.428 68.2026 185.127 cv
64.4819 185.127 li
64.521 186.031 64.7261 186.69 65.0972 187.103 cv
65.4683 187.516 65.9077 187.723 66.4155 187.723 cv
66.8257 187.723 67.1714 187.616 67.4526 187.401 cv
67.7339 187.187 67.9937 186.883 68.2319 186.489 cv
68.437 186.559 li
68.2769 187.056 67.9771 187.516 67.5376 187.938 cv
67.0981 188.361 66.5601 188.572 65.9233 188.572 cv
65.189 188.572 64.6216 188.295 64.2212 187.74 cv
63.8208 187.186 63.6206 186.547 63.6206 185.824 cv
63.6206 185.039 63.853 184.361 64.3179 183.791 cv
64.7827 183.221 65.3882 182.936 66.1343 182.936 cv
66.6851 182.936 67.1675 183.126 67.5815 183.507 cv
cp
f
69.3394 186.586 mo
69.5327 186.586 li
69.6226 187.031 69.7432 187.373 69.895 187.611 cv
70.168 188.049 70.5674 188.268 71.0933 188.268 cv
71.3857 188.268 71.6167 188.187 71.7861 188.024 cv
71.9556 187.862 72.0405 187.652 72.0405 187.395 cv
72.0405 187.23 71.9917 187.072 71.894 186.92 cv
71.7964 186.768 71.6245 186.619 71.3784 186.475 cv
70.7227 186.1 li
70.2422 185.842 69.8887 185.582 69.6616 185.32 cv
69.4351 185.059 69.3218 184.75 69.3218 184.395 cv
69.3218 183.957 69.478 183.598 69.7905 183.316 cv
70.103 183.035 70.4956 182.895 70.9683 182.895 cv
71.1753 182.895 71.4028 182.934 71.6509 183.012 cv
71.8989 183.09 72.0386 183.129 72.0698 183.129 cv
72.1401 183.129 72.1909 183.119 72.2222 183.1 cv
72.2534 183.08 72.2808 183.049 72.3042 183.006 cv
72.4448 183.006 li
72.4858 184.641 li
72.3042 184.641 li
72.2261 184.262 72.1206 183.967 71.9878 183.756 cv
71.7456 183.365 71.396 183.17 70.939 183.17 cv
70.6655 183.17 70.4507 183.254 70.2944 183.422 cv
70.1382 183.59 70.0601 183.787 70.0601 184.014 cv
70.0601 184.373 70.3296 184.693 70.8687 184.975 cv
71.6421 185.391 li
72.4741 185.844 72.8901 186.371 72.8901 186.973 cv
72.8901 187.434 72.7178 187.811 72.3726 188.104 cv
72.0273 188.396 71.5757 188.543 71.0186 188.543 cv
70.7842 188.543 70.519 188.504 70.2227 188.426 cv
69.9263 188.348 69.751 188.309 69.6963 188.309 cv
69.6494 188.309 69.6084 188.325 69.5737 188.358 cv
69.5386 188.392 69.5112 188.432 69.4917 188.479 cv
69.3394 188.479 li
69.3394 186.586 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
